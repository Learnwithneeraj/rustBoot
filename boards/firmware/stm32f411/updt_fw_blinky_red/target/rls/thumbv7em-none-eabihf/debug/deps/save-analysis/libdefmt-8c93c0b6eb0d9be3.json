{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0","program":"C:\\Users\\HP\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","defmt","--edition=2021","C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","codegen-units=1","-C","debuginfo=2","-C","metadata=8c93c0b6eb0d9be3","-C","extra-filename=-8c93c0b6eb0d9be3","--out-dir","c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\updt_fw_blinky_red\\target\\rls\\thumbv7em-none-eabihf\\debug\\deps","--target","thumbv7em-none-eabihf","-L","dependency=c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\updt_fw_blinky_red\\target\\rls\\thumbv7em-none-eabihf\\debug\\deps","-L","dependency=c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\updt_fw_blinky_red\\target\\rls\\debug\\deps","--extern","bitflags=c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\updt_fw_blinky_red\\target\\rls\\thumbv7em-none-eabihf\\debug\\deps\\libbitflags-a85ef65db2c3237d.rmeta","--extern","defmt_macros=c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\updt_fw_blinky_red\\target\\rls\\debug\\deps\\defmt_macros-a17952f1cdea6691.dll","--cap-lints","allow","-L","c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\updt_fw_blinky_red\\target\\rls\\thumbv7em-none-eabihf\\debug\\build\\defmt-4235cebfcc3ec9fe\\out","--error-format=json","--sysroot","C:\\Users\\HP\\.rustup/toolchains/nightly-x86_64-pc-windows-msvc"],"output":"c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\updt_fw_blinky_red\\target\\rls\\thumbv7em-none-eabihf\\debug\\deps\\libdefmt-8c93c0b6eb0d9be3.rmeta"},"prelude":{"crate_id":{"name":"defmt","disambiguator":[963549509086304173,0]},"crate_root":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src","external_crates":[{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[17152468072794654791,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[17051862311917027046,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7467457181772381774,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","num":4,"id":{"name":"bitflags","disambiguator":[4453956387953754556,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\mod.rs","num":5,"id":{"name":"defmt_macros","disambiguator":[1545662913325201110,0]}}],"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":0,"byte_end":13624,"line_start":1,"line_end":393,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":30840,"byte_end":30841,"line_start":8,"line_end":8,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"u64, i32, i128, u128, u8, i64, u16, isize, usize, i8, i16, u32","parent":{"krate":0,"index":33}},{"kind":"Use","ref_id":{"krate":4,"index":5},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":30861,"byte_end":30869,"line_start":9,"line_end":9,"column_start":19,"column_end":27},"alias_span":null,"name":"bitflags","value":"","parent":{"krate":0,"index":33}},{"kind":"Use","ref_id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":1939,"byte_end":1946,"line_start":57,"line_end":57,"column_start":15,"column_end":22},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":1964,"byte_end":1973,"line_start":58,"line_end":58,"column_start":17,"column_end":26},"alias_span":null,"name":"Formatter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":1975,"byte_end":1978,"line_start":58,"line_end":58,"column_start":28,"column_end":31},"alias_span":null,"name":"Str","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":2002,"byte_end":2014,"line_start":59,"line_end":59,"column_start":22,"column_end":34},"alias_span":null,"name":"Debug2Format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":2002,"byte_end":2014,"line_start":59,"line_end":59,"column_start":22,"column_end":34},"alias_span":null,"name":"Debug2Format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":2016,"byte_end":2030,"line_start":59,"line_end":59,"column_start":36,"column_end":50},"alias_span":null,"name":"Display2Format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":2016,"byte_end":2030,"line_start":59,"line_end":59,"column_start":36,"column_end":50},"alias_span":null,"name":"Display2Format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":339},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":2046,"byte_end":2052,"line_start":60,"line_end":60,"column_start":14,"column_end":20},"alias_span":null,"name":"Format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":2054,"byte_end":2060,"line_start":60,"line_end":60,"column_start":22,"column_end":28},"alias_span":null,"name":"Logger","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1278},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":2583,"byte_end":2590,"line_start":75,"line_end":75,"column_start":23,"column_end":30},"alias_span":null,"name":"assert","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1280},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":2958,"byte_end":2968,"line_start":84,"line_end":84,"column_start":23,"column_end":33},"alias_span":null,"name":"assert_eq","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1282},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":3339,"byte_end":3349,"line_start":93,"line_end":93,"column_start":23,"column_end":33},"alias_span":null,"name":"assert_ne","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1284},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":3729,"byte_end":3742,"line_start":102,"line_end":102,"column_start":23,"column_end":36},"alias_span":null,"name":"debug_assert","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1286},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":4134,"byte_end":4150,"line_start":111,"line_end":111,"column_start":23,"column_end":39},"alias_span":null,"name":"debug_assert_eq","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1288},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":4545,"byte_end":4561,"line_start":120,"line_end":120,"column_start":23,"column_end":39},"alias_span":null,"name":"debug_assert_ne","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1314},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":4944,"byte_end":4956,"line_start":129,"line_end":129,"column_start":23,"column_end":35},"alias_span":null,"name":"unreachable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1311},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":5314,"byte_end":5319,"line_start":138,"line_end":138,"column_start":23,"column_end":28},"alias_span":null,"name":"todo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1311},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":5697,"byte_end":5702,"line_start":147,"line_end":147,"column_start":23,"column_end":28},"alias_span":null,"name":"unimplemented","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1308},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":6065,"byte_end":6071,"line_start":156,"line_end":156,"column_start":23,"column_end":29},"alias_span":null,"name":"panic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1317},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":7240,"byte_end":7246,"line_start":191,"line_end":191,"column_start":23,"column_end":29},"alias_span":null,"name":"unwrap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1274},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":7791,"byte_end":7804,"line_start":204,"line_end":204,"column_start":23,"column_end":36},"alias_span":null,"name":"panic_handler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1292},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":8259,"byte_end":8265,"line_start":219,"line_end":219,"column_start":23,"column_end":29},"alias_span":null,"name":"intern","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1296},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":8476,"byte_end":8483,"line_start":226,"line_end":226,"column_start":23,"column_end":30},"alias_span":null,"name":"println","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1300},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":8678,"byte_end":8683,"line_start":233,"line_end":233,"column_start":23,"column_end":28},"alias_span":null,"name":"debug","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1306},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":8877,"byte_end":8882,"line_start":239,"line_end":239,"column_start":23,"column_end":28},"alias_span":null,"name":"error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1302},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":9075,"byte_end":9079,"line_start":245,"line_end":245,"column_start":23,"column_end":27},"alias_span":null,"name":"info","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1298},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":9273,"byte_end":9278,"line_start":251,"line_end":251,"column_start":23,"column_end":28},"alias_span":null,"name":"trace","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1304},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":9471,"byte_end":9475,"line_start":257,"line_end":257,"column_start":23,"column_end":27},"alias_span":null,"name":"warn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1290},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":9663,"byte_end":9666,"line_start":262,"line_end":262,"column_start":23,"column_end":26},"alias_span":null,"name":"dbg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1319},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":9782,"byte_end":9787,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"alias_span":null,"name":"write","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1272},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":10493,"byte_end":10506,"line_start":303,"line_end":303,"column_start":23,"column_end":36},"alias_span":null,"name":"global_logger","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1323},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":11229,"byte_end":11238,"line_start":323,"line_end":323,"column_start":23,"column_end":32},"alias_span":null,"name":"timestamp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1321},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":12298,"byte_end":12306,"line_start":355,"line_end":355,"column_start":23,"column_end":31},"alias_span":null,"name":"bitflags","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":1276},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":12390,"byte_end":12396,"line_start":358,"line_end":358,"column_start":23,"column_end":29},"alias_span":null,"name":"Format","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":0,"byte_end":13624,"line_start":1,"line_end":393,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":33},{"krate":0,"index":143},{"krate":0,"index":147},{"krate":0,"index":322},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":356},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":379},{"krate":0,"index":382},{"krate":0,"index":385},{"krate":0,"index":388},{"krate":0,"index":391},{"krate":0,"index":394},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":406},{"krate":0,"index":409},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":430},{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":439},{"krate":0,"index":442},{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450}],"decl_id":null,"docs":" A highly efficient logging framework that targets resource-constrained devices, like\n microcontrollers.","sig":null,"attributes":[{"value":"/ A highly efficient logging framework that targets resource-constrained devices, like","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":0,"byte_end":88,"line_start":1,"line_end":1,"column_start":1,"column_end":89}},{"value":"/ microcontrollers.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":89,"byte_end":110,"line_start":2,"line_end":2,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":111,"byte_end":114,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Check out the defmt book at <https://defmt.ferrous-systems.com> for more information about how","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":115,"byte_end":213,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ to use it.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":214,"byte_end":228,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":229,"byte_end":232,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Compatibility","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":233,"byte_end":252,"line_start":7,"line_end":7,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":253,"byte_end":256,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The `defmt` wire format might change between major versions. Attempting to read a defmt stream","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":257,"byte_end":355,"line_start":9,"line_end":9,"column_start":1,"column_end":99}},{"value":"/ with an incompatible version will result in an error. This means that you have to update both","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":356,"byte_end":453,"line_start":10,"line_end":10,"column_start":1,"column_end":98}},{"value":"/ the host and target side if a breaking change in defmt is released.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":454,"byte_end":525,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"no_std","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":571,"byte_end":577,"line_start":13,"line_end":13,"column_start":45,"column_end":51}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":761,"byte_end":783,"line_start":16,"line_end":16,"column_start":1,"column_end":23}}]},{"kind":"Static","id":{"krate":0,"index":5},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":1743,"byte_end":1757,"line_start":45,"line_end":45,"column_start":12,"column_end":26},"name":"DEFMT_ENCODING","qualname":"::DEFMT_ENCODING","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"used","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":1374,"byte_end":1381,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"link_section = \".defmt.end\"","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":1490,"byte_end":1517,"line_start":37,"line_end":37,"column_start":38,"column_end":65}},{"value":"export_name = \"_defmt_encoding_ = rzcobs\"","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":1649,"byte_end":1690,"line_start":41,"line_end":41,"column_start":5,"column_end":46}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":1694,"byte_end":1716,"line_start":43,"line_end":43,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":15503,"byte_end":15510,"line_start":36,"line_end":36,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::encoding::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":24}],"decl_id":null,"docs":" Encode raw defmt frames for sending over the wire.","sig":null,"attributes":[{"value":"/ Encode raw defmt frames for sending over the wire.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":13994,"byte_end":14048,"line_start":10,"line_end":10,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":14049,"byte_end":14052,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ defmt emits \"log frames\", which are sequences of bytes. The raw log frame data","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":14053,"byte_end":14135,"line_start":12,"line_end":12,"column_start":1,"column_end":83}},{"value":"/ is then *encoded* prior to sending over the wire.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":14136,"byte_end":14189,"line_start":13,"line_end":13,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":14190,"byte_end":14193,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ `Encoder` will encode the frames according to the currently selected","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":14194,"byte_end":14266,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ `encoding-*` Cargo feature. See `Cargo.toml` for the supported encodings","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":14267,"byte_end":14343,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ and their tradeoffs.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":14344,"byte_end":14368,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":14369,"byte_end":14372,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Encodings may perform two functions:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":14373,"byte_end":14413,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":14414,"byte_end":14417,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ - Framing: Adds extra data to allow the encoder to know when each frame starts","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":14418,"byte_end":14500,"line_start":21,"line_end":21,"column_start":1,"column_end":83}},{"value":"/ and ends in the stream. Unframed log frames already contain enough information for","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":14501,"byte_end":14587,"line_start":22,"line_end":22,"column_start":1,"column_end":87}},{"value":"/ the decoder to know when they end, so framing is optional. However, without framing","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":14588,"byte_end":14675,"line_start":23,"line_end":23,"column_start":1,"column_end":88}},{"value":"/ the decoder must receive all bytes intact or it may \"lose sync\". With framing, it can","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":14676,"byte_end":14765,"line_start":24,"line_end":24,"column_start":1,"column_end":90}},{"value":"/ recover from missing/corrupted data, and can start decoding from the \"middle\" of an","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":14766,"byte_end":14853,"line_start":25,"line_end":25,"column_start":1,"column_end":88}},{"value":"/ already-running stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":14854,"byte_end":14881,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/ - Compression: The frame data has rather low entropy (for example, it contains many","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":14882,"byte_end":14969,"line_start":27,"line_end":27,"column_start":1,"column_end":88}},{"value":"/ zero bytes due to encoding all integers in fixed with, and will likely contain many","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":14970,"byte_end":15057,"line_start":28,"line_end":28,"column_start":1,"column_end":88}},{"value":"/ repetitions). Compression can decrease the on-the-wire required bandwidth.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":15058,"byte_end":15136,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":15137,"byte_end":15140,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ defmt provides the `Encoder` separately instead of feeding already-encoded bytes","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":15141,"byte_end":15225,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/ to the `Logger` because `Logger` implementations may decide to allow","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":15226,"byte_end":15298,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/ concurrent logging from multiple \"contexts\" such as threads or interrupt","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":15299,"byte_end":15375,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ priority levels. In this case, the Logger implementation needs to create one","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":15376,"byte_end":15456,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ Encoder for each such context.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":15457,"byte_end":15491,"line_start":35,"line_end":35,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":15607,"byte_end":15610,"line_start":42,"line_end":42,"column_start":18,"column_end":21},"name":"new","qualname":"<Encoder>::new","value":"pub const fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Encoder`.\n","sig":null,"attributes":[{"value":"/ Create a new `Encoder`.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":15562,"byte_end":15589,"line_start":41,"line_end":41,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":16134,"byte_end":16145,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"name":"start_frame","qualname":"<Encoder>::start_frame","value":"pub fn start_frame<impl FnMut(&[u8]): FnMut(&[u8]) ->\n()>(&mut Self, impl FnMut(&[u8]))","parent":null,"children":[],"decl_id":null,"docs":" Start encoding a log frame.","sig":null,"attributes":[{"value":"/ Start encoding a log frame.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":15701,"byte_end":15732,"line_start":48,"line_end":48,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":15737,"byte_end":15740,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ `Logger` impls will typically call this from `acquire()`.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":15745,"byte_end":15806,"line_start":50,"line_end":50,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":15811,"byte_end":15814,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ You may only call `start_frame` when no frame is currently being encoded.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":15819,"byte_end":15896,"line_start":52,"line_end":52,"column_start":5,"column_end":82}},{"value":"/ Failure to do so may result in corrupted data on the wire.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":15901,"byte_end":15963,"line_start":53,"line_end":53,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":15968,"byte_end":15971,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ The `write` closure will be called with the encoded data that must","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":15976,"byte_end":16046,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/ be sent on the wire. It may be called zero, one, or multiple times.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":16051,"byte_end":16122,"line_start":56,"line_end":56,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":16665,"byte_end":16674,"line_start":70,"line_end":70,"column_start":12,"column_end":21},"name":"end_frame","qualname":"<Encoder>::end_frame","value":"pub fn end_frame<impl FnMut(&[u8]): FnMut(&[u8]) ->\n()>(&mut Self, impl FnMut(&[u8]))","parent":null,"children":[],"decl_id":null,"docs":" Finish encoding a log frame.","sig":null,"attributes":[{"value":"/ Finish encoding a log frame.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":16234,"byte_end":16266,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":16271,"byte_end":16274,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ `Logger` impls will typically call this from `release()`.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":16279,"byte_end":16340,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":16345,"byte_end":16348,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ You may only call `end_frame` when a frame is currently being encoded.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":16353,"byte_end":16427,"line_start":65,"line_end":65,"column_start":5,"column_end":79}},{"value":"/ Failure to do so may result in corrupted data on the wire.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":16432,"byte_end":16494,"line_start":66,"line_end":66,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":16499,"byte_end":16502,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ The `write` closure will be called with the encoded data that must","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":16507,"byte_end":16577,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ be sent on the wire. It may be called zero, one, or multiple times.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":16582,"byte_end":16653,"line_start":69,"line_end":69,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":17193,"byte_end":17198,"line_start":83,"line_end":83,"column_start":12,"column_end":17},"name":"write","qualname":"<Encoder>::write","value":"pub fn write<impl FnMut(&[u8]): FnMut(&[u8]) ->\n()>(&mut Self, &[u8], impl FnMut(&[u8]))","parent":null,"children":[],"decl_id":null,"docs":" Write part of data for a log frame.","sig":null,"attributes":[{"value":"/ Write part of data for a log frame.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":16761,"byte_end":16800,"line_start":74,"line_end":74,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":16805,"byte_end":16808,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ `Logger` impls will typically call this from `write()`.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":16813,"byte_end":16872,"line_start":76,"line_end":76,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":16877,"byte_end":16880,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ You may only call `write` when a frame is currently being encoded.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":16885,"byte_end":16955,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ Failure to do so may result in corrupted data on the wire.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":16960,"byte_end":17022,"line_start":79,"line_end":79,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":17027,"byte_end":17030,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ The `write` closure will be called with the encoded data that must","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":17035,"byte_end":17105,"line_start":81,"line_end":81,"column_start":5,"column_end":75}},{"value":"/ be sent on the wire. It may be called zero, one, or multiple times.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":17110,"byte_end":17181,"line_start":82,"line_end":82,"column_start":5,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"export","qualname":"::export","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":39},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":141}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":455},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\integers.rs","byte_start":35492,"byte_end":35494,"line_start":12,"line_end":12,"column_start":20,"column_end":22},"name":"u8","qualname":"::export::integers::u8","value":"pub fn u8(&u8)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\integers.rs","byte_start":35361,"byte_end":35386,"line_start":5,"line_end":5,"column_start":11,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":456},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\integers.rs","byte_start":35496,"byte_end":35499,"line_start":12,"line_end":12,"column_start":24,"column_end":27},"name":"u16","qualname":"::export::integers::u16","value":"pub fn u16(&u16)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\integers.rs","byte_start":35361,"byte_end":35386,"line_start":5,"line_end":5,"column_start":11,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\integers.rs","byte_start":35501,"byte_end":35504,"line_start":12,"line_end":12,"column_start":29,"column_end":32},"name":"u32","qualname":"::export::integers::u32","value":"pub fn u32(&u32)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\integers.rs","byte_start":35361,"byte_end":35386,"line_start":5,"line_end":5,"column_start":11,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\integers.rs","byte_start":35506,"byte_end":35509,"line_start":12,"line_end":12,"column_start":34,"column_end":37},"name":"u64","qualname":"::export::integers::u64","value":"pub fn u64(&u64)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\integers.rs","byte_start":35361,"byte_end":35386,"line_start":5,"line_end":5,"column_start":11,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":459},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\integers.rs","byte_start":35511,"byte_end":35515,"line_start":12,"line_end":12,"column_start":39,"column_end":43},"name":"u128","qualname":"::export::integers::u128","value":"pub fn u128(&u128)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\integers.rs","byte_start":35361,"byte_end":35386,"line_start":5,"line_end":5,"column_start":11,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\integers.rs","byte_start":35517,"byte_end":35519,"line_start":12,"line_end":12,"column_start":45,"column_end":47},"name":"i8","qualname":"::export::integers::i8","value":"pub fn i8(&i8)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\integers.rs","byte_start":35361,"byte_end":35386,"line_start":5,"line_end":5,"column_start":11,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\integers.rs","byte_start":35521,"byte_end":35524,"line_start":12,"line_end":12,"column_start":49,"column_end":52},"name":"i16","qualname":"::export::integers::i16","value":"pub fn i16(&i16)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\integers.rs","byte_start":35361,"byte_end":35386,"line_start":5,"line_end":5,"column_start":11,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":462},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\integers.rs","byte_start":35526,"byte_end":35529,"line_start":12,"line_end":12,"column_start":54,"column_end":57},"name":"i32","qualname":"::export::integers::i32","value":"pub fn i32(&i32)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\integers.rs","byte_start":35361,"byte_end":35386,"line_start":5,"line_end":5,"column_start":11,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":463},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\integers.rs","byte_start":35531,"byte_end":35534,"line_start":12,"line_end":12,"column_start":59,"column_end":62},"name":"i64","qualname":"::export::integers::i64","value":"pub fn i64(&i64)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\integers.rs","byte_start":35361,"byte_end":35386,"line_start":5,"line_end":5,"column_start":11,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":464},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\integers.rs","byte_start":35536,"byte_end":35540,"line_start":12,"line_end":12,"column_start":64,"column_end":68},"name":"i128","qualname":"::export::integers::i128","value":"pub fn i128(&i128)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\integers.rs","byte_start":35361,"byte_end":35386,"line_start":5,"line_end":5,"column_start":11,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\integers.rs","byte_start":35577,"byte_end":35582,"line_start":15,"line_end":15,"column_start":8,"column_end":13},"name":"usize","qualname":"::export::integers::usize","value":"pub fn usize(&usize)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\integers.rs","byte_start":35544,"byte_end":35569,"line_start":14,"line_end":14,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\integers.rs","byte_start":35670,"byte_end":35675,"line_start":20,"line_end":20,"column_start":8,"column_end":13},"name":"isize","qualname":"::export::integers::isize","value":"pub fn isize(&isize)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\integers.rs","byte_start":35637,"byte_end":35662,"line_start":19,"line_end":19,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\traits.rs","byte_start":35823,"byte_end":35831,"line_start":5,"line_end":5,"column_start":11,"column_end":19},"name":"Truncate","qualname":"::export::traits::Truncate","value":"Truncate<U>","parent":null,"children":[{"krate":0,"index":55}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\traits.rs","byte_start":35844,"byte_end":35852,"line_start":6,"line_end":6,"column_start":8,"column_end":16},"name":"truncate","qualname":"::export::traits::Truncate::truncate","value":"pub fn truncate(Self) -> U","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":495},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\traits.rs","byte_start":36531,"byte_end":36540,"line_start":40,"line_end":40,"column_start":12,"column_end":21},"name":"NoneError","qualname":"::export::traits::NoneError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\traits.rs","byte_start":36869,"byte_end":36879,"line_start":58,"line_end":58,"column_start":11,"column_end":21},"name":"IntoResult","qualname":"::export::traits::IntoResult","value":"IntoResult","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64}],"decl_id":null,"docs":" Transform `self` into a `Result`","sig":null,"attributes":[{"value":"/ Transform `self` into a `Result`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\traits.rs","byte_start":36776,"byte_end":36812,"line_start":54,"line_end":54,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\traits.rs","byte_start":36813,"byte_end":36816,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ # Call sites","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\traits.rs","byte_start":36817,"byte_end":36833,"line_start":56,"line_end":56,"column_start":1,"column_end":17}},{"value":"/ * [`defmt::unwrap!`]","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\traits.rs","byte_start":36834,"byte_end":36858,"line_start":57,"line_end":57,"column_start":1,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\traits.rs","byte_start":36891,"byte_end":36893,"line_start":59,"line_end":59,"column_start":10,"column_end":12},"name":"Ok","qualname":"::export::traits::IntoResult::Ok","value":"type Ok;","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\traits.rs","byte_start":36904,"byte_end":36909,"line_start":60,"line_end":60,"column_start":10,"column_end":15},"name":"Error","qualname":"::export::traits::IntoResult::Error","value":"type Error;","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\traits.rs","byte_start":36918,"byte_end":36929,"line_start":61,"line_end":61,"column_start":8,"column_end":19},"name":"into_result","qualname":"::export::traits::IntoResult::into_result","value":"pub fn into_result(Self) -> Result<Self::Ok, Self::Error>","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":30882,"byte_end":30893,"line_start":11,"line_end":11,"column_start":11,"column_end":22},"name":"UnsignedInt","qualname":"::export::UnsignedInt","value":"UnsignedInt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":31895,"byte_end":31902,"line_start":47,"line_end":47,"column_start":8,"column_end":15},"name":"acquire","qualname":"::export::acquire","value":"pub fn acquire()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"unstable-test\"))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":31831,"byte_end":31869,"line_start":45,"line_end":45,"column_start":1,"column_end":39}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":31870,"byte_end":31887,"line_start":46,"line_end":46,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":32116,"byte_end":32123,"line_start":59,"line_end":59,"column_start":8,"column_end":15},"name":"release","qualname":"::export::release","value":"pub fn release()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"unstable-test\"))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":32052,"byte_end":32090,"line_start":57,"line_end":57,"column_start":1,"column_end":39}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":32091,"byte_end":32108,"line_start":58,"line_end":58,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":32397,"byte_end":32402,"line_start":73,"line_end":73,"column_start":8,"column_end":13},"name":"write","qualname":"::export::write","value":"pub fn write(&[u8])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"unstable-test\"))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":32333,"byte_end":32371,"line_start":71,"line_end":71,"column_start":1,"column_end":39}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":32372,"byte_end":32389,"line_start":72,"line_end":72,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":32694,"byte_end":32703,"line_start":86,"line_end":86,"column_start":8,"column_end":17},"name":"timestamp","qualname":"::export::timestamp","value":"pub fn timestamp(crate::Formatter)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"unstable-test\"))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":32630,"byte_end":32668,"line_start":84,"line_end":84,"column_start":1,"column_end":39}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":32669,"byte_end":32686,"line_start":85,"line_end":85,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":32906,"byte_end":32915,"line_start":94,"line_end":94,"column_start":8,"column_end":17},"name":"make_istr","qualname":"::export::make_istr","value":"pub fn make_istr(u16) -> Str","parent":null,"children":[],"decl_id":null,"docs":" Returns the interned string at `address`.\n","sig":null,"attributes":[{"value":"/ Returns the interned string at `address`.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":32853,"byte_end":32898,"line_start":93,"line_end":93,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":32993,"byte_end":33007,"line_start":99,"line_end":99,"column_start":8,"column_end":22},"name":"make_formatter","qualname":"::export::make_formatter","value":"pub fn make_formatter<'a>() -> Formatter","parent":null,"children":[],"decl_id":null,"docs":" Create a Formatter.\n","sig":null,"attributes":[{"value":"/ Create a Formatter.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":32962,"byte_end":32985,"line_start":98,"line_end":98,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":33110,"byte_end":33118,"line_start":105,"line_end":105,"column_start":8,"column_end":16},"name":"truncate","qualname":"::export::truncate","value":"pub fn truncate<T,\nimpl traits::Truncate<T>: traits::Truncate<T>>(impl traits::Truncate<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":33185,"byte_end":33196,"line_start":109,"line_end":109,"column_start":8,"column_end":19},"name":"into_result","qualname":"::export::into_result","value":"pub fn into_result<T: traits::IntoResult>(T) -> Result<T::Ok, T::Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":119},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":33439,"byte_end":33444,"line_start":121,"line_end":121,"column_start":8,"column_end":13},"name":"panic","qualname":"::export::panic","value":"pub fn panic() -> !","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"unstable-test\"))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":33375,"byte_end":33413,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":33414,"byte_end":33431,"line_start":120,"line_end":120,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":33578,"byte_end":33581,"line_start":129,"line_end":129,"column_start":8,"column_end":11},"name":"fmt","qualname":"::export::fmt","value":"pub fn fmt<T: Format + ?Sized>(&T)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":33545,"byte_end":33570,"line_start":128,"line_end":128,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":33698,"byte_end":33707,"line_start":135,"line_end":135,"column_start":8,"column_end":17},"name":"fmt_slice","qualname":"::export::fmt_slice","value":"pub fn fmt_slice<T: Format>(&[T])","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":33665,"byte_end":33690,"line_start":134,"line_end":134,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":33888,"byte_end":33891,"line_start":144,"line_end":144,"column_start":8,"column_end":11},"name":"f32","qualname":"::export::f32","value":"pub fn f32(&f32)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":33855,"byte_end":33880,"line_start":143,"line_end":143,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":33982,"byte_end":33985,"line_start":149,"line_end":149,"column_start":8,"column_end":11},"name":"f64","qualname":"::export::f64","value":"pub fn f64(&f64)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":33949,"byte_end":33974,"line_start":148,"line_end":148,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":34076,"byte_end":34080,"line_start":154,"line_end":154,"column_start":8,"column_end":12},"name":"char","qualname":"::export::char","value":"pub fn char(&char)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":34043,"byte_end":34068,"line_start":153,"line_end":153,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":34141,"byte_end":34144,"line_start":158,"line_end":158,"column_start":8,"column_end":11},"name":"str","qualname":"::export::str","value":"pub fn str(&str)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":34212,"byte_end":34217,"line_start":163,"line_end":163,"column_start":8,"column_end":13},"name":"slice","qualname":"::export::slice","value":"pub fn slice(&[u8])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":34344,"byte_end":34352,"line_start":169,"line_end":169,"column_start":8,"column_end":16},"name":"u8_array","qualname":"::export::u8_array","value":"pub fn u8_array(&[u8])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":34458,"byte_end":34467,"line_start":174,"line_end":174,"column_start":8,"column_end":17},"name":"fmt_array","qualname":"::export::fmt_array","value":"pub fn fmt_array<T: Format>(&[T])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":34612,"byte_end":34616,"line_start":182,"line_end":182,"column_start":8,"column_end":12},"name":"istr","qualname":"::export::istr","value":"pub fn istr(&Str)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":34579,"byte_end":34604,"line_start":181,"line_end":181,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":34700,"byte_end":34704,"line_start":187,"line_end":187,"column_start":8,"column_end":12},"name":"bool","qualname":"::export::bool","value":"pub fn bool(&bool)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":34667,"byte_end":34692,"line_start":186,"line_end":186,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":34774,"byte_end":34779,"line_start":192,"line_end":192,"column_start":8,"column_end":13},"name":"debug","qualname":"::export::debug","value":"pub fn debug(&dyn core::fmt::Debug)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":34741,"byte_end":34766,"line_start":191,"line_end":191,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":34912,"byte_end":34919,"line_start":198,"line_end":198,"column_start":8,"column_end":15},"name":"display","qualname":"::export::display","value":"pub fn display(&dyn core::fmt::Display)","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail\n","sig":null,"attributes":[{"value":"/ Implementation detail","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":34879,"byte_end":34904,"line_start":197,"line_end":197,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":35043,"byte_end":35049,"line_start":204,"line_end":204,"column_start":8,"column_end":14},"name":"header","qualname":"::export::header","value":"pub fn header(&Str)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":35019,"byte_end":35035,"line_start":203,"line_end":203,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\formatter.rs","byte_start":37404,"byte_end":37413,"line_start":5,"line_end":5,"column_start":12,"column_end":21},"name":"Formatter","qualname":"::formatter::Formatter","value":"Formatter {  }","parent":null,"children":[{"krate":0,"index":511}],"decl_id":null,"docs":" Handle to a defmt logger.\n","sig":null,"attributes":[{"value":"/ Handle to a defmt logger.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\formatter.rs","byte_start":37340,"byte_end":37369,"line_start":3,"line_end":3,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\formatter.rs","byte_start":37590,"byte_end":37593,"line_start":13,"line_end":13,"column_start":12,"column_end":15},"name":"Str","qualname":"::formatter::Str","value":"Str {  }","parent":null,"children":[{"krate":0,"index":518}],"decl_id":null,"docs":" An interned string created via [`intern!`].","sig":null,"attributes":[{"value":"/ An interned string created via [`intern!`].","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\formatter.rs","byte_start":37469,"byte_end":37516,"line_start":9,"line_end":9,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\formatter.rs","byte_start":37517,"byte_end":37520,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`intern!`]: macro.intern.html","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\formatter.rs","byte_start":37521,"byte_end":37555,"line_start":11,"line_end":11,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":39315,"byte_end":39327,"line_start":25,"line_end":25,"column_start":12,"column_end":24},"name":"Debug2Format","qualname":"::impls::adapter::Debug2Format","value":"","parent":null,"children":[],"decl_id":null,"docs":" An \"adapter\" type to feed `Debug` values into defmt macros, which expect `defmt::Format` values.","sig":null,"attributes":[{"value":"/ An \"adapter\" type to feed `Debug` values into defmt macros, which expect `defmt::Format` values.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":38555,"byte_end":38655,"line_start":6,"line_end":6,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":38656,"byte_end":38659,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This adapter disables compression and uses the `core::fmt` code on-device! You should prefer","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":38660,"byte_end":38756,"line_start":8,"line_end":8,"column_start":1,"column_end":97}},{"value":"/ `defmt::Format` over `Debug` whenever possible.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":38757,"byte_end":38808,"line_start":9,"line_end":9,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":38809,"byte_end":38812,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":38813,"byte_end":38827,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":38828,"byte_end":38831,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":38832,"byte_end":38843,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/ # #[derive(Debug)]","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":38844,"byte_end":38866,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ # struct ExpensiveThing();","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":38867,"byte_end":38897,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/ # let expensive_thing = ExpensiveThing();","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":38898,"byte_end":38943,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/ #","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":38944,"byte_end":38949,"line_start":17,"line_end":17,"column_start":1,"column_end":6}},{"value":"/ defmt::info!(\"{:?}\", defmt::Debug2Format(&expensive_thing));","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":38950,"byte_end":39014,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ //                                        ˆˆˆˆˆˆˆˆˆˆˆˆˆˆˆ","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":39015,"byte_end":39091,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ //                                        must `#[derive(Debug)]`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":39092,"byte_end":39161,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":39162,"byte_end":39169,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":39170,"byte_end":39173,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Note that any provided defmt display hints will be ignored","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":39174,"byte_end":39236,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/ because this always uses `{:?}` to format the contained value.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":39237,"byte_end":39303,"line_start":24,"line_end":24,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":39356,"byte_end":39365,"line_start":25,"line_end":25,"column_start":53,"column_end":62},"name":"0","qualname":"::impls::adapter::Debug2Format::0","value":"&'a T","parent":{"krate":0,"index":170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":40559,"byte_end":40573,"line_start":63,"line_end":63,"column_start":12,"column_end":26},"name":"Display2Format","qualname":"::impls::adapter::Display2Format","value":"","parent":null,"children":[],"decl_id":null,"docs":" An \"adapter\" type to feed `Display` values into defmt macros, which expect `defmt::Format` values.","sig":null,"attributes":[{"value":"/ An \"adapter\" type to feed `Display` values into defmt macros, which expect `defmt::Format` values.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":39616,"byte_end":39718,"line_start":39,"line_end":39,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":39719,"byte_end":39722,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ This adapter disables compression and uses the `core::fmt` code on-device! You should prefer","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":39723,"byte_end":39819,"line_start":41,"line_end":41,"column_start":1,"column_end":97}},{"value":"/ `defmt::Format` over `Display` whenever possible.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":39820,"byte_end":39873,"line_start":42,"line_end":42,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":39874,"byte_end":39877,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":39878,"byte_end":39892,"line_start":44,"line_end":44,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":39893,"byte_end":39896,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":39897,"byte_end":39908,"line_start":46,"line_end":46,"column_start":1,"column_end":12}},{"value":"/ # struct ExpensiveThing();","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":39909,"byte_end":39939,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":39940,"byte_end":39945,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # impl core::fmt::Display for ExpensiveThing {","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":39946,"byte_end":39996,"line_start":49,"line_end":49,"column_start":1,"column_end":51}},{"value":"/ #     fn fmt(&self, f: &mut core::fmt::Formatter) -> core::fmt::Result {","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":39997,"byte_end":40073,"line_start":50,"line_end":50,"column_start":1,"column_end":77}},{"value":"/ #         write!(f, \"{}\", \"expensive\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":40074,"byte_end":40116,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":40117,"byte_end":40128,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/ #  }","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":40129,"byte_end":40137,"line_start":53,"line_end":53,"column_start":1,"column_end":9}},{"value":"/ # let expensive_thing = ExpensiveThing();","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":40138,"byte_end":40183,"line_start":54,"line_end":54,"column_start":1,"column_end":46}},{"value":"/ #","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":40184,"byte_end":40189,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ defmt::info!(\"{}\", defmt::Display2Format(&expensive_thing));","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":40190,"byte_end":40254,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"/ //                                        ˆˆˆˆˆˆˆˆˆˆˆˆˆˆˆ","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":40255,"byte_end":40331,"line_start":57,"line_end":57,"column_start":1,"column_end":62}},{"value":"/ //                                        must implement `fmt::Display`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":40332,"byte_end":40407,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":40408,"byte_end":40415,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":40416,"byte_end":40419,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Note that any provided defmt display hints will be ignored","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":40420,"byte_end":40482,"line_start":61,"line_end":61,"column_start":1,"column_end":63}},{"value":"/ because this always uses `{}` to format the contained value.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":40483,"byte_end":40547,"line_start":62,"line_end":62,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":40604,"byte_end":40613,"line_start":63,"line_end":63,"column_start":57,"column_end":66},"name":"0","qualname":"::impls::adapter::Display2Format::0","value":"&'a T","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":339},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53736,"byte_end":53742,"line_start":45,"line_end":45,"column_start":11,"column_end":17},"name":"Format","qualname":"::traits::Format","value":"Format","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342}],"decl_id":null,"docs":" Trait for types that can be formatted via defmt.","sig":null,"attributes":[{"value":"/ Trait for types that can be formatted via defmt.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":52681,"byte_end":52733,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":52734,"byte_end":52737,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This trait is used by the `{:?}` format specifier and can format a wide range of types.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":52738,"byte_end":52829,"line_start":9,"line_end":9,"column_start":1,"column_end":92}},{"value":"/ User-defined types can `#[derive(Format)]` to get an auto-generated implementation of this","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":52830,"byte_end":52924,"line_start":10,"line_end":10,"column_start":1,"column_end":95}},{"value":"/ trait.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":52925,"byte_end":52935,"line_start":11,"line_end":11,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":52936,"byte_end":52939,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ **Note**: The implementation of `#[derive(Format)]` assumes that no builtin types are shadowed","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":52940,"byte_end":53038,"line_start":13,"line_end":13,"column_start":1,"column_end":99}},{"value":"/ (for example by defining a `struct u8;`). This allows it to represent them more compactly.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53039,"byte_end":53133,"line_start":14,"line_end":14,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53134,"byte_end":53137,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53138,"byte_end":53151,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53152,"byte_end":53155,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Usually, an implementation of this trait can be `#[derive]`d automatically:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53156,"byte_end":53235,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53236,"byte_end":53239,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53240,"byte_end":53247,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use defmt::Format;","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53248,"byte_end":53270,"line_start":21,"line_end":21,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53271,"byte_end":53274,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ #[derive(Format)]","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53275,"byte_end":53296,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/ struct Header {","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53297,"byte_end":53316,"line_start":24,"line_end":24,"column_start":1,"column_end":20}},{"value":"/     source: u8,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53317,"byte_end":53336,"line_start":25,"line_end":25,"column_start":1,"column_end":20}},{"value":"/     destination: u8,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53337,"byte_end":53361,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/     sequence: u16,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53362,"byte_end":53384,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53385,"byte_end":53390,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53391,"byte_end":53398,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53399,"byte_end":53402,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Manual implementations can make use of the [`write!`] macro:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53403,"byte_end":53467,"line_start":31,"line_end":31,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53468,"byte_end":53471,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53472,"byte_end":53479,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ use defmt::{Format, Formatter, write};","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53480,"byte_end":53522,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53523,"byte_end":53526,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ struct Id(u32);","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53527,"byte_end":53546,"line_start":36,"line_end":36,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53547,"byte_end":53550,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ impl Format for Id {","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53551,"byte_end":53575,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"/     fn format(&self, fmt: Formatter) {","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53576,"byte_end":53618,"line_start":39,"line_end":39,"column_start":1,"column_end":43}},{"value":"/         // Format as hexadecimal.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53619,"byte_end":53656,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/         write!(fmt, \"Id({:x})\", self.0);","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53657,"byte_end":53701,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53702,"byte_end":53711,"line_start":42,"line_end":42,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53712,"byte_end":53717,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53718,"byte_end":53725,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53812,"byte_end":53818,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"format","qualname":"::traits::Format::format","value":"pub fn format(&Self, Formatter)","parent":{"krate":0,"index":339},"children":[],"decl_id":null,"docs":" Writes the defmt representation of `self` to `fmt`.\n","sig":null,"attributes":[{"value":"/ Writes the defmt representation of `self` to `fmt`.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53749,"byte_end":53804,"line_start":46,"line_end":46,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53870,"byte_end":53881,"line_start":50,"line_end":50,"column_start":8,"column_end":19},"name":"_format_tag","qualname":"::traits::Format::_format_tag","value":"pub fn _format_tag() -> Str","parent":{"krate":0,"index":339},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":53975,"byte_end":53987,"line_start":55,"line_end":55,"column_start":8,"column_end":20},"name":"_format_data","qualname":"::traits::Format::_format_data","value":"pub fn _format_data(&Self)","parent":{"krate":0,"index":339},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":55564,"byte_end":55570,"line_start":89,"line_end":89,"column_start":18,"column_end":24},"name":"Logger","qualname":"::traits::Logger","value":"Logger","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347}],"decl_id":null,"docs":" Global logger acquire-release mechanism","sig":null,"attributes":[{"value":"/ Global logger acquire-release mechanism","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":54092,"byte_end":54135,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":54136,"byte_end":54139,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This trait's methods will be called by the defmt logging macros to transmit the","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":54140,"byte_end":54223,"line_start":63,"line_end":63,"column_start":1,"column_end":84}},{"value":"/ encoded log data over the wire. The call order is:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":54224,"byte_end":54278,"line_start":64,"line_end":64,"column_start":1,"column_end":55}},{"value":"/ - One `acquire()` call to start the log frame.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":54279,"byte_end":54329,"line_start":65,"line_end":65,"column_start":1,"column_end":51}},{"value":"/ - Multiple `write()` calls, with fragments of the log frame data each.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":54330,"byte_end":54404,"line_start":66,"line_end":66,"column_start":1,"column_end":75}},{"value":"/ - One `release()` call.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":54405,"byte_end":54432,"line_start":67,"line_end":67,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":54433,"byte_end":54436,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ The data passed to `write()` is *unencoded*. Implementations MUST encode it with `Encoder`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":54437,"byte_end":54531,"line_start":69,"line_end":69,"column_start":1,"column_end":95}},{"value":"/ prior to sending it over the wire. The simplest way is for `acquire()` to call `Encoder::start_frame()`,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":54532,"byte_end":54640,"line_start":70,"line_end":70,"column_start":1,"column_end":109}},{"value":"/ `write()` to call `Encoder::write()`, and `release()` to call `Encoder::end_frame()`.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":54641,"byte_end":54730,"line_start":71,"line_end":71,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":54731,"byte_end":54734,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ The global logger can be acquired once for each \"execution context\". The definition","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":54735,"byte_end":54822,"line_start":73,"line_end":73,"column_start":1,"column_end":88}},{"value":"/ of execution context is up to the implementation. For example, it can be:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":54823,"byte_end":54900,"line_start":74,"line_end":74,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":54901,"byte_end":54904,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ - the entire process.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":54905,"byte_end":54930,"line_start":76,"line_end":76,"column_start":1,"column_end":26}},{"value":"/ - one thread in std environments.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":54931,"byte_end":54968,"line_start":77,"line_end":77,"column_start":1,"column_end":38}},{"value":"/ - one interrupt priority level in embedded devices.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":54969,"byte_end":55024,"line_start":78,"line_end":78,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":55025,"byte_end":55028,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # Safety contract","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":55029,"byte_end":55050,"line_start":80,"line_end":80,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":55051,"byte_end":55054,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ - `acquire` logically acquires the global logger in the current execution context.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":55055,"byte_end":55141,"line_start":82,"line_end":82,"column_start":1,"column_end":87}},{"value":"/   The acquiring is tracked internally, no Rust object is returned representing ownership.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":55142,"byte_end":55235,"line_start":83,"line_end":83,"column_start":1,"column_end":94}},{"value":"/ - `acquire` is a safe function, therefore it must be thread-safe and interrupt-safe","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":55236,"byte_end":55323,"line_start":84,"line_end":84,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":55324,"byte_end":55327,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ And, not safety related, the methods should never be invoked from user code. The easiest way to","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":55328,"byte_end":55427,"line_start":86,"line_end":86,"column_start":1,"column_end":100}},{"value":"/ ensure this is to implement `Logger` on a *private* `struct` and mark that `struct` as the","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":55428,"byte_end":55522,"line_start":87,"line_end":87,"column_start":1,"column_end":95}},{"value":"/ `#[global_logger]`.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":55523,"byte_end":55546,"line_start":88,"line_end":88,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":55850,"byte_end":55857,"line_start":95,"line_end":95,"column_start":8,"column_end":15},"name":"acquire","qualname":"::traits::Logger::acquire","value":"pub fn acquire()","parent":{"krate":0,"index":343},"children":[],"decl_id":null,"docs":" Acquire the global logger in the current execution context.","sig":null,"attributes":[{"value":"/ Acquire the global logger in the current execution context.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":55577,"byte_end":55640,"line_start":90,"line_end":90,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":55645,"byte_end":55648,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This will be called by the defmt logging macros before writing each log frame.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":55653,"byte_end":55735,"line_start":92,"line_end":92,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":55740,"byte_end":55743,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Panics if already acquired in the current execution context. Otherwise it must never fail.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":55748,"byte_end":55842,"line_start":94,"line_end":94,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":56220,"byte_end":56225,"line_start":104,"line_end":104,"column_start":15,"column_end":20},"name":"flush","qualname":"::traits::Logger::flush","value":"pub unsafe fn flush()","parent":{"krate":0,"index":343},"children":[],"decl_id":null,"docs":" Block until host has read all pending data.","sig":null,"attributes":[{"value":"/ Block until host has read all pending data.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":55866,"byte_end":55913,"line_start":97,"line_end":97,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":55918,"byte_end":55921,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ The flush operation must not fail. This is a \"best effort\" operation, I/O errors should be discarded.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":55926,"byte_end":56031,"line_start":99,"line_end":99,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":56036,"byte_end":56039,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":56044,"byte_end":56056,"line_start":101,"line_end":101,"column_start":5,"column_end":17}},{"value":"/ Must only be called when the global logger is acquired in the current execution context.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":56061,"byte_end":56153,"line_start":102,"line_end":102,"column_start":5,"column_end":97}},{"value":"/ (i.e. between `acquire()` and `release()`).","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":56158,"byte_end":56205,"line_start":103,"line_end":103,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":56519,"byte_end":56526,"line_start":112,"line_end":112,"column_start":15,"column_end":22},"name":"release","qualname":"::traits::Logger::release","value":"pub unsafe fn release()","parent":{"krate":0,"index":343},"children":[],"decl_id":null,"docs":" Releases the global logger in the current execution context.","sig":null,"attributes":[{"value":"/ Releases the global logger in the current execution context.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":56234,"byte_end":56298,"line_start":106,"line_end":106,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":56303,"byte_end":56306,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This will be called by the defmt logging macros after writing each log frame.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":56311,"byte_end":56392,"line_start":108,"line_end":108,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":56397,"byte_end":56400,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":56405,"byte_end":56417,"line_start":110,"line_end":110,"column_start":5,"column_end":17}},{"value":"/ Must be called exactly once for each acquire(), in the same execution context.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":56422,"byte_end":56504,"line_start":111,"line_end":111,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":57342,"byte_end":57347,"line_start":129,"line_end":129,"column_start":15,"column_end":20},"name":"write","qualname":"::traits::Logger::write","value":"pub unsafe fn write(&[u8])","parent":{"krate":0,"index":343},"children":[],"decl_id":null,"docs":" Writes `bytes` to the destination.","sig":null,"attributes":[{"value":"/ Writes `bytes` to the destination.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":56535,"byte_end":56573,"line_start":114,"line_end":114,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":56578,"byte_end":56581,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ This will be called by the defmt logging macros to transmit frame data. One log frame may cause multiple `write` calls.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":56586,"byte_end":56709,"line_start":116,"line_end":116,"column_start":5,"column_end":128}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":56714,"byte_end":56717,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The write operation must not fail. This is a \"best effort\" operation, I/O errors should be discarded.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":56722,"byte_end":56827,"line_start":118,"line_end":118,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":56832,"byte_end":56835,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The `bytes` are unencoded log frame data, they MUST be encoded with `Encoder` prior to","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":56840,"byte_end":56930,"line_start":120,"line_end":120,"column_start":5,"column_end":95}},{"value":"/ sending over the wire.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":56935,"byte_end":56961,"line_start":121,"line_end":121,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":56966,"byte_end":56969,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Note that a call to `write` does *not* correspond to a defmt logging macro invocation. A","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":56974,"byte_end":57066,"line_start":123,"line_end":123,"column_start":5,"column_end":97}},{"value":"/ single `defmt::info!` call can result in an arbitrary number of `write` calls.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":57071,"byte_end":57153,"line_start":124,"line_end":124,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":57158,"byte_end":57161,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":57166,"byte_end":57178,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/ Must only be called when the global logger is acquired in the current execution context.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":57183,"byte_end":57275,"line_start":127,"line_end":127,"column_start":5,"column_end":97}},{"value":"/ (i.e. between `acquire()` and `release()`).","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\traits.rs","byte_start":57280,"byte_end":57327,"line_start":128,"line_end":128,"column_start":5,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":13129,"byte_end":13134,"line_start":377,"line_end":377,"column_start":8,"column_end":13},"name":"flush","qualname":"::flush","value":"pub fn flush()","parent":null,"children":[],"decl_id":null,"docs":" Block until host has read all pending data.","sig":null,"attributes":[{"value":"/ Block until host has read all pending data.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":12713,"byte_end":12760,"line_start":370,"line_end":370,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":12761,"byte_end":12764,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ The flush operation will not fail, but might not succeed in flushing _all_ pending data. It is","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":12765,"byte_end":12863,"line_start":372,"line_end":372,"column_start":1,"column_end":99}},{"value":"/ implemented as a \"best effort\" operation.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":12864,"byte_end":12909,"line_start":373,"line_end":373,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":12910,"byte_end":12913,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/ This calls the method `flush` of the used \"global [`Logger`]\". The logger is likely provided by","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":12914,"byte_end":13013,"line_start":375,"line_end":375,"column_start":1,"column_end":100}},{"value":"/ [`defmt-rtt`](https://crates.io/crates/defmt-rtt) or [`defmt-itm`](https://crates.io/crates/defmt-itm).","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":13014,"byte_end":13121,"line_start":376,"line_end":376,"column_start":1,"column_end":108}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\rzcobs.rs","byte_start":17793,"byte_end":17800,"line_start":18,"line_end":18,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":15548,"byte_end":15555,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\traits.rs","byte_start":36559,"byte_end":36568,"line_start":42,"line_end":42,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\traits.rs","byte_start":36996,"byte_end":37002,"line_start":64,"line_end":64,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\traits.rs","byte_start":37184,"byte_end":37190,"line_start":74,"line_end":74,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":35154,"byte_end":35162,"line_start":211,"line_end":211,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":39409,"byte_end":39421,"line_start":27,"line_end":27,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":40659,"byte_end":40673,"line_start":65,"line_end":65,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\alloc_.rs","byte_start":45634,"byte_end":45640,"line_start":5,"line_end":5,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\array.rs","byte_start":45896,"byte_end":45913,"line_start":5,"line_end":5,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\num.rs","byte_start":46761,"byte_end":46776,"line_start":28,"line_end":28,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\ops.rs","byte_start":46925,"byte_end":46930,"line_start":3,"line_end":3,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\ops.rs","byte_start":47100,"byte_end":47109,"line_start":12,"line_end":12,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\ops.rs","byte_start":47262,"byte_end":47271,"line_start":21,"line_end":21,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\ops.rs","byte_start":47388,"byte_end":47402,"line_start":27,"line_end":27,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\ops.rs","byte_start":47577,"byte_end":47584,"line_start":36,"line_end":36,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\ops.rs","byte_start":47740,"byte_end":47756,"line_start":45,"line_end":45,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\slice.rs","byte_start":47936,"byte_end":47947,"line_start":3,"line_end":3,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\slice.rs","byte_start":48112,"byte_end":48116,"line_start":12,"line_end":12,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\slice.rs","byte_start":48366,"byte_end":48373,"line_start":25,"line_end":25,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\mod.rs","byte_start":43742,"byte_end":43748,"line_start":17,"line_end":17,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":648},{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\mod.rs","byte_start":44180,"byte_end":44186,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":261},{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\mod.rs","byte_start":44764,"byte_end":44775,"line_start":70,"line_end":70,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":265},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\mod.rs","byte_start":44966,"byte_end":44976,"line_start":82,"line_end":82,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":654},{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\mod.rs","byte_start":45182,"byte_end":45190,"line_start":96,"line_end":96,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\mod.rs","byte_start":45444,"byte_end":45447,"line_start":107,"line_end":107,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\lib.rs","byte_start":1805,"byte_end":1811,"line_start":49,"line_end":49,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":33}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\rzcobs.rs","byte_start":17793,"byte_end":17800,"line_start":18,"line_end":18,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":8},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\encoding\\mod.rs","byte_start":15548,"byte_end":15555,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":23},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\traits.rs","byte_start":36559,"byte_end":36568,"line_start":42,"line_end":42,"column_start":17,"column_end":26},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":495},"to":{"krate":0,"index":339}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\traits.rs","byte_start":36996,"byte_end":37002,"line_start":64,"line_end":64,"column_start":24,"column_end":30},"kind":{"Impl":{"id":18}},"from":{"krate":1,"index":39093},"to":{"krate":0,"index":61}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\traits.rs","byte_start":37184,"byte_end":37190,"line_start":74,"line_end":74,"column_start":27,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":1,"index":39220},"to":{"krate":0,"index":61}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\export\\mod.rs","byte_start":35154,"byte_end":35162,"line_start":211,"line_end":211,"column_start":27,"column_end":35},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":139},"to":{"krate":1,"index":9528}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":39409,"byte_end":39421,"line_start":27,"line_end":27,"column_start":41,"column_end":53},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":170},"to":{"krate":0,"index":339}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\adapter.rs","byte_start":40659,"byte_end":40673,"line_start":65,"line_end":65,"column_start":43,"column_end":57},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":179},"to":{"krate":0,"index":339}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\alloc_.rs","byte_start":45634,"byte_end":45640,"line_start":5,"line_end":5,"column_start":24,"column_end":30},"kind":{"Impl":{"id":28}},"from":{"krate":1,"index":41863},"to":{"krate":0,"index":339}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\array.rs","byte_start":45896,"byte_end":45913,"line_start":5,"line_end":5,"column_start":24,"column_end":41},"kind":{"Impl":{"id":29}},"from":{"krate":1,"index":37826},"to":{"krate":0,"index":339}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\num.rs","byte_start":46761,"byte_end":46776,"line_start":28,"line_end":28,"column_start":22,"column_end":37},"kind":{"Impl":{"id":42}},"from":{"krate":1,"index":16433},"to":{"krate":0,"index":339}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\ops.rs","byte_start":46925,"byte_end":46930,"line_start":3,"line_end":3,"column_start":33,"column_end":38},"kind":{"Impl":{"id":43}},"from":{"krate":1,"index":37619},"to":{"krate":0,"index":339}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\ops.rs","byte_start":47100,"byte_end":47109,"line_start":12,"line_end":12,"column_start":33,"column_end":42},"kind":{"Impl":{"id":44}},"from":{"krate":1,"index":37644},"to":{"krate":0,"index":339}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\ops.rs","byte_start":47262,"byte_end":47271,"line_start":21,"line_end":21,"column_start":28,"column_end":37},"kind":{"Impl":{"id":45}},"from":{"krate":1,"index":37603},"to":{"krate":0,"index":339}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\ops.rs","byte_start":47388,"byte_end":47402,"line_start":27,"line_end":27,"column_start":33,"column_end":47},"kind":{"Impl":{"id":46}},"from":{"krate":1,"index":37688},"to":{"krate":0,"index":339}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\ops.rs","byte_start":47577,"byte_end":47584,"line_start":36,"line_end":36,"column_start":33,"column_end":40},"kind":{"Impl":{"id":47}},"from":{"krate":1,"index":37665},"to":{"krate":0,"index":339}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\ops.rs","byte_start":47740,"byte_end":47756,"line_start":45,"line_end":45,"column_start":33,"column_end":49},"kind":{"Impl":{"id":48}},"from":{"krate":1,"index":37711},"to":{"krate":0,"index":339}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\slice.rs","byte_start":47936,"byte_end":47947,"line_start":3,"line_end":3,"column_start":41,"column_end":52},"kind":{"Impl":{"id":49}},"from":{"krate":1,"index":40735},"to":{"krate":0,"index":339}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\slice.rs","byte_start":48112,"byte_end":48116,"line_start":12,"line_end":12,"column_start":41,"column_end":45},"kind":{"Impl":{"id":50}},"from":{"krate":1,"index":10347},"to":{"krate":0,"index":339}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\slice.rs","byte_start":48366,"byte_end":48373,"line_start":25,"line_end":25,"column_start":41,"column_end":48},"kind":{"Impl":{"id":51}},"from":{"krate":1,"index":40708},"to":{"krate":0,"index":339}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\mod.rs","byte_start":43742,"byte_end":43748,"line_start":17,"line_end":17,"column_start":20,"column_end":26},"kind":{"Impl":{"id":52}},"from":{"krate":1,"index":39093},"to":{"krate":0,"index":339}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\mod.rs","byte_start":44180,"byte_end":44186,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"kind":{"Impl":{"id":53}},"from":{"krate":1,"index":39220},"to":{"krate":0,"index":339}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\mod.rs","byte_start":44764,"byte_end":44775,"line_start":70,"line_end":70,"column_start":34,"column_end":45},"kind":{"Impl":{"id":54}},"from":{"krate":1,"index":3041},"to":{"krate":0,"index":339}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\mod.rs","byte_start":44966,"byte_end":44976,"line_start":82,"line_end":82,"column_start":32,"column_end":42},"kind":{"Impl":{"id":55}},"from":{"krate":1,"index":30551},"to":{"krate":0,"index":339}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\mod.rs","byte_start":45182,"byte_end":45190,"line_start":96,"line_end":96,"column_start":29,"column_end":37},"kind":{"Impl":{"id":56}},"from":{"krate":1,"index":41648},"to":{"krate":0,"index":339}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\defmt-0.3.0\\src\\impls\\core_\\mod.rs","byte_start":45444,"byte_end":45447,"line_start":107,"line_end":107,"column_start":35,"column_end":38},"kind":{"Impl":{"id":57}},"from":{"krate":1,"index":38406},"to":{"krate":0,"index":339}}]}