{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1","program":"C:\\Users\\HP\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","stm32f4xx_hal","--edition=2018","C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","codegen-units=1","-C","debuginfo=2","--cfg","feature=\"device-selected\"","--cfg","feature=\"gpiod\"","--cfg","feature=\"gpioe\"","--cfg","feature=\"i2c3\"","--cfg","feature=\"otg-fs\"","--cfg","feature=\"rt\"","--cfg","feature=\"sdio\"","--cfg","feature=\"spi3\"","--cfg","feature=\"spi4\"","--cfg","feature=\"spi5\"","--cfg","feature=\"stm32f411\"","--cfg","feature=\"tim2\"","-C","metadata=f415e4df69047cb5","-C","extra-filename=-f415e4df69047cb5","--out-dir","c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\updt_fw_blinky_red\\target\\rls\\thumbv7em-none-eabihf\\debug\\deps","--target","thumbv7em-none-eabihf","-L","dependency=c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\updt_fw_blinky_red\\target\\rls\\thumbv7em-none-eabihf\\debug\\deps","-L","dependency=c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\updt_fw_blinky_red\\target\\rls\\debug\\deps","--extern","bare_metal=c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\updt_fw_blinky_red\\target\\rls\\thumbv7em-none-eabihf\\debug\\deps\\libbare_metal-e643800a774920af.rmeta","--extern","cast=c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\updt_fw_blinky_red\\target\\rls\\thumbv7em-none-eabihf\\debug\\deps\\libcast-30c6b09d2aa46b92.rmeta","--extern","cortex_m=c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\updt_fw_blinky_red\\target\\rls\\thumbv7em-none-eabihf\\debug\\deps\\libcortex_m-5335c60f58f90e35.rmeta","--extern","cortex_m_rt=c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\updt_fw_blinky_red\\target\\rls\\thumbv7em-none-eabihf\\debug\\deps\\libcortex_m_rt-4a5893f26f5bb240.rmeta","--extern","embedded_dma=c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\updt_fw_blinky_red\\target\\rls\\thumbv7em-none-eabihf\\debug\\deps\\libembedded_dma-343c69d5b0414f84.rmeta","--extern","embedded_hal=c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\updt_fw_blinky_red\\target\\rls\\thumbv7em-none-eabihf\\debug\\deps\\libembedded_hal-335a2b11659737e8.rmeta","--extern","nb=c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\updt_fw_blinky_red\\target\\rls\\thumbv7em-none-eabihf\\debug\\deps\\libnb-75b9a5a3dcda007a.rmeta","--extern","rand_core=c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\updt_fw_blinky_red\\target\\rls\\thumbv7em-none-eabihf\\debug\\deps\\librand_core-6480afae6bc3aca9.rmeta","--extern","rtcc=c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\updt_fw_blinky_red\\target\\rls\\thumbv7em-none-eabihf\\debug\\deps\\librtcc-ab4fbe2f5f2c7bff.rmeta","--extern","stm32f4=c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\updt_fw_blinky_red\\target\\rls\\thumbv7em-none-eabihf\\debug\\deps\\libstm32f4-3d3ba7d4e40134b5.rmeta","--extern","void=c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\updt_fw_blinky_red\\target\\rls\\thumbv7em-none-eabihf\\debug\\deps\\libvoid-4576f0c310862f78.rmeta","--cap-lints","allow","-L","c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\updt_fw_blinky_red\\target\\rls\\thumbv7em-none-eabihf\\debug\\build\\cortex-m-468d2fa0436c98ed\\out","-L","c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\updt_fw_blinky_red\\target\\rls\\thumbv7em-none-eabihf\\debug\\build\\cortex-m-rt-bd372b670e4defe2\\out","-L","c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\updt_fw_blinky_red\\target\\rls\\thumbv7em-none-eabihf\\debug\\build\\stm32f4-55360a1025a60466\\out","--error-format=json","--sysroot","C:\\Users\\HP\\.rustup/toolchains/nightly-x86_64-pc-windows-msvc"],"output":"c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\updt_fw_blinky_red\\target\\rls\\thumbv7em-none-eabihf\\debug\\deps\\libstm32f4xx_hal-f415e4df69047cb5.rmeta"},"prelude":{"crate_id":{"name":"stm32f4xx_hal","disambiguator":[7577827233676903598,0]},"crate_root":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src","external_crates":[{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[17152468072794654791,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[17051862311917027046,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7467457181772381774,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","num":4,"id":{"name":"embedded_hal","disambiguator":[14414825259313991299,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","num":5,"id":{"name":"nb","disambiguator":[9984866355904341263,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","num":6,"id":{"name":"nb","disambiguator":[49378123468056211,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","num":7,"id":{"name":"void","disambiguator":[3684023994566067021,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","num":8,"id":{"name":"stm32f4","disambiguator":[8747595695931691416,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\delay\\syst.rs","num":9,"id":{"name":"cortex_m","disambiguator":[8433155213977546304,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","num":10,"id":{"name":"bare_metal","disambiguator":[14014839698375259467,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","num":11,"id":{"name":"volatile_register","disambiguator":[2558430349867861149,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","num":12,"id":{"name":"vcell","disambiguator":[8820141899544498945,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","num":13,"id":{"name":"cortex_m_rt","disambiguator":[11100567474913181280,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","num":14,"id":{"name":"cortex_m_rt_macros","disambiguator":[12236761459395507261,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","num":15,"id":{"name":"r0","disambiguator":[1515441288901241810,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\delay\\syst.rs","num":16,"id":{"name":"cast","disambiguator":[12932884930273402530,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","num":17,"id":{"name":"embedded_dma","disambiguator":[9775104514929442219,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","num":18,"id":{"name":"stable_deref_trait","disambiguator":[8414296240448430208,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rtc.rs","num":19,"id":{"name":"rtcc","disambiguator":[4593539152966334959,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rtc.rs","num":20,"id":{"name":"chrono","disambiguator":[5509580100564359311,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rtc.rs","num":21,"id":{"name":"num_integer","disambiguator":[5676328736250842149,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rtc.rs","num":22,"id":{"name":"num_traits","disambiguator":[2652678204485246086,0]}}],"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":0,"byte_end":6142,"line_start":1,"line_end":194,"column_start":1,"column_end":31}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":0},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":527,"byte_end":539,"line_start":27,"line_end":27,"column_start":9,"column_end":21},"alias_span":null,"name":"hal","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":6,"index":0},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":593,"byte_end":595,"line_start":30,"line_end":30,"column_start":9,"column_end":11},"alias_span":null,"name":"nb","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":6,"index":21},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":645,"byte_end":650,"line_start":32,"line_end":32,"column_start":13,"column_end":18},"alias_span":null,"name":"block","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":8,"index":75},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":1549,"byte_end":1558,"line_start":52,"line_end":52,"column_start":18,"column_end":27},"alias_span":null,"name":"pac","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":8,"index":39870},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":3840,"byte_end":3849,"line_start":104,"line_end":104,"column_start":21,"column_end":30},"alias_span":null,"name":"interrupt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":75},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":3840,"byte_end":3849,"line_start":104,"line_end":104,"column_start":21,"column_end":30},"alias_span":null,"name":"interrupt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":629},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":80095,"byte_end":80103,"line_start":50,"line_end":50,"column_start":36,"column_end":44},"alias_span":null,"name":"PinState","value":"","parent":{"krate":0,"index":233}},{"kind":"Use","ref_id":{"krate":0,"index":723},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":80389,"byte_end":80394,"line_start":61,"line_end":61,"column_start":28,"column_end":33},"alias_span":null,"name":"PEPin","value":"","parent":{"krate":0,"index":233}},{"kind":"Use","ref_id":{"krate":0,"index":726},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":80396,"byte_end":80414,"line_start":61,"line_end":61,"column_start":35,"column_end":53},"alias_span":null,"name":"PartiallyErasedPin","value":"","parent":{"krate":0,"index":233}},{"kind":"Use","ref_id":{"krate":0,"index":798},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":80446,"byte_end":80450,"line_start":63,"line_end":63,"column_start":18,"column_end":22},"alias_span":null,"name":"EPin","value":"","parent":{"krate":0,"index":233}},{"kind":"Use","ref_id":{"krate":0,"index":800},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":80452,"byte_end":80461,"line_start":63,"line_end":63,"column_start":24,"column_end":33},"alias_span":null,"name":"ErasedPin","value":"","parent":{"krate":0,"index":233}},{"kind":"Use","ref_id":{"krate":8,"index":75},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":4903,"byte_end":4906,"line_start":145,"line_end":145,"column_start":9,"column_end":12},"alias_span":null,"name":"stm32","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":14},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":268226,"byte_end":268233,"line_start":39,"line_end":39,"column_start":28,"column_end":35},"alias_span":null,"name":"_embedded_hal_adc_OneShot","value":"","parent":{"krate":0,"index":1825}},{"kind":"Use","ref_id":{"krate":4,"index":28},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":268303,"byte_end":268310,"line_start":40,"line_end":40,"column_start":40,"column_end":47},"alias_span":null,"name":"_embedded_hal_blocking_delay_DelayMs","value":"","parent":{"krate":0,"index":1825}},{"kind":"Use","ref_id":{"krate":4,"index":31},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":268391,"byte_end":268398,"line_start":41,"line_end":41,"column_start":40,"column_end":47},"alias_span":null,"name":"_embedded_hal_blocking_delay_DelayUs","value":"","parent":{"krate":0,"index":1825}},{"kind":"Use","ref_id":{"krate":4,"index":45},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":268483,"byte_end":268487,"line_start":43,"line_end":43,"column_start":5,"column_end":9},"alias_span":null,"name":"_embedded_hal_blocking_i2c_Read","value":"","parent":{"krate":0,"index":1825}},{"kind":"Use","ref_id":{"krate":4,"index":49},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":268524,"byte_end":268529,"line_start":43,"line_end":43,"column_start":46,"column_end":51},"alias_span":null,"name":"_embedded_hal_blocking_i2c_Write","value":"","parent":{"krate":0,"index":1825}},{"kind":"Use","ref_id":{"krate":4,"index":58},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":268571,"byte_end":268580,"line_start":44,"line_end":44,"column_start":5,"column_end":14},"alias_span":null,"name":"_embedded_hal_blocking_i2c_WriteRead","value":"","parent":{"krate":0,"index":1825}},{"kind":"Use","ref_id":{"krate":4,"index":83},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":268665,"byte_end":268670,"line_start":46,"line_end":46,"column_start":41,"column_end":46},"alias_span":null,"name":"_embedded_hal_blocking_serial_Write","value":"","parent":{"krate":0,"index":1825}},{"kind":"Use","ref_id":{"krate":4,"index":98},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":268754,"byte_end":268762,"line_start":48,"line_end":48,"column_start":5,"column_end":13},"alias_span":null,"name":"_embedded_hal_blocking_spi_Transfer","value":"","parent":{"krate":0,"index":1825}},{"kind":"Use","ref_id":{"krate":4,"index":103},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":268803,"byte_end":268808,"line_start":48,"line_end":48,"column_start":54,"column_end":59},"alias_span":null,"name":"_embedded_hal_blocking_spi_Write","value":"","parent":{"krate":0,"index":1825}},{"kind":"Use","ref_id":{"krate":4,"index":426},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":268879,"byte_end":268883,"line_start":50,"line_end":50,"column_start":31,"column_end":35},"alias_span":null,"name":"_embedded_hal_serial_Read","value":"","parent":{"krate":0,"index":1825}},{"kind":"Use","ref_id":{"krate":4,"index":430},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":268944,"byte_end":268949,"line_start":51,"line_end":51,"column_start":31,"column_end":36},"alias_span":null,"name":"_embedded_hal_serial_Write","value":"","parent":{"krate":0,"index":1825}},{"kind":"Use","ref_id":{"krate":4,"index":439},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":269008,"byte_end":269018,"line_start":52,"line_end":52,"column_start":28,"column_end":38},"alias_span":null,"name":"_embedded_hal_spi_FullDuplex","value":"","parent":{"krate":0,"index":1825}},{"kind":"Use","ref_id":{"krate":4,"index":455},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":269081,"byte_end":269090,"line_start":53,"line_end":53,"column_start":30,"column_end":39},"alias_span":null,"name":"_embedded_hal_timer_CountDown","value":"","parent":{"krate":0,"index":1825}},{"kind":"Use","ref_id":{"krate":4,"index":465},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":269157,"byte_end":269165,"line_start":54,"line_end":54,"column_start":33,"column_end":41},"alias_span":null,"name":"_embedded_hal_watchdog_Watchdog","value":"","parent":{"krate":0,"index":1825}},{"kind":"Use","ref_id":{"krate":4,"index":471},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":269234,"byte_end":269249,"line_start":55,"line_end":55,"column_start":33,"column_end":48},"alias_span":null,"name":"_embedded_hal_watchdog_WatchdogDisable","value":"","parent":{"krate":0,"index":1825}},{"kind":"Use","ref_id":{"krate":4,"index":467},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":269325,"byte_end":269339,"line_start":56,"line_end":56,"column_start":33,"column_end":47},"alias_span":null,"name":"_embedded_hal_watchdog_WatchdogEnable","value":"","parent":{"krate":0,"index":1825}},{"kind":"Use","ref_id":{"krate":4,"index":473},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":269404,"byte_end":269411,"line_start":57,"line_end":57,"column_start":23,"column_end":30},"alias_span":null,"name":"_embedded_hal_Capture","value":"","parent":{"krate":0,"index":1825}},{"kind":"Use","ref_id":{"krate":4,"index":484},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":269460,"byte_end":269463,"line_start":58,"line_end":58,"column_start":23,"column_end":26},"alias_span":null,"name":"_embedded_hal_Pwm","value":"","parent":{"krate":0,"index":1825}},{"kind":"Use","ref_id":{"krate":4,"index":503},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":269508,"byte_end":269511,"line_start":59,"line_end":59,"column_start":23,"column_end":26},"alias_span":null,"name":"_embedded_hal_Qei","value":"","parent":{"krate":0,"index":1825}},{"kind":"Use","ref_id":{"krate":0,"index":919},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":269671,"byte_end":269678,"line_start":63,"line_end":63,"column_start":22,"column_end":29},"alias_span":null,"name":"_stm32f4xx_hal_gpio_ExtiPin","value":"","parent":{"krate":0,"index":1825}},{"kind":"Use","ref_id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":269732,"byte_end":269739,"line_start":64,"line_end":64,"column_start":22,"column_end":29},"alias_span":null,"name":"_stm32f4xx_hal_gpio_GpioExt","value":"","parent":{"krate":0,"index":1825}},{"kind":"Use","ref_id":{"krate":0,"index":1168},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":269792,"byte_end":269796,"line_start":65,"line_end":65,"column_start":21,"column_end":25},"alias_span":null,"name":"_stm32f4xx_hal_i2c_Pins","value":"","parent":{"krate":0,"index":1825}},{"kind":"Use","ref_id":{"krate":0,"index":2218},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":269845,"byte_end":269851,"line_start":66,"line_end":66,"column_start":21,"column_end":27},"alias_span":null,"name":"_stm32f4xx_hal_rcc_RccExt","value":"","parent":{"krate":0,"index":1825}},{"kind":"Use","ref_id":{"krate":0,"index":3128},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":270020,"byte_end":270029,"line_start":69,"line_end":69,"column_start":24,"column_end":33},"alias_span":null,"name":"_stm32f4xx_hal_syscfg_SysCfgExt","value":"","parent":{"krate":0,"index":1825}},{"kind":"Use","ref_id":{"krate":0,"index":3139},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":270087,"byte_end":270093,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"alias_span":null,"name":"_stm32f4xx_hal_time_U32Ext","value":"","parent":{"krate":0,"index":1825}},{"kind":"Use","ref_id":{"krate":4,"index":673},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":431168,"byte_end":431172,"line_start":6,"line_end":6,"column_start":29,"column_end":33},"alias_span":null,"name":"Mode","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":4,"index":659},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":431174,"byte_end":431179,"line_start":6,"line_end":6,"column_start":35,"column_end":40},"alias_span":null,"name":"Phase","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":4,"index":645},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":431181,"byte_end":431189,"line_start":6,"line_end":6,"column_start":42,"column_end":50},"alias_span":null,"name":"Polarity","value":"","parent":{"krate":0,"index":2829}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":0,"byte_end":6142,"line_start":1,"line_end":194,"column_start":1,"column_end":31},"name":"","qualname":"::","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":19},{"krate":0,"index":98},{"krate":0,"index":111},{"krate":0,"index":148},{"krate":0,"index":233},{"krate":0,"index":1087},{"krate":0,"index":1245},{"krate":0,"index":1248},{"krate":0,"index":1713},{"krate":0,"index":1779},{"krate":0,"index":1825},{"krate":0,"index":1903},{"krate":0,"index":2056},{"krate":0,"index":2083},{"krate":0,"index":2136},{"krate":0,"index":2343},{"krate":0,"index":2459},{"krate":0,"index":2809},{"krate":0,"index":2829},{"krate":0,"index":3114},{"krate":0,"index":3138},{"krate":0,"index":3159},{"krate":0,"index":3271},{"krate":0,"index":3321},{"krate":0,"index":3323}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":11,"byte_end":42,"line_start":2,"line_end":2,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":19},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"adc","qualname":"::adc","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":3540},{"krate":0,"index":3546},{"krate":0,"index":3549},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":3551},{"krate":0,"index":3615},{"krate":0,"index":3619},{"krate":0,"index":3632},{"krate":0,"index":3635},{"krate":0,"index":3638},{"krate":0,"index":3641},{"krate":0,"index":3644},{"krate":0,"index":3647},{"krate":0,"index":3650},{"krate":0,"index":3653},{"krate":0,"index":3656},{"krate":0,"index":3659},{"krate":0,"index":3662},{"krate":0,"index":3665},{"krate":0,"index":3668},{"krate":0,"index":3671},{"krate":0,"index":3674},{"krate":0,"index":3677},{"krate":0,"index":3680},{"krate":0,"index":3683},{"krate":0,"index":3686}],"decl_id":null,"docs":" Analog to digital converter configuration.\n According to CubeMx, all STM32F4 chips use the same ADC IP so this should be correct for all variants.\n","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":3852,"byte_end":3887,"line_start":106,"line_end":106,"column_start":1,"column_end":36}},{"value":"/ Analog to digital converter configuration.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":6144,"byte_end":6190,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"/ According to CubeMx, all STM32F4 chips use the same ADC IP so this should be correct for all variants.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":6191,"byte_end":6297,"line_start":2,"line_end":2,"column_start":1,"column_end":107}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":6299,"byte_end":6321,"line_start":4,"line_end":4,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":6803,"byte_end":6807,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"Vref","qualname":"::adc::Vref","value":"","parent":null,"children":[],"decl_id":null,"docs":" Vref internal signal, used for calibration\n","sig":null,"attributes":[{"value":"/ Vref internal signal, used for calibration","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":6745,"byte_end":6791,"line_start":17,"line_end":17,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":6889,"byte_end":6893,"line_start":21,"line_end":21,"column_start":12,"column_end":16},"name":"Vbat","qualname":"::adc::Vbat","value":"","parent":null,"children":[],"decl_id":null,"docs":" Vbat internal signal, used for monitoring the battery (if used)\n","sig":null,"attributes":[{"value":"/ Vbat internal signal, used for monitoring the battery (if used)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":6810,"byte_end":6877,"line_start":20,"line_end":20,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":6944,"byte_end":6955,"line_start":24,"line_end":24,"column_start":12,"column_end":23},"name":"Temperature","qualname":"::adc::Temperature","value":"","parent":null,"children":[],"decl_id":null,"docs":" Core temperature internal signal\n","sig":null,"attributes":[{"value":"/ Core temperature internal signal","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":6896,"byte_end":6932,"line_start":23,"line_end":23,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7264,"byte_end":7270,"line_start":38,"line_end":38,"column_start":9,"column_end":15},"name":"config","qualname":"::adc::config","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","parent":null,"children":[{"krate":0,"index":3326},{"krate":0,"index":3359},{"krate":0,"index":3361},{"krate":0,"index":3362},{"krate":0,"index":3364},{"krate":0,"index":3366},{"krate":0,"index":3367},{"krate":0,"index":59},{"krate":0,"index":61},{"krate":0,"index":3369},{"krate":0,"index":3386},{"krate":0,"index":3388},{"krate":0,"index":3389},{"krate":0,"index":3391},{"krate":0,"index":3392},{"krate":0,"index":63},{"krate":0,"index":65},{"krate":0,"index":3394},{"krate":0,"index":3403},{"krate":0,"index":3405},{"krate":0,"index":3407},{"krate":0,"index":67},{"krate":0,"index":3408},{"krate":0,"index":3417},{"krate":0,"index":3419},{"krate":0,"index":3421},{"krate":0,"index":69},{"krate":0,"index":3422},{"krate":0,"index":3451},{"krate":0,"index":3453},{"krate":0,"index":3455},{"krate":0,"index":71},{"krate":0,"index":3456},{"krate":0,"index":3465},{"krate":0,"index":3467},{"krate":0,"index":3469},{"krate":0,"index":73},{"krate":0,"index":3470},{"krate":0,"index":3475},{"krate":0,"index":3477},{"krate":0,"index":3479},{"krate":0,"index":75},{"krate":0,"index":3480},{"krate":0,"index":3485},{"krate":0,"index":3487},{"krate":0,"index":3489},{"krate":0,"index":77},{"krate":0,"index":3490},{"krate":0,"index":3495},{"krate":0,"index":3497},{"krate":0,"index":3499},{"krate":0,"index":79},{"krate":0,"index":3500},{"krate":0,"index":3507},{"krate":0,"index":3509},{"krate":0,"index":3511},{"krate":0,"index":3512},{"krate":0,"index":3519},{"krate":0,"index":3521},{"krate":0,"index":3523},{"krate":0,"index":3524},{"krate":0,"index":3535},{"krate":0,"index":3537},{"krate":0,"index":3539},{"krate":0,"index":81},{"krate":0,"index":92}],"decl_id":null,"docs":" Contains types related to ADC configuration\n","sig":null,"attributes":[{"value":"/ Contains types related to ADC configuration","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7208,"byte_end":7255,"line_start":37,"line_end":37,"column_start":1,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3327},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7445,"byte_end":7448,"line_start":43,"line_end":43,"column_start":9,"column_end":12},"name":"One","qualname":"::adc::config::Sequence::One","value":"Sequence::One","parent":{"krate":0,"index":3326},"children":[],"decl_id":null,"docs":" 1\n","sig":null,"attributes":[{"value":"/ 1","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7431,"byte_end":7436,"line_start":42,"line_end":42,"column_start":9,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3329},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7472,"byte_end":7475,"line_start":45,"line_end":45,"column_start":9,"column_end":12},"name":"Two","qualname":"::adc::config::Sequence::Two","value":"Sequence::Two","parent":{"krate":0,"index":3326},"children":[],"decl_id":null,"docs":" 2\n","sig":null,"attributes":[{"value":"/ 2","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7458,"byte_end":7463,"line_start":44,"line_end":44,"column_start":9,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3331},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7499,"byte_end":7504,"line_start":47,"line_end":47,"column_start":9,"column_end":14},"name":"Three","qualname":"::adc::config::Sequence::Three","value":"Sequence::Three","parent":{"krate":0,"index":3326},"children":[],"decl_id":null,"docs":" 3\n","sig":null,"attributes":[{"value":"/ 3","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7485,"byte_end":7490,"line_start":46,"line_end":46,"column_start":9,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3333},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7528,"byte_end":7532,"line_start":49,"line_end":49,"column_start":9,"column_end":13},"name":"Four","qualname":"::adc::config::Sequence::Four","value":"Sequence::Four","parent":{"krate":0,"index":3326},"children":[],"decl_id":null,"docs":" 4\n","sig":null,"attributes":[{"value":"/ 4","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7514,"byte_end":7519,"line_start":48,"line_end":48,"column_start":9,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3335},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7556,"byte_end":7560,"line_start":51,"line_end":51,"column_start":9,"column_end":13},"name":"Five","qualname":"::adc::config::Sequence::Five","value":"Sequence::Five","parent":{"krate":0,"index":3326},"children":[],"decl_id":null,"docs":" 5\n","sig":null,"attributes":[{"value":"/ 5","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7542,"byte_end":7547,"line_start":50,"line_end":50,"column_start":9,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3337},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7584,"byte_end":7587,"line_start":53,"line_end":53,"column_start":9,"column_end":12},"name":"Six","qualname":"::adc::config::Sequence::Six","value":"Sequence::Six","parent":{"krate":0,"index":3326},"children":[],"decl_id":null,"docs":" 6\n","sig":null,"attributes":[{"value":"/ 6","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7570,"byte_end":7575,"line_start":52,"line_end":52,"column_start":9,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3339},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7611,"byte_end":7616,"line_start":55,"line_end":55,"column_start":9,"column_end":14},"name":"Seven","qualname":"::adc::config::Sequence::Seven","value":"Sequence::Seven","parent":{"krate":0,"index":3326},"children":[],"decl_id":null,"docs":" 7\n","sig":null,"attributes":[{"value":"/ 7","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7597,"byte_end":7602,"line_start":54,"line_end":54,"column_start":9,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3341},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7640,"byte_end":7645,"line_start":57,"line_end":57,"column_start":9,"column_end":14},"name":"Eight","qualname":"::adc::config::Sequence::Eight","value":"Sequence::Eight","parent":{"krate":0,"index":3326},"children":[],"decl_id":null,"docs":" 8\n","sig":null,"attributes":[{"value":"/ 8","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7626,"byte_end":7631,"line_start":56,"line_end":56,"column_start":9,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3343},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7669,"byte_end":7673,"line_start":59,"line_end":59,"column_start":9,"column_end":13},"name":"Nine","qualname":"::adc::config::Sequence::Nine","value":"Sequence::Nine","parent":{"krate":0,"index":3326},"children":[],"decl_id":null,"docs":" 9\n","sig":null,"attributes":[{"value":"/ 9","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7655,"byte_end":7660,"line_start":58,"line_end":58,"column_start":9,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3345},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7698,"byte_end":7701,"line_start":61,"line_end":61,"column_start":9,"column_end":12},"name":"Ten","qualname":"::adc::config::Sequence::Ten","value":"Sequence::Ten","parent":{"krate":0,"index":3326},"children":[],"decl_id":null,"docs":" 10\n","sig":null,"attributes":[{"value":"/ 10","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7683,"byte_end":7689,"line_start":60,"line_end":60,"column_start":9,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3347},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7726,"byte_end":7732,"line_start":63,"line_end":63,"column_start":9,"column_end":15},"name":"Eleven","qualname":"::adc::config::Sequence::Eleven","value":"Sequence::Eleven","parent":{"krate":0,"index":3326},"children":[],"decl_id":null,"docs":" 11\n","sig":null,"attributes":[{"value":"/ 11","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7711,"byte_end":7717,"line_start":62,"line_end":62,"column_start":9,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3349},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7757,"byte_end":7763,"line_start":65,"line_end":65,"column_start":9,"column_end":15},"name":"Twelve","qualname":"::adc::config::Sequence::Twelve","value":"Sequence::Twelve","parent":{"krate":0,"index":3326},"children":[],"decl_id":null,"docs":" 12\n","sig":null,"attributes":[{"value":"/ 12","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7742,"byte_end":7748,"line_start":64,"line_end":64,"column_start":9,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3351},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7788,"byte_end":7796,"line_start":67,"line_end":67,"column_start":9,"column_end":17},"name":"Thirteen","qualname":"::adc::config::Sequence::Thirteen","value":"Sequence::Thirteen","parent":{"krate":0,"index":3326},"children":[],"decl_id":null,"docs":" 13\n","sig":null,"attributes":[{"value":"/ 13","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7773,"byte_end":7779,"line_start":66,"line_end":66,"column_start":9,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3353},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7821,"byte_end":7829,"line_start":69,"line_end":69,"column_start":9,"column_end":17},"name":"Fourteen","qualname":"::adc::config::Sequence::Fourteen","value":"Sequence::Fourteen","parent":{"krate":0,"index":3326},"children":[],"decl_id":null,"docs":" 14\n","sig":null,"attributes":[{"value":"/ 14","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7806,"byte_end":7812,"line_start":68,"line_end":68,"column_start":9,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3355},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7854,"byte_end":7861,"line_start":71,"line_end":71,"column_start":9,"column_end":16},"name":"Fifteen","qualname":"::adc::config::Sequence::Fifteen","value":"Sequence::Fifteen","parent":{"krate":0,"index":3326},"children":[],"decl_id":null,"docs":" 15\n","sig":null,"attributes":[{"value":"/ 15","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7839,"byte_end":7845,"line_start":70,"line_end":70,"column_start":9,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3357},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7886,"byte_end":7893,"line_start":73,"line_end":73,"column_start":9,"column_end":16},"name":"Sixteen","qualname":"::adc::config::Sequence::Sixteen","value":"Sequence::Sixteen","parent":{"krate":0,"index":3326},"children":[],"decl_id":null,"docs":" 16\n","sig":null,"attributes":[{"value":"/ 16","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7871,"byte_end":7877,"line_start":72,"line_end":72,"column_start":9,"column_end":15}}]},{"kind":"Enum","id":{"krate":0,"index":3326},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7412,"byte_end":7420,"line_start":41,"line_end":41,"column_start":14,"column_end":22},"name":"Sequence","qualname":"::adc::config::Sequence","value":"pub enum Sequence {\n    One,\n    Two,\n    Three,\n    Four,\n    Five,\n    Six,\n    Seven,\n    Eight,\n    Nine,\n    Ten,\n    Eleven,\n    Twelve,\n    Thirteen,\n    Fourteen,\n    Fifteen,\n    Sixteen,\n}","parent":null,"children":[{"krate":0,"index":3327},{"krate":0,"index":3329},{"krate":0,"index":3331},{"krate":0,"index":3333},{"krate":0,"index":3335},{"krate":0,"index":3337},{"krate":0,"index":3339},{"krate":0,"index":3341},{"krate":0,"index":3343},{"krate":0,"index":3345},{"krate":0,"index":3347},{"krate":0,"index":3349},{"krate":0,"index":3351},{"krate":0,"index":3353},{"krate":0,"index":3355},{"krate":0,"index":3357}],"decl_id":null,"docs":" The place in the sequence a given channel should be captured\n","sig":null,"attributes":[{"value":"/ The place in the sequence a given channel should be captured","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":7277,"byte_end":7341,"line_start":39,"line_end":39,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3370},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":9578,"byte_end":9586,"line_start":127,"line_end":127,"column_start":9,"column_end":17},"name":"Cycles_3","qualname":"::adc::config::SampleTime::Cycles_3","value":"SampleTime::Cycles_3","parent":{"krate":0,"index":3369},"children":[],"decl_id":null,"docs":" 3 cycles\n","sig":null,"attributes":[{"value":"/ 3 cycles","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":9557,"byte_end":9569,"line_start":126,"line_end":126,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3372},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":9618,"byte_end":9627,"line_start":129,"line_end":129,"column_start":9,"column_end":18},"name":"Cycles_15","qualname":"::adc::config::SampleTime::Cycles_15","value":"SampleTime::Cycles_15","parent":{"krate":0,"index":3369},"children":[],"decl_id":null,"docs":" 15 cycles\n","sig":null,"attributes":[{"value":"/ 15 cycles","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":9596,"byte_end":9609,"line_start":128,"line_end":128,"column_start":9,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3374},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":9659,"byte_end":9668,"line_start":131,"line_end":131,"column_start":9,"column_end":18},"name":"Cycles_28","qualname":"::adc::config::SampleTime::Cycles_28","value":"SampleTime::Cycles_28","parent":{"krate":0,"index":3369},"children":[],"decl_id":null,"docs":" 28 cycles\n","sig":null,"attributes":[{"value":"/ 28 cycles","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":9637,"byte_end":9650,"line_start":130,"line_end":130,"column_start":9,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3376},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":9700,"byte_end":9709,"line_start":133,"line_end":133,"column_start":9,"column_end":18},"name":"Cycles_56","qualname":"::adc::config::SampleTime::Cycles_56","value":"SampleTime::Cycles_56","parent":{"krate":0,"index":3369},"children":[],"decl_id":null,"docs":" 56 cycles\n","sig":null,"attributes":[{"value":"/ 56 cycles","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":9678,"byte_end":9691,"line_start":132,"line_end":132,"column_start":9,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3378},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":9741,"byte_end":9750,"line_start":135,"line_end":135,"column_start":9,"column_end":18},"name":"Cycles_84","qualname":"::adc::config::SampleTime::Cycles_84","value":"SampleTime::Cycles_84","parent":{"krate":0,"index":3369},"children":[],"decl_id":null,"docs":" 84 cycles\n","sig":null,"attributes":[{"value":"/ 84 cycles","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":9719,"byte_end":9732,"line_start":134,"line_end":134,"column_start":9,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3380},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":9783,"byte_end":9793,"line_start":137,"line_end":137,"column_start":9,"column_end":19},"name":"Cycles_112","qualname":"::adc::config::SampleTime::Cycles_112","value":"SampleTime::Cycles_112","parent":{"krate":0,"index":3369},"children":[],"decl_id":null,"docs":" 112 cycles\n","sig":null,"attributes":[{"value":"/ 112 cycles","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":9760,"byte_end":9774,"line_start":136,"line_end":136,"column_start":9,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3382},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":9826,"byte_end":9836,"line_start":139,"line_end":139,"column_start":9,"column_end":19},"name":"Cycles_144","qualname":"::adc::config::SampleTime::Cycles_144","value":"SampleTime::Cycles_144","parent":{"krate":0,"index":3369},"children":[],"decl_id":null,"docs":" 144 cycles\n","sig":null,"attributes":[{"value":"/ 144 cycles","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":9803,"byte_end":9817,"line_start":138,"line_end":138,"column_start":9,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3384},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":9869,"byte_end":9879,"line_start":141,"line_end":141,"column_start":9,"column_end":19},"name":"Cycles_480","qualname":"::adc::config::SampleTime::Cycles_480","value":"SampleTime::Cycles_480","parent":{"krate":0,"index":3369},"children":[],"decl_id":null,"docs":" 480 cycles\n","sig":null,"attributes":[{"value":"/ 480 cycles","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":9846,"byte_end":9860,"line_start":140,"line_end":140,"column_start":9,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":3369},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":9536,"byte_end":9546,"line_start":125,"line_end":125,"column_start":14,"column_end":24},"name":"SampleTime","qualname":"::adc::config::SampleTime","value":"pub enum SampleTime {\n    Cycles_3,\n    Cycles_15,\n    Cycles_28,\n    Cycles_56,\n    Cycles_84,\n    Cycles_112,\n    Cycles_144,\n    Cycles_480,\n}","parent":null,"children":[{"krate":0,"index":3370},{"krate":0,"index":3372},{"krate":0,"index":3374},{"krate":0,"index":3376},{"krate":0,"index":3378},{"krate":0,"index":3380},{"krate":0,"index":3382},{"krate":0,"index":3384}],"decl_id":null,"docs":" The number of cycles to sample a given channel for\n","sig":null,"attributes":[{"value":"/ The number of cycles to sample a given channel for","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":9423,"byte_end":9477,"line_start":123,"line_end":123,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3395},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":11090,"byte_end":11101,"line_start":180,"line_end":180,"column_start":9,"column_end":20},"name":"Pclk2_div_2","qualname":"::adc::config::Clock::Pclk2_div_2","value":"Clock::Pclk2_div_2","parent":{"krate":0,"index":3394},"children":[],"decl_id":null,"docs":" PCLK2 (APB2) divided by 2\n","sig":null,"attributes":[{"value":"/ PCLK2 (APB2) divided by 2","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":11052,"byte_end":11081,"line_start":179,"line_end":179,"column_start":9,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3397},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":11149,"byte_end":11160,"line_start":182,"line_end":182,"column_start":9,"column_end":20},"name":"Pclk2_div_4","qualname":"::adc::config::Clock::Pclk2_div_4","value":"Clock::Pclk2_div_4","parent":{"krate":0,"index":3394},"children":[],"decl_id":null,"docs":" PCLK2 (APB2) divided by 4\n","sig":null,"attributes":[{"value":"/ PCLK2 (APB2) divided by 4","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":11111,"byte_end":11140,"line_start":181,"line_end":181,"column_start":9,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3399},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":11208,"byte_end":11219,"line_start":184,"line_end":184,"column_start":9,"column_end":20},"name":"Pclk2_div_6","qualname":"::adc::config::Clock::Pclk2_div_6","value":"Clock::Pclk2_div_6","parent":{"krate":0,"index":3394},"children":[],"decl_id":null,"docs":" PCLK2 (APB2) divided by 6\n","sig":null,"attributes":[{"value":"/ PCLK2 (APB2) divided by 6","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":11170,"byte_end":11199,"line_start":183,"line_end":183,"column_start":9,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3401},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":11267,"byte_end":11278,"line_start":186,"line_end":186,"column_start":9,"column_end":20},"name":"Pclk2_div_8","qualname":"::adc::config::Clock::Pclk2_div_8","value":"Clock::Pclk2_div_8","parent":{"krate":0,"index":3394},"children":[],"decl_id":null,"docs":" PCLK2 (APB2) divided by 8\n","sig":null,"attributes":[{"value":"/ PCLK2 (APB2) divided by 8","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":11229,"byte_end":11258,"line_start":185,"line_end":185,"column_start":9,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":3394},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":11036,"byte_end":11041,"line_start":178,"line_end":178,"column_start":14,"column_end":19},"name":"Clock","qualname":"::adc::config::Clock","value":"pub enum Clock { Pclk2_div_2, Pclk2_div_4, Pclk2_div_6, Pclk2_div_8, }","parent":null,"children":[{"krate":0,"index":3395},{"krate":0,"index":3397},{"krate":0,"index":3399},{"krate":0,"index":3401}],"decl_id":null,"docs":" Clock config for the ADC\n Check the datasheet for the maximum speed the ADC supports\n","sig":null,"attributes":[{"value":"/ Clock config for the ADC","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":10893,"byte_end":10921,"line_start":175,"line_end":175,"column_start":5,"column_end":33}},{"value":"/ Check the datasheet for the maximum speed the ADC supports","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":10926,"byte_end":10988,"line_start":176,"line_end":176,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3409},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":11687,"byte_end":11693,"line_start":204,"line_end":204,"column_start":9,"column_end":15},"name":"Twelve","qualname":"::adc::config::Resolution::Twelve","value":"Resolution::Twelve","parent":{"krate":0,"index":3408},"children":[],"decl_id":null,"docs":" 12-bit\n","sig":null,"attributes":[{"value":"/ 12-bit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":11668,"byte_end":11678,"line_start":203,"line_end":203,"column_start":9,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3411},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":11722,"byte_end":11725,"line_start":206,"line_end":206,"column_start":9,"column_end":12},"name":"Ten","qualname":"::adc::config::Resolution::Ten","value":"Resolution::Ten","parent":{"krate":0,"index":3408},"children":[],"decl_id":null,"docs":" 10-bit\n","sig":null,"attributes":[{"value":"/ 10-bit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":11703,"byte_end":11713,"line_start":205,"line_end":205,"column_start":9,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3413},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":11753,"byte_end":11758,"line_start":208,"line_end":208,"column_start":9,"column_end":14},"name":"Eight","qualname":"::adc::config::Resolution::Eight","value":"Resolution::Eight","parent":{"krate":0,"index":3408},"children":[],"decl_id":null,"docs":" 8-bit\n","sig":null,"attributes":[{"value":"/ 8-bit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":11735,"byte_end":11744,"line_start":207,"line_end":207,"column_start":9,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3415},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":11786,"byte_end":11789,"line_start":210,"line_end":210,"column_start":9,"column_end":12},"name":"Six","qualname":"::adc::config::Resolution::Six","value":"Resolution::Six","parent":{"krate":0,"index":3408},"children":[],"decl_id":null,"docs":" 6-bit\n","sig":null,"attributes":[{"value":"/ 6-bit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":11768,"byte_end":11777,"line_start":209,"line_end":209,"column_start":9,"column_end":18}}]},{"kind":"Enum","id":{"krate":0,"index":3408},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":11647,"byte_end":11657,"line_start":202,"line_end":202,"column_start":14,"column_end":24},"name":"Resolution","qualname":"::adc::config::Resolution","value":"pub enum Resolution { Twelve, Ten, Eight, Six, }","parent":null,"children":[{"krate":0,"index":3409},{"krate":0,"index":3411},{"krate":0,"index":3413},{"krate":0,"index":3415}],"decl_id":null,"docs":" Resolution to sample at\n","sig":null,"attributes":[{"value":"/ Resolution to sample at","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":11572,"byte_end":11599,"line_start":200,"line_end":200,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3423},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":12246,"byte_end":12256,"line_start":227,"line_end":227,"column_start":9,"column_end":19},"name":"Tim_1_cc_1","qualname":"::adc::config::ExternalTrigger::Tim_1_cc_1","value":"ExternalTrigger::Tim_1_cc_1","parent":{"krate":0,"index":3422},"children":[],"decl_id":null,"docs":" TIM1 compare channel 1\n","sig":null,"attributes":[{"value":"/ TIM1 compare channel 1","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":12211,"byte_end":12237,"line_start":226,"line_end":226,"column_start":9,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3425},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":12301,"byte_end":12311,"line_start":229,"line_end":229,"column_start":9,"column_end":19},"name":"Tim_1_cc_2","qualname":"::adc::config::ExternalTrigger::Tim_1_cc_2","value":"ExternalTrigger::Tim_1_cc_2","parent":{"krate":0,"index":3422},"children":[],"decl_id":null,"docs":" TIM1 compare channel 2\n","sig":null,"attributes":[{"value":"/ TIM1 compare channel 2","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":12266,"byte_end":12292,"line_start":228,"line_end":228,"column_start":9,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3427},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":12356,"byte_end":12366,"line_start":231,"line_end":231,"column_start":9,"column_end":19},"name":"Tim_1_cc_3","qualname":"::adc::config::ExternalTrigger::Tim_1_cc_3","value":"ExternalTrigger::Tim_1_cc_3","parent":{"krate":0,"index":3422},"children":[],"decl_id":null,"docs":" TIM1 compare channel 3\n","sig":null,"attributes":[{"value":"/ TIM1 compare channel 3","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":12321,"byte_end":12347,"line_start":230,"line_end":230,"column_start":9,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3429},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":12411,"byte_end":12421,"line_start":233,"line_end":233,"column_start":9,"column_end":19},"name":"Tim_2_cc_2","qualname":"::adc::config::ExternalTrigger::Tim_2_cc_2","value":"ExternalTrigger::Tim_2_cc_2","parent":{"krate":0,"index":3422},"children":[],"decl_id":null,"docs":" TIM2 compare channel 2\n","sig":null,"attributes":[{"value":"/ TIM2 compare channel 2","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":12376,"byte_end":12402,"line_start":232,"line_end":232,"column_start":9,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3431},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":12466,"byte_end":12476,"line_start":235,"line_end":235,"column_start":9,"column_end":19},"name":"Tim_2_cc_3","qualname":"::adc::config::ExternalTrigger::Tim_2_cc_3","value":"ExternalTrigger::Tim_2_cc_3","parent":{"krate":0,"index":3422},"children":[],"decl_id":null,"docs":" TIM2 compare channel 3\n","sig":null,"attributes":[{"value":"/ TIM2 compare channel 3","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":12431,"byte_end":12457,"line_start":234,"line_end":234,"column_start":9,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3433},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":12521,"byte_end":12531,"line_start":237,"line_end":237,"column_start":9,"column_end":19},"name":"Tim_2_cc_4","qualname":"::adc::config::ExternalTrigger::Tim_2_cc_4","value":"ExternalTrigger::Tim_2_cc_4","parent":{"krate":0,"index":3422},"children":[],"decl_id":null,"docs":" TIM2 compare channel 4\n","sig":null,"attributes":[{"value":"/ TIM2 compare channel 4","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":12486,"byte_end":12512,"line_start":236,"line_end":236,"column_start":9,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3435},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":12570,"byte_end":12580,"line_start":239,"line_end":239,"column_start":9,"column_end":19},"name":"Tim_2_trgo","qualname":"::adc::config::ExternalTrigger::Tim_2_trgo","value":"ExternalTrigger::Tim_2_trgo","parent":{"krate":0,"index":3422},"children":[],"decl_id":null,"docs":" TIM2 trigger out\n","sig":null,"attributes":[{"value":"/ TIM2 trigger out","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":12541,"byte_end":12561,"line_start":238,"line_end":238,"column_start":9,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3437},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":12625,"byte_end":12635,"line_start":241,"line_end":241,"column_start":9,"column_end":19},"name":"Tim_3_cc_1","qualname":"::adc::config::ExternalTrigger::Tim_3_cc_1","value":"ExternalTrigger::Tim_3_cc_1","parent":{"krate":0,"index":3422},"children":[],"decl_id":null,"docs":" TIM3 compare channel 1\n","sig":null,"attributes":[{"value":"/ TIM3 compare channel 1","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":12590,"byte_end":12616,"line_start":240,"line_end":240,"column_start":9,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3439},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":12674,"byte_end":12684,"line_start":243,"line_end":243,"column_start":9,"column_end":19},"name":"Tim_3_trgo","qualname":"::adc::config::ExternalTrigger::Tim_3_trgo","value":"ExternalTrigger::Tim_3_trgo","parent":{"krate":0,"index":3422},"children":[],"decl_id":null,"docs":" TIM3 trigger out\n","sig":null,"attributes":[{"value":"/ TIM3 trigger out","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":12645,"byte_end":12665,"line_start":242,"line_end":242,"column_start":9,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3441},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":12729,"byte_end":12739,"line_start":245,"line_end":245,"column_start":9,"column_end":19},"name":"Tim_4_cc_4","qualname":"::adc::config::ExternalTrigger::Tim_4_cc_4","value":"ExternalTrigger::Tim_4_cc_4","parent":{"krate":0,"index":3422},"children":[],"decl_id":null,"docs":" TIM4 compare channel 4\n","sig":null,"attributes":[{"value":"/ TIM4 compare channel 4","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":12694,"byte_end":12720,"line_start":244,"line_end":244,"column_start":9,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3443},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":12784,"byte_end":12794,"line_start":247,"line_end":247,"column_start":9,"column_end":19},"name":"Tim_5_cc_1","qualname":"::adc::config::ExternalTrigger::Tim_5_cc_1","value":"ExternalTrigger::Tim_5_cc_1","parent":{"krate":0,"index":3422},"children":[],"decl_id":null,"docs":" TIM5 compare channel 1\n","sig":null,"attributes":[{"value":"/ TIM5 compare channel 1","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":12749,"byte_end":12775,"line_start":246,"line_end":246,"column_start":9,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3445},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":12839,"byte_end":12849,"line_start":249,"line_end":249,"column_start":9,"column_end":19},"name":"Tim_5_cc_2","qualname":"::adc::config::ExternalTrigger::Tim_5_cc_2","value":"ExternalTrigger::Tim_5_cc_2","parent":{"krate":0,"index":3422},"children":[],"decl_id":null,"docs":" TIM5 compare channel 2\n","sig":null,"attributes":[{"value":"/ TIM5 compare channel 2","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":12804,"byte_end":12830,"line_start":248,"line_end":248,"column_start":9,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3447},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":12894,"byte_end":12904,"line_start":251,"line_end":251,"column_start":9,"column_end":19},"name":"Tim_5_cc_3","qualname":"::adc::config::ExternalTrigger::Tim_5_cc_3","value":"ExternalTrigger::Tim_5_cc_3","parent":{"krate":0,"index":3422},"children":[],"decl_id":null,"docs":" TIM5 compare channel 3\n","sig":null,"attributes":[{"value":"/ TIM5 compare channel 3","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":12859,"byte_end":12885,"line_start":250,"line_end":250,"column_start":9,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3449},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":12952,"byte_end":12959,"line_start":253,"line_end":253,"column_start":9,"column_end":16},"name":"Exti_11","qualname":"::adc::config::ExternalTrigger::Exti_11","value":"ExternalTrigger::Exti_11","parent":{"krate":0,"index":3422},"children":[],"decl_id":null,"docs":" External interupt line 11\n","sig":null,"attributes":[{"value":"/ External interupt line 11","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":12914,"byte_end":12943,"line_start":252,"line_end":252,"column_start":9,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":3422},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":12185,"byte_end":12200,"line_start":225,"line_end":225,"column_start":14,"column_end":29},"name":"ExternalTrigger","qualname":"::adc::config::ExternalTrigger","value":"pub enum ExternalTrigger {\n    Tim_1_cc_1,\n    Tim_1_cc_2,\n    Tim_1_cc_3,\n    Tim_2_cc_2,\n    Tim_2_cc_3,\n    Tim_2_cc_4,\n    Tim_2_trgo,\n    Tim_3_cc_1,\n    Tim_3_trgo,\n    Tim_4_cc_4,\n    Tim_5_cc_1,\n    Tim_5_cc_2,\n    Tim_5_cc_3,\n    Exti_11,\n}","parent":null,"children":[{"krate":0,"index":3423},{"krate":0,"index":3425},{"krate":0,"index":3427},{"krate":0,"index":3429},{"krate":0,"index":3431},{"krate":0,"index":3433},{"krate":0,"index":3435},{"krate":0,"index":3437},{"krate":0,"index":3439},{"krate":0,"index":3441},{"krate":0,"index":3443},{"krate":0,"index":3445},{"krate":0,"index":3447},{"krate":0,"index":3449}],"decl_id":null,"docs":" Possible external triggers the ADC can listen to\n","sig":null,"attributes":[{"value":"/ Possible external triggers the ADC can listen to","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":12085,"byte_end":12137,"line_start":223,"line_end":223,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3457},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":14018,"byte_end":14026,"line_start":280,"line_end":280,"column_start":9,"column_end":17},"name":"Disabled","qualname":"::adc::config::TriggerMode::Disabled","value":"TriggerMode::Disabled","parent":{"krate":0,"index":3456},"children":[],"decl_id":null,"docs":" Don't listen to external trigger\n","sig":null,"attributes":[{"value":"/ Don't listen to external trigger","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":13973,"byte_end":14009,"line_start":279,"line_end":279,"column_start":9,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3459},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":14092,"byte_end":14102,"line_start":282,"line_end":282,"column_start":9,"column_end":19},"name":"RisingEdge","qualname":"::adc::config::TriggerMode::RisingEdge","value":"TriggerMode::RisingEdge","parent":{"krate":0,"index":3456},"children":[],"decl_id":null,"docs":" Listen for rising edges of external trigger\n","sig":null,"attributes":[{"value":"/ Listen for rising edges of external trigger","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":14036,"byte_end":14083,"line_start":281,"line_end":281,"column_start":9,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3461},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":14169,"byte_end":14180,"line_start":284,"line_end":284,"column_start":9,"column_end":20},"name":"FallingEdge","qualname":"::adc::config::TriggerMode::FallingEdge","value":"TriggerMode::FallingEdge","parent":{"krate":0,"index":3456},"children":[],"decl_id":null,"docs":" Listen for falling edges of external trigger\n","sig":null,"attributes":[{"value":"/ Listen for falling edges of external trigger","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":14112,"byte_end":14160,"line_start":283,"line_end":283,"column_start":9,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3463},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":14263,"byte_end":14272,"line_start":286,"line_end":286,"column_start":9,"column_end":18},"name":"BothEdges","qualname":"::adc::config::TriggerMode::BothEdges","value":"TriggerMode::BothEdges","parent":{"krate":0,"index":3456},"children":[],"decl_id":null,"docs":" Listen for both rising and falling edges of external trigger\n","sig":null,"attributes":[{"value":"/ Listen for both rising and falling edges of external trigger","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":14190,"byte_end":14254,"line_start":285,"line_end":285,"column_start":9,"column_end":73}}]},{"kind":"Enum","id":{"krate":0,"index":3456},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":13951,"byte_end":13962,"line_start":278,"line_end":278,"column_start":14,"column_end":25},"name":"TriggerMode","qualname":"::adc::config::TriggerMode","value":"pub enum TriggerMode { Disabled, RisingEdge, FallingEdge, BothEdges, }","parent":null,"children":[{"krate":0,"index":3457},{"krate":0,"index":3459},{"krate":0,"index":3461},{"krate":0,"index":3463}],"decl_id":null,"docs":" Possible trigger modes\n","sig":null,"attributes":[{"value":"/ Possible trigger modes","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":13877,"byte_end":13903,"line_start":276,"line_end":276,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3471},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":14724,"byte_end":14729,"line_start":303,"line_end":303,"column_start":9,"column_end":14},"name":"Right","qualname":"::adc::config::Align::Right","value":"Align::Right","parent":{"krate":0,"index":3470},"children":[],"decl_id":null,"docs":" Right align output data\n","sig":null,"attributes":[{"value":"/ Right align output data","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":14688,"byte_end":14715,"line_start":302,"line_end":302,"column_start":9,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3473},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":14774,"byte_end":14778,"line_start":305,"line_end":305,"column_start":9,"column_end":13},"name":"Left","qualname":"::adc::config::Align::Left","value":"Align::Left","parent":{"krate":0,"index":3470},"children":[],"decl_id":null,"docs":" Left align output data\n","sig":null,"attributes":[{"value":"/ Left align output data","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":14739,"byte_end":14765,"line_start":304,"line_end":304,"column_start":9,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":3470},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":14672,"byte_end":14677,"line_start":301,"line_end":301,"column_start":14,"column_end":19},"name":"Align","qualname":"::adc::config::Align","value":"pub enum Align { Right, Left, }","parent":null,"children":[{"krate":0,"index":3471},{"krate":0,"index":3473}],"decl_id":null,"docs":" Data register alignment\n","sig":null,"attributes":[{"value":"/ Data register alignment","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":14597,"byte_end":14624,"line_start":299,"line_end":299,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3481},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":15104,"byte_end":15112,"line_start":320,"line_end":320,"column_start":9,"column_end":17},"name":"Disabled","qualname":"::adc::config::Scan::Disabled","value":"Scan::Disabled","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":" Scan mode disabled\n","sig":null,"attributes":[{"value":"/ Scan mode disabled","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":15073,"byte_end":15095,"line_start":319,"line_end":319,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3483},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":15152,"byte_end":15159,"line_start":322,"line_end":322,"column_start":9,"column_end":16},"name":"Enabled","qualname":"::adc::config::Scan::Enabled","value":"Scan::Enabled","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":" Scan mode enabled\n","sig":null,"attributes":[{"value":"/ Scan mode enabled","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":15122,"byte_end":15143,"line_start":321,"line_end":321,"column_start":9,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":3480},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":15058,"byte_end":15062,"line_start":318,"line_end":318,"column_start":14,"column_end":18},"name":"Scan","qualname":"::adc::config::Scan","value":"pub enum Scan { Disabled, Enabled, }","parent":null,"children":[{"krate":0,"index":3481},{"krate":0,"index":3483}],"decl_id":null,"docs":" Scan enable/disable\n","sig":null,"attributes":[{"value":"/ Scan enable/disable","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":14987,"byte_end":15010,"line_start":316,"line_end":316,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3491},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":15518,"byte_end":15524,"line_start":337,"line_end":337,"column_start":9,"column_end":15},"name":"Single","qualname":"::adc::config::Continuous::Single","value":"Continuous::Single","parent":{"krate":0,"index":3490},"children":[],"decl_id":null,"docs":" Single mode, continuous disabled\n","sig":null,"attributes":[{"value":"/ Single mode, continuous disabled","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":15473,"byte_end":15509,"line_start":336,"line_end":336,"column_start":9,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3493},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":15570,"byte_end":15580,"line_start":339,"line_end":339,"column_start":9,"column_end":19},"name":"Continuous","qualname":"::adc::config::Continuous::Continuous","value":"Continuous::Continuous","parent":{"krate":0,"index":3490},"children":[],"decl_id":null,"docs":" Continuous mode enabled\n","sig":null,"attributes":[{"value":"/ Continuous mode enabled","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":15534,"byte_end":15561,"line_start":338,"line_end":338,"column_start":9,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":3490},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":15452,"byte_end":15462,"line_start":335,"line_end":335,"column_start":14,"column_end":24},"name":"Continuous","qualname":"::adc::config::Continuous","value":"pub enum Continuous { Single, Continuous, }","parent":null,"children":[{"krate":0,"index":3491},{"krate":0,"index":3493}],"decl_id":null,"docs":" Continuous mode enable/disable\n","sig":null,"attributes":[{"value":"/ Continuous mode enable/disable","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":15370,"byte_end":15404,"line_start":333,"line_end":333,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3501},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":15919,"byte_end":15927,"line_start":354,"line_end":354,"column_start":9,"column_end":17},"name":"Disabled","qualname":"::adc::config::Dma::Disabled","value":"Dma::Disabled","parent":{"krate":0,"index":3500},"children":[],"decl_id":null,"docs":" No DMA, disabled\n","sig":null,"attributes":[{"value":"/ No DMA, disabled","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":15890,"byte_end":15910,"line_start":353,"line_end":353,"column_start":9,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3503},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":16013,"byte_end":16019,"line_start":356,"line_end":356,"column_start":9,"column_end":15},"name":"Single","qualname":"::adc::config::Dma::Single","value":"Dma::Single","parent":{"krate":0,"index":3500},"children":[],"decl_id":null,"docs":" Single DMA, DMA will be disabled after each conversion sequence\n","sig":null,"attributes":[{"value":"/ Single DMA, DMA will be disabled after each conversion sequence","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":15937,"byte_end":16004,"line_start":355,"line_end":355,"column_start":9,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3505},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":16098,"byte_end":16108,"line_start":358,"line_end":358,"column_start":9,"column_end":19},"name":"Continuous","qualname":"::adc::config::Dma::Continuous","value":"Dma::Continuous","parent":{"krate":0,"index":3500},"children":[],"decl_id":null,"docs":" Continuous DMA, DMA will remain enabled after conversion\n","sig":null,"attributes":[{"value":"/ Continuous DMA, DMA will remain enabled after conversion","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":16029,"byte_end":16089,"line_start":357,"line_end":357,"column_start":9,"column_end":69}}]},{"kind":"Enum","id":{"krate":0,"index":3500},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":15876,"byte_end":15879,"line_start":352,"line_end":352,"column_start":14,"column_end":17},"name":"Dma","qualname":"::adc::config::Dma","value":"pub enum Dma { Disabled, Single, Continuous, }","parent":null,"children":[{"krate":0,"index":3501},{"krate":0,"index":3503},{"krate":0,"index":3505}],"decl_id":null,"docs":" DMA mode\n","sig":null,"attributes":[{"value":"/ DMA mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":15816,"byte_end":15828,"line_start":350,"line_end":350,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3513},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":16280,"byte_end":16288,"line_start":365,"line_end":365,"column_start":9,"column_end":17},"name":"Disabled","qualname":"::adc::config::Eoc::Disabled","value":"Eoc::Disabled","parent":{"krate":0,"index":3512},"children":[],"decl_id":null,"docs":" End-of-conversion interrupt disabled\n","sig":null,"attributes":[{"value":"/ End-of-conversion interrupt disabled","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":16231,"byte_end":16271,"line_start":364,"line_end":364,"column_start":9,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3515},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":16361,"byte_end":16371,"line_start":367,"line_end":367,"column_start":9,"column_end":19},"name":"Conversion","qualname":"::adc::config::Eoc::Conversion","value":"Eoc::Conversion","parent":{"krate":0,"index":3512},"children":[],"decl_id":null,"docs":" End-of-conversion interrupt enabled per conversion\n","sig":null,"attributes":[{"value":"/ End-of-conversion interrupt enabled per conversion","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":16298,"byte_end":16352,"line_start":366,"line_end":366,"column_start":9,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3517},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":16442,"byte_end":16450,"line_start":369,"line_end":369,"column_start":9,"column_end":17},"name":"Sequence","qualname":"::adc::config::Eoc::Sequence","value":"Eoc::Sequence","parent":{"krate":0,"index":3512},"children":[],"decl_id":null,"docs":" End-of-conversion interrupt enabled per sequence\n","sig":null,"attributes":[{"value":"/ End-of-conversion interrupt enabled per sequence","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":16381,"byte_end":16433,"line_start":368,"line_end":368,"column_start":9,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":3512},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":16217,"byte_end":16220,"line_start":363,"line_end":363,"column_start":14,"column_end":17},"name":"Eoc","qualname":"::adc::config::Eoc","value":"pub enum Eoc { Disabled, Conversion, Sequence, }","parent":null,"children":[{"krate":0,"index":3513},{"krate":0,"index":3515},{"krate":0,"index":3517}],"decl_id":null,"docs":" End-of-conversion interrupt enabled/disabled\n","sig":null,"attributes":[{"value":"/ End-of-conversion interrupt enabled/disabled","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":16121,"byte_end":16169,"line_start":361,"line_end":361,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":3524},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":16693,"byte_end":16702,"line_start":376,"line_end":376,"column_start":16,"column_end":25},"name":"AdcConfig","qualname":"::adc::config::AdcConfig","value":"AdcConfig {  }","parent":null,"children":[{"krate":0,"index":3525},{"krate":0,"index":3526},{"krate":0,"index":3527},{"krate":0,"index":3528},{"krate":0,"index":3529},{"krate":0,"index":3530},{"krate":0,"index":3531},{"krate":0,"index":3532},{"krate":0,"index":3533},{"krate":0,"index":3534}],"decl_id":null,"docs":" Configuration for the adc.\n There are some additional parameters on the adc peripheral that can be\n added here when needed but this covers several basic usecases.\n","sig":null,"attributes":[{"value":"/ Configuration for the adc.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":16463,"byte_end":16493,"line_start":372,"line_end":372,"column_start":5,"column_end":35}},{"value":"/ There are some additional parameters on the adc peripheral that can be","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":16498,"byte_end":16572,"line_start":373,"line_end":373,"column_start":5,"column_end":79}},{"value":"/ added here when needed but this covers several basic usecases.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":16577,"byte_end":16643,"line_start":374,"line_end":374,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":17207,"byte_end":17212,"line_start":391,"line_end":391,"column_start":16,"column_end":21},"name":"clock","qualname":"<AdcConfig>::clock","value":"pub fn clock(Self, Clock) -> Self","parent":null,"children":[],"decl_id":null,"docs":" change the clock field\n","sig":null,"attributes":[{"value":"/ change the clock field","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":17165,"byte_end":17191,"line_start":390,"line_end":390,"column_start":9,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":17361,"byte_end":17371,"line_start":396,"line_end":396,"column_start":16,"column_end":26},"name":"resolution","qualname":"<AdcConfig>::resolution","value":"pub fn resolution(Self, Resolution) -> Self","parent":null,"children":[],"decl_id":null,"docs":" change the resolution field\n","sig":null,"attributes":[{"value":"/ change the resolution field","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":17314,"byte_end":17345,"line_start":395,"line_end":395,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":17535,"byte_end":17540,"line_start":401,"line_end":401,"column_start":16,"column_end":21},"name":"align","qualname":"<AdcConfig>::align","value":"pub fn align(Self, Align) -> Self","parent":null,"children":[],"decl_id":null,"docs":" change the align field\n","sig":null,"attributes":[{"value":"/ change the align field","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":17493,"byte_end":17519,"line_start":400,"line_end":400,"column_start":9,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":17683,"byte_end":17687,"line_start":406,"line_end":406,"column_start":16,"column_end":20},"name":"scan","qualname":"<AdcConfig>::scan","value":"pub fn scan(Self, Scan) -> Self","parent":null,"children":[],"decl_id":null,"docs":" change the scan field\n","sig":null,"attributes":[{"value":"/ change the scan field","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":17642,"byte_end":17667,"line_start":405,"line_end":405,"column_start":9,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":17838,"byte_end":17854,"line_start":411,"line_end":411,"column_start":16,"column_end":32},"name":"external_trigger","qualname":"<AdcConfig>::external_trigger","value":"pub fn external_trigger(Self, TriggerMode, ExternalTrigger) -> Self","parent":null,"children":[],"decl_id":null,"docs":" change the external_trigger field\n","sig":null,"attributes":[{"value":"/ change the external_trigger field","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":17785,"byte_end":17822,"line_start":410,"line_end":410,"column_start":9,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":18118,"byte_end":18128,"line_start":420,"line_end":420,"column_start":16,"column_end":26},"name":"continuous","qualname":"<AdcConfig>::continuous","value":"pub fn continuous(Self, Continuous) -> Self","parent":null,"children":[],"decl_id":null,"docs":" change the continuous field\n","sig":null,"attributes":[{"value":"/ change the continuous field","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":18071,"byte_end":18102,"line_start":419,"line_end":419,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":18290,"byte_end":18293,"line_start":425,"line_end":425,"column_start":16,"column_end":19},"name":"dma","qualname":"<AdcConfig>::dma","value":"pub fn dma(Self, Dma) -> Self","parent":null,"children":[],"decl_id":null,"docs":" change the dma field\n","sig":null,"attributes":[{"value":"/ change the dma field","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":18250,"byte_end":18274,"line_start":424,"line_end":424,"column_start":9,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":18451,"byte_end":18478,"line_start":430,"line_end":430,"column_start":16,"column_end":43},"name":"end_of_conversion_interrupt","qualname":"<AdcConfig>::end_of_conversion_interrupt","value":"pub fn end_of_conversion_interrupt(Self, Eoc) -> Self","parent":null,"children":[],"decl_id":null,"docs":" change the end_of_conversion_interrupt field\n","sig":null,"attributes":[{"value":"/ change the end_of_conversion_interrupt field","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":18387,"byte_end":18435,"line_start":429,"line_end":429,"column_start":9,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":18700,"byte_end":18719,"line_start":435,"line_end":435,"column_start":16,"column_end":35},"name":"default_sample_time","qualname":"<AdcConfig>::default_sample_time","value":"pub fn default_sample_time(Self, SampleTime) -> Self","parent":null,"children":[],"decl_id":null,"docs":" change the default_sample_time field\n","sig":null,"attributes":[{"value":"/ change the default_sample_time field","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":18644,"byte_end":18684,"line_start":434,"line_end":434,"column_start":9,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":19029,"byte_end":19046,"line_start":444,"line_end":444,"column_start":16,"column_end":33},"name":"reference_voltage","qualname":"<AdcConfig>::reference_voltage","value":"pub fn reference_voltage(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the reference voltage for the ADC.","sig":null,"attributes":[{"value":"/ Specify the reference voltage for the ADC.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":18869,"byte_end":18915,"line_start":440,"line_end":440,"column_start":9,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":18924,"byte_end":18927,"line_start":441,"line_end":441,"column_start":9,"column_end":12}},{"value":"/ # Args","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":18936,"byte_end":18946,"line_start":442,"line_end":442,"column_start":9,"column_end":19}},{"value":"/ * `vdda_mv` - The ADC reference voltage in millivolts.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":18955,"byte_end":19013,"line_start":443,"line_end":443,"column_start":9,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":3540},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":24620,"byte_end":24623,"line_start":601,"line_end":601,"column_start":12,"column_end":15},"name":"Adc","qualname":"::adc::Adc","value":"Adc {  }","parent":null,"children":[{"krate":0,"index":3542},{"krate":0,"index":3543},{"krate":0,"index":3544},{"krate":0,"index":3545}],"decl_id":null,"docs":" Analog to Digital Converter\n # Status\n Most options relating to regular conversions are implemented. One-shot and sequences of conversions\n have been tested and work as expected.","sig":null,"attributes":[{"value":"/ Analog to Digital Converter","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":19757,"byte_end":19788,"line_start":468,"line_end":468,"column_start":1,"column_end":32}},{"value":"/ # Status","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":19789,"byte_end":19801,"line_start":469,"line_end":469,"column_start":1,"column_end":13}},{"value":"/ Most options relating to regular conversions are implemented. One-shot and sequences of conversions","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":19802,"byte_end":19905,"line_start":470,"line_end":470,"column_start":1,"column_end":104}},{"value":"/ have been tested and work as expected.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":19906,"byte_end":19948,"line_start":471,"line_end":471,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":19949,"byte_end":19952,"line_start":472,"line_end":472,"column_start":1,"column_end":4}},{"value":"/ GPIO to channel mapping should be correct for all supported F4 devices. The mappings were taken from","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":19953,"byte_end":20057,"line_start":473,"line_end":473,"column_start":1,"column_end":105}},{"value":"/ CubeMX. The mappings are feature gated per 4xx device but there are actually sub variants for some","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":20058,"byte_end":20160,"line_start":474,"line_end":474,"column_start":1,"column_end":103}},{"value":"/ devices and some pins may be missing on some variants. The implementation has been split up and commented","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":20161,"byte_end":20270,"line_start":475,"line_end":475,"column_start":1,"column_end":110}},{"value":"/ to show which pins are available on certain device variants but currently the library doesn't enforce this.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":20271,"byte_end":20382,"line_start":476,"line_end":476,"column_start":1,"column_end":112}},{"value":"/ To fully support the right pins would require 10+ more features for the various variants.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":20383,"byte_end":20476,"line_start":477,"line_end":477,"column_start":1,"column_end":94}},{"value":"/ ## Todo","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":20477,"byte_end":20488,"line_start":478,"line_end":478,"column_start":1,"column_end":12}},{"value":"/ * Injected conversions","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":20489,"byte_end":20515,"line_start":479,"line_end":479,"column_start":1,"column_end":27}},{"value":"/ * Analog watchdog config","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":20516,"byte_end":20544,"line_start":480,"line_end":480,"column_start":1,"column_end":29}},{"value":"/ * Discontinuous mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":20545,"byte_end":20569,"line_start":481,"line_end":481,"column_start":1,"column_end":25}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":20570,"byte_end":20584,"line_start":482,"line_end":482,"column_start":1,"column_end":15}},{"value":"/ ## One-shot conversion","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":20585,"byte_end":20611,"line_start":483,"line_end":483,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":20612,"byte_end":20619,"line_start":484,"line_end":484,"column_start":1,"column_end":8}},{"value":"/ use stm32f4xx_hal::{","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":20620,"byte_end":20644,"line_start":485,"line_end":485,"column_start":1,"column_end":25}},{"value":"/   gpio::gpioa,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":20645,"byte_end":20663,"line_start":486,"line_end":486,"column_start":1,"column_end":19}},{"value":"/   adc::{","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":20664,"byte_end":20676,"line_start":487,"line_end":487,"column_start":1,"column_end":13}},{"value":"/     Adc,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":20677,"byte_end":20689,"line_start":488,"line_end":488,"column_start":1,"column_end":13}},{"value":"/     config::AdcConfig,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":20690,"byte_end":20716,"line_start":489,"line_end":489,"column_start":1,"column_end":27}},{"value":"/     config::SampleTime,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":20717,"byte_end":20744,"line_start":490,"line_end":490,"column_start":1,"column_end":28}},{"value":"/   },","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":20745,"byte_end":20753,"line_start":491,"line_end":491,"column_start":1,"column_end":9}},{"value":"/ };","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":20754,"byte_end":20760,"line_start":492,"line_end":492,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":20761,"byte_end":20764,"line_start":493,"line_end":493,"column_start":1,"column_end":4}},{"value":"/ let mut adc = Adc::adc1(device.ADC1, true, AdcConfig::default());","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":20765,"byte_end":20834,"line_start":494,"line_end":494,"column_start":1,"column_end":70}},{"value":"/ let pa3 = gpioa.pa3.into_analog();","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":20835,"byte_end":20873,"line_start":495,"line_end":495,"column_start":1,"column_end":39}},{"value":"/ let sample = adc.convert(&pa3, SampleTime::Cycles_480);","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":20874,"byte_end":20933,"line_start":496,"line_end":496,"column_start":1,"column_end":60}},{"value":"/ let millivolts = adc.sample_to_millivolts(sample);","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":20934,"byte_end":20988,"line_start":497,"line_end":497,"column_start":1,"column_end":55}},{"value":"/ info!(\"pa3: {}mV\", millivolts);","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":20989,"byte_end":21024,"line_start":498,"line_end":498,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":21025,"byte_end":21032,"line_start":499,"line_end":499,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":21033,"byte_end":21036,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ ## Sequence conversion","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":21037,"byte_end":21063,"line_start":501,"line_end":501,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":21064,"byte_end":21071,"line_start":502,"line_end":502,"column_start":1,"column_end":8}},{"value":"/ use stm32f4xx_hal::{","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":21072,"byte_end":21096,"line_start":503,"line_end":503,"column_start":1,"column_end":25}},{"value":"/   gpio::gpioa,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":21097,"byte_end":21115,"line_start":504,"line_end":504,"column_start":1,"column_end":19}},{"value":"/   adc::{","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":21116,"byte_end":21128,"line_start":505,"line_end":505,"column_start":1,"column_end":13}},{"value":"/     Adc,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":21129,"byte_end":21141,"line_start":506,"line_end":506,"column_start":1,"column_end":13}},{"value":"/     config::AdcConfig,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":21142,"byte_end":21168,"line_start":507,"line_end":507,"column_start":1,"column_end":27}},{"value":"/     config::SampleTime,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":21169,"byte_end":21196,"line_start":508,"line_end":508,"column_start":1,"column_end":28}},{"value":"/     config::Sequence,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":21197,"byte_end":21222,"line_start":509,"line_end":509,"column_start":1,"column_end":26}},{"value":"/     config::Eoc,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":21223,"byte_end":21243,"line_start":510,"line_end":510,"column_start":1,"column_end":21}},{"value":"/     config::Scan,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":21244,"byte_end":21265,"line_start":511,"line_end":511,"column_start":1,"column_end":22}},{"value":"/     config::Clock,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":21266,"byte_end":21288,"line_start":512,"line_end":512,"column_start":1,"column_end":23}},{"value":"/   },","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":21289,"byte_end":21297,"line_start":513,"line_end":513,"column_start":1,"column_end":9}},{"value":"/ };","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":21298,"byte_end":21304,"line_start":514,"line_end":514,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":21305,"byte_end":21308,"line_start":515,"line_end":515,"column_start":1,"column_end":4}},{"value":"/ let config = AdcConfig::default()","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":21309,"byte_end":21346,"line_start":516,"line_end":516,"column_start":1,"column_end":38}},{"value":"/     //We'll either need DMA or an interrupt per conversion to convert","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":21347,"byte_end":21420,"line_start":517,"line_end":517,"column_start":1,"column_end":74}},{"value":"/     //multiple values in a sequence","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":21421,"byte_end":21460,"line_start":518,"line_end":518,"column_start":1,"column_end":40}},{"value":"/     .end_of_conversion_interrupt(Eoc::Conversion)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":21461,"byte_end":21514,"line_start":519,"line_end":519,"column_start":1,"column_end":54}},{"value":"/     //Scan mode is also required to convert a sequence","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":21515,"byte_end":21573,"line_start":520,"line_end":520,"column_start":1,"column_end":59}},{"value":"/     .scan(Scan::Enabled)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":21574,"byte_end":21602,"line_start":521,"line_end":521,"column_start":1,"column_end":29}},{"value":"/     //And since we're looking for one interrupt per conversion the","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":21603,"byte_end":21673,"line_start":522,"line_end":522,"column_start":1,"column_end":71}},{"value":"/     //clock will need to be fairly slow to avoid overruns breaking","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":21674,"byte_end":21744,"line_start":523,"line_end":523,"column_start":1,"column_end":71}},{"value":"/     //the sequence. If you are running in debug mode and logging in","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":21745,"byte_end":21816,"line_start":524,"line_end":524,"column_start":1,"column_end":72}},{"value":"/     //the interrupt, good luck... try setting pclk2 really low.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":21817,"byte_end":21884,"line_start":525,"line_end":525,"column_start":1,"column_end":68}},{"value":"/     //(Better yet use DMA)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":21885,"byte_end":21915,"line_start":526,"line_end":526,"column_start":1,"column_end":31}},{"value":"/     .clock(Clock::Pclk2_div_8);","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":21916,"byte_end":21951,"line_start":527,"line_end":527,"column_start":1,"column_end":36}},{"value":"/ let mut adc = Adc::adc1(device.ADC1, true, config);","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":21952,"byte_end":22007,"line_start":528,"line_end":528,"column_start":1,"column_end":56}},{"value":"/ let pa0 = gpioa.pa0.into_analog();","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":22008,"byte_end":22046,"line_start":529,"line_end":529,"column_start":1,"column_end":39}},{"value":"/ let pa3 = gpioa.pa3.into_analog();","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":22047,"byte_end":22085,"line_start":530,"line_end":530,"column_start":1,"column_end":39}},{"value":"/ adc.configure_channel(&pa0, Sequence::One, SampleTime::Cycles_112);","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":22086,"byte_end":22157,"line_start":531,"line_end":531,"column_start":1,"column_end":72}},{"value":"/ adc.configure_channel(&pa3, Sequence::Two, SampleTime::Cycles_480);","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":22158,"byte_end":22229,"line_start":532,"line_end":532,"column_start":1,"column_end":72}},{"value":"/ adc.configure_channel(&pa0, Sequence::Three, SampleTime::Cycles_112);","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":22230,"byte_end":22303,"line_start":533,"line_end":533,"column_start":1,"column_end":74}},{"value":"/ adc.start_conversion();","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":22304,"byte_end":22331,"line_start":534,"line_end":534,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":22332,"byte_end":22339,"line_start":535,"line_end":535,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":22340,"byte_end":22343,"line_start":536,"line_end":536,"column_start":1,"column_end":4}},{"value":"/ ## External trigger","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":22344,"byte_end":22367,"line_start":537,"line_end":537,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":22368,"byte_end":22371,"line_start":538,"line_end":538,"column_start":1,"column_end":4}},{"value":"/ A common mistake on STM forums is enabling continuous mode but that causes it to start","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":22372,"byte_end":22462,"line_start":539,"line_end":539,"column_start":1,"column_end":91}},{"value":"/ capturing on the first trigger and capture as fast as possible forever, regardless of","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":22463,"byte_end":22552,"line_start":540,"line_end":540,"column_start":1,"column_end":90}},{"value":"/ future triggers. Continuous mode is disabled by default but I thought it was worth","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":22553,"byte_end":22639,"line_start":541,"line_end":541,"column_start":1,"column_end":87}},{"value":"/ highlighting.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":22640,"byte_end":22657,"line_start":542,"line_end":542,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":22658,"byte_end":22661,"line_start":543,"line_end":543,"column_start":1,"column_end":4}},{"value":"/ Getting the timer config right to make sure it's sending the event the ADC is listening","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":22662,"byte_end":22753,"line_start":544,"line_end":544,"column_start":1,"column_end":92}},{"value":"/ to can be a bit of a pain but the key fields are highlighted below. Try hooking a timer","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":22754,"byte_end":22845,"line_start":545,"line_end":545,"column_start":1,"column_end":92}},{"value":"/ channel up to an external pin with an LED or oscilloscope attached to check it's really","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":22846,"byte_end":22937,"line_start":546,"line_end":546,"column_start":1,"column_end":92}},{"value":"/ generating pulses if the ADC doesn't seem to be triggering.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":22938,"byte_end":23001,"line_start":547,"line_end":547,"column_start":1,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23002,"byte_end":23009,"line_start":548,"line_end":548,"column_start":1,"column_end":8}},{"value":"/ use stm32f4xx_hal::{","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23010,"byte_end":23034,"line_start":549,"line_end":549,"column_start":1,"column_end":25}},{"value":"/   gpio::gpioa,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23035,"byte_end":23053,"line_start":550,"line_end":550,"column_start":1,"column_end":19}},{"value":"/   adc::{","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23054,"byte_end":23066,"line_start":551,"line_end":551,"column_start":1,"column_end":13}},{"value":"/     Adc,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23067,"byte_end":23079,"line_start":552,"line_end":552,"column_start":1,"column_end":13}},{"value":"/     config::AdcConfig,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23080,"byte_end":23106,"line_start":553,"line_end":553,"column_start":1,"column_end":27}},{"value":"/     config::SampleTime,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23107,"byte_end":23134,"line_start":554,"line_end":554,"column_start":1,"column_end":28}},{"value":"/     config::Sequence,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23135,"byte_end":23160,"line_start":555,"line_end":555,"column_start":1,"column_end":26}},{"value":"/     config::Eoc,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23161,"byte_end":23181,"line_start":556,"line_end":556,"column_start":1,"column_end":21}},{"value":"/     config::Scan,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23182,"byte_end":23203,"line_start":557,"line_end":557,"column_start":1,"column_end":22}},{"value":"/     config::Clock,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23204,"byte_end":23226,"line_start":558,"line_end":558,"column_start":1,"column_end":23}},{"value":"/   },","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23227,"byte_end":23235,"line_start":559,"line_end":559,"column_start":1,"column_end":9}},{"value":"/ };","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23236,"byte_end":23242,"line_start":560,"line_end":560,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23243,"byte_end":23246,"line_start":561,"line_end":561,"column_start":1,"column_end":4}},{"value":"/  let config = AdcConfig::default()","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23247,"byte_end":23285,"line_start":562,"line_end":562,"column_start":1,"column_end":39}},{"value":"/      //Set the trigger you want","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23286,"byte_end":23321,"line_start":563,"line_end":563,"column_start":1,"column_end":36}},{"value":"/      .external_trigger(TriggerMode::RisingEdge, ExternalTrigger::Tim_1_cc_1);","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23322,"byte_end":23403,"line_start":564,"line_end":564,"column_start":1,"column_end":82}},{"value":"/  let mut adc = Adc::adc1(device.ADC1, true, config);","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23404,"byte_end":23460,"line_start":565,"line_end":565,"column_start":1,"column_end":57}},{"value":"/  let pa0 = gpioa.pa0.into_analog();","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23461,"byte_end":23500,"line_start":566,"line_end":566,"column_start":1,"column_end":40}},{"value":"/  adc.configure_channel(&pa0, Sequence::One, SampleTime::Cycles_112);","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23501,"byte_end":23573,"line_start":567,"line_end":567,"column_start":1,"column_end":73}},{"value":"/  //Make sure it's enabled but don't start the conversion","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23574,"byte_end":23634,"line_start":568,"line_end":568,"column_start":1,"column_end":61}},{"value":"/  adc.enable();","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23635,"byte_end":23653,"line_start":569,"line_end":569,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23654,"byte_end":23657,"line_start":570,"line_end":570,"column_start":1,"column_end":4}},{"value":"/ //Configure the timer","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23658,"byte_end":23683,"line_start":571,"line_end":571,"column_start":1,"column_end":26}},{"value":"/ let mut tim = Timer::tim1(device.TIM1, 1.hz(), clocks);","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23684,"byte_end":23743,"line_start":572,"line_end":572,"column_start":1,"column_end":60}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23744,"byte_end":23756,"line_start":573,"line_end":573,"column_start":1,"column_end":13}},{"value":"/     let tim = &(*TIM1::ptr());","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23757,"byte_end":23791,"line_start":574,"line_end":574,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23792,"byte_end":23795,"line_start":575,"line_end":575,"column_start":1,"column_end":4}},{"value":"/     //Channel 1","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23796,"byte_end":23815,"line_start":576,"line_end":576,"column_start":1,"column_end":20}},{"value":"/     //Disable the channel before configuring it","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23816,"byte_end":23867,"line_start":577,"line_end":577,"column_start":1,"column_end":52}},{"value":"/     tim.ccer.modify(|_, w| w.cc1e().clear_bit());","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23868,"byte_end":23921,"line_start":578,"line_end":578,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23922,"byte_end":23925,"line_start":579,"line_end":579,"column_start":1,"column_end":4}},{"value":"/     tim.ccmr1_output().modify(|_, w| w","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23926,"byte_end":23968,"line_start":580,"line_end":580,"column_start":1,"column_end":43}},{"value":"/       //Preload enable for channel","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":23969,"byte_end":24007,"line_start":581,"line_end":581,"column_start":1,"column_end":39}},{"value":"/       .oc1pe().set_bit()","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":24008,"byte_end":24036,"line_start":582,"line_end":582,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":24037,"byte_end":24040,"line_start":583,"line_end":583,"column_start":1,"column_end":4}},{"value":"/       //Set mode for channel, the default mode is \"frozen\" which won't work","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":24041,"byte_end":24120,"line_start":584,"line_end":584,"column_start":1,"column_end":80}},{"value":"/       .oc1m().pwm_mode1()","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":24121,"byte_end":24150,"line_start":585,"line_end":585,"column_start":1,"column_end":30}},{"value":"/     );","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":24151,"byte_end":24161,"line_start":586,"line_end":586,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":24162,"byte_end":24165,"line_start":587,"line_end":587,"column_start":1,"column_end":4}},{"value":"/     //Set the duty cycle, 0 won't work in pwm mode but might be ok in","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":24166,"byte_end":24239,"line_start":588,"line_end":588,"column_start":1,"column_end":74}},{"value":"/     //toggle mode or match mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":24240,"byte_end":24275,"line_start":589,"line_end":589,"column_start":1,"column_end":36}},{"value":"/     let max_duty = tim.arr.read().arr().bits() as u16;","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":24276,"byte_end":24334,"line_start":590,"line_end":590,"column_start":1,"column_end":59}},{"value":"/     tim.ccr1.modify(|_, w| w.ccr().bits(max_duty / 2));","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":24335,"byte_end":24394,"line_start":591,"line_end":591,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":24395,"byte_end":24398,"line_start":592,"line_end":592,"column_start":1,"column_end":4}},{"value":"/     //Enable the channel","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":24399,"byte_end":24427,"line_start":593,"line_end":593,"column_start":1,"column_end":29}},{"value":"/     tim.ccer.modify(|_, w| w.cc1e().set_bit());","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":24428,"byte_end":24479,"line_start":594,"line_end":594,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":24480,"byte_end":24483,"line_start":595,"line_end":595,"column_start":1,"column_end":4}},{"value":"/     //Enable the TIM main Output","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":24484,"byte_end":24520,"line_start":596,"line_end":596,"column_start":1,"column_end":37}},{"value":"/     tim.bdtr.modify(|_, w| w.moe().set_bit());","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":24521,"byte_end":24571,"line_start":597,"line_end":597,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":24572,"byte_end":24577,"line_start":598,"line_end":598,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":24578,"byte_end":24585,"line_start":599,"line_end":599,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3552},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":45422,"byte_end":45426,"line_start":1043,"line_end":1043,"column_start":15,"column_end":19},"name":"adc1","qualname":"<Adc<pac::ADC1>>::adc1","value":"pub fn adc1(pac::ADC1, bool, config::AdcConfig) -> Adc<pac::ADC1>","parent":null,"children":[],"decl_id":null,"docs":" Enables the ADC clock, resets the peripheral (optionally), runs calibration and applies the supplied config\n # Arguments\n * `reset` - should a reset be performed. This is provided because on some devices multiple ADCs share the same common reset\n","sig":null,"attributes":[{"value":"/ Enables the ADC clock, resets the peripheral (optionally), runs calibration and applies the supplied config","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":28191,"byte_end":28302,"line_start":698,"line_end":698,"column_start":17,"column_end":128}},{"value":"/ # Arguments","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":28319,"byte_end":28334,"line_start":699,"line_end":699,"column_start":17,"column_end":32}},{"value":"/ * `reset` - should a reset be performed. This is provided because on some devices multiple ADCs share the same common reset","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":28351,"byte_end":28478,"line_start":700,"line_end":700,"column_start":17,"column_end":144}}]},{"kind":"Mod","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\bb.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bb","qualname":"::bb","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\bb.rs","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":107},{"krate":0,"index":109}],"decl_id":null,"docs":" Bit banding","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":3901,"byte_end":3936,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ Bit banding","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\bb.rs","byte_start":62830,"byte_end":62845,"line_start":1,"line_end":1,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\bb.rs","byte_start":62846,"byte_end":62849,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Support for the manipulation of peripheral registers through bit-banding.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\bb.rs","byte_start":62850,"byte_end":62927,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ Not all peripherals are mapped to the bit-banding alias region, the peripheral bit-band region","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\bb.rs","byte_start":62928,"byte_end":63026,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ is from `0x4000_0000` to `0x400F_FFFF`. Bit-banding allows the manipulation of individual bits","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\bb.rs","byte_start":63027,"byte_end":63125,"line_start":5,"line_end":5,"column_start":1,"column_end":99}},{"value":"/ atomically.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\bb.rs","byte_start":63126,"byte_end":63141,"line_start":6,"line_end":6,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\bb.rs","byte_start":63568,"byte_end":63573,"line_start":21,"line_end":21,"column_start":15,"column_end":20},"name":"clear","qualname":"::bb::clear","value":"pub unsafe fn clear<T>(*const T, u8)","parent":null,"children":[],"decl_id":null,"docs":" Clears the bit on the provided register without modifying other bits.","sig":null,"attributes":[{"value":"/ Clears the bit on the provided register without modifying other bits.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\bb.rs","byte_start":63391,"byte_end":63464,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\bb.rs","byte_start":63465,"byte_end":63468,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\bb.rs","byte_start":63469,"byte_end":63481,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\bb.rs","byte_start":63482,"byte_end":63485,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Some registers have reserved bits which should not be modified.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\bb.rs","byte_start":63486,"byte_end":63553,"line_start":20,"line_end":20,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\bb.rs","byte_start":63819,"byte_end":63822,"line_start":30,"line_end":30,"column_start":15,"column_end":18},"name":"set","qualname":"::bb::set","value":"pub unsafe fn set<T>(*const T, u8)","parent":null,"children":[],"decl_id":null,"docs":" Sets the bit on the provided register without modifying other bits.","sig":null,"attributes":[{"value":"/ Sets the bit on the provided register without modifying other bits.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\bb.rs","byte_start":63644,"byte_end":63715,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\bb.rs","byte_start":63716,"byte_end":63719,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\bb.rs","byte_start":63720,"byte_end":63732,"line_start":27,"line_end":27,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\bb.rs","byte_start":63733,"byte_end":63736,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Some registers have reserved bits which should not be modified.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\bb.rs","byte_start":63737,"byte_end":63804,"line_start":29,"line_end":29,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\bb.rs","byte_start":64077,"byte_end":64082,"line_start":39,"line_end":39,"column_start":15,"column_end":20},"name":"write","qualname":"::bb::write","value":"pub unsafe fn write<T>(*const T, u8, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets or clears the bit on the provided register without modifying other bits.","sig":null,"attributes":[{"value":"/ Sets or clears the bit on the provided register without modifying other bits.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\bb.rs","byte_start":63892,"byte_end":63973,"line_start":34,"line_end":34,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\bb.rs","byte_start":63974,"byte_end":63977,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\bb.rs","byte_start":63978,"byte_end":63990,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\bb.rs","byte_start":63991,"byte_end":63994,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Some registers have reserved bits which should not be modified.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\bb.rs","byte_start":63995,"byte_end":64062,"line_start":38,"line_end":38,"column_start":1,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"crc32","qualname":"::crc32","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":134}],"decl_id":null,"docs":" CRC32 Calculation Unit","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":4076,"byte_end":4111,"line_start":116,"line_end":116,"column_start":1,"column_end":36}},{"value":"/ CRC32 Calculation Unit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":64444,"byte_end":64470,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":64471,"byte_end":64474,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This is a hardware accelerated CRC32 calculation unit.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":64475,"byte_end":64533,"line_start":3,"line_end":3,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":64534,"byte_end":64537,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ It is hardcoded to use the CRC-32 polynomial 0x04C1_1DB7.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":64538,"byte_end":64599,"line_start":5,"line_end":5,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":64600,"byte_end":64603,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ It operates word-at-a-time, and takes 4 AHB/HCLK cycles per word","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":64604,"byte_end":64672,"line_start":7,"line_end":7,"column_start":1,"column_end":69}},{"value":"/ to calculate. This operation stalls the AHB bus for that time.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":64673,"byte_end":64739,"line_start":8,"line_end":8,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":64917,"byte_end":64922,"line_start":16,"line_end":16,"column_start":12,"column_end":17},"name":"Crc32","qualname":"::crc32::Crc32","value":"Crc32 {  }","parent":null,"children":[{"krate":0,"index":133}],"decl_id":null,"docs":" A handle to a HAL CRC32 peripheral\n","sig":null,"attributes":[{"value":"/ A handle to a HAL CRC32 peripheral","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":64867,"byte_end":64905,"line_start":15,"line_end":15,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":65011,"byte_end":65014,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<Crc32>::new","value":"pub fn new(CRC) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new Crc32 HAL peripheral\n","sig":null,"attributes":[{"value":"/ Create a new Crc32 HAL peripheral","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":64962,"byte_end":64999,"line_start":21,"line_end":21,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":65485,"byte_end":65489,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"init","qualname":"<Crc32>::init","value":"pub fn init(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reset the internal CRC32 state to the default value (0xFFFF_FFFF)\n","sig":null,"attributes":[{"value":"/ Reset the internal CRC32 state to the default value (0xFFFF_FFFF)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":65382,"byte_end":65451,"line_start":37,"line_end":37,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":65456,"byte_end":65473,"line_start":38,"line_end":38,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":65743,"byte_end":65749,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"update","qualname":"<Crc32>::update","value":"pub fn update(&mut Self, &[u32]) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Feed words into the CRC engine.","sig":null,"attributes":[{"value":"/ Feed words into the CRC engine.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":65567,"byte_end":65602,"line_start":43,"line_end":43,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":65607,"byte_end":65610,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The resulting calculated CRC (including this and prior data","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":65615,"byte_end":65678,"line_start":45,"line_end":45,"column_start":5,"column_end":68}},{"value":"/ since the last call to `init()` is returned.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":65683,"byte_end":65731,"line_start":46,"line_end":46,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":67033,"byte_end":67045,"line_start":80,"line_end":80,"column_start":12,"column_end":24},"name":"update_bytes","qualname":"<Crc32>::update_bytes","value":"pub fn update_bytes(&mut Self, &[u8]) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Feed bytes into the CRC engine.","sig":null,"attributes":[{"value":"/ Feed bytes into the CRC engine.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":66013,"byte_end":66048,"line_start":56,"line_end":56,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":66053,"byte_end":66056,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The resulting calculated CRC (including this and prior data","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":66061,"byte_end":66124,"line_start":58,"line_end":58,"column_start":5,"column_end":68}},{"value":"/ since the last call to `init()` is returned.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":66129,"byte_end":66177,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":66182,"byte_end":66185,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ NOTE: Each four-byte chunk will be copied into a scratch buffer. This","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":66190,"byte_end":66263,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ is done to ensure alignment of the data (the CRC engine only processes","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":66268,"byte_end":66342,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ full words at a time). If the number of bytes passed in are not a","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":66347,"byte_end":66416,"line_start":63,"line_end":63,"column_start":5,"column_end":74}},{"value":"/ multiple of four, the MOST significant bytes of the remaining word will","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":66421,"byte_end":66496,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ be zeroes.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":66501,"byte_end":66515,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":66520,"byte_end":66523,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This should be taken into consideration if attempting to feed bytes","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":66528,"byte_end":66599,"line_start":67,"line_end":67,"column_start":5,"column_end":76}},{"value":"/ across multiple parts (that spurious zeroes will be inserted)! To","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":66604,"byte_end":66673,"line_start":68,"line_end":68,"column_start":5,"column_end":74}},{"value":"/ avoid this, only feed multiples of 4 bytes in before the \"final\"","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":66678,"byte_end":66746,"line_start":69,"line_end":69,"column_start":5,"column_end":73}},{"value":"/ part of the message.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":66751,"byte_end":66775,"line_start":70,"line_end":70,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":66780,"byte_end":66783,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Example: Given the following 7 bytes:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":66788,"byte_end":66829,"line_start":72,"line_end":72,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":66834,"byte_end":66837,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ `[0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77]`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":66842,"byte_end":66890,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":66895,"byte_end":66898,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ The following two words will be fed into the CRC engine:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":66903,"byte_end":66963,"line_start":76,"line_end":76,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":66968,"byte_end":66971,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ 1. `0x4433_2211`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":66976,"byte_end":66996,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/ 2. `0x0077_6655`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":67001,"byte_end":67021,"line_start":79,"line_end":79,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":68853,"byte_end":68857,"line_start":122,"line_end":122,"column_start":12,"column_end":16},"name":"free","qualname":"<Crc32>::free","value":"pub fn free(Self) -> CRC","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.10.0\", note = \"Please use release instead\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":68773,"byte_end":68841,"line_start":121,"line_end":121,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":68978,"byte_end":68985,"line_start":126,"line_end":126,"column_start":12,"column_end":19},"name":"release","qualname":"<Crc32>::release","value":"pub fn release(Self) -> CRC","parent":null,"children":[],"decl_id":null,"docs":" Consume the HAL peripheral, returning the PAC peripheral\n","sig":null,"attributes":[{"value":"/ Consume the HAL peripheral, returning the PAC peripheral","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":68906,"byte_end":68966,"line_start":125,"line_end":125,"column_start":5,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\delay\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"delay","qualname":"::delay","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\delay\\mod.rs","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":198},{"krate":0,"index":201}],"decl_id":null,"docs":" Delays\n","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":4198,"byte_end":4233,"line_start":120,"line_end":120,"column_start":1,"column_end":36}},{"value":"/ Delays","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\delay\\mod.rs","byte_start":69261,"byte_end":69271,"line_start":1,"line_end":1,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\delay\\syst.rs","byte_start":69917,"byte_end":69920,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"new","qualname":"<Delay<SYST>>::new","value":"pub fn new(SYST, &Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the system timer (SysTick) as a delay provider\n","sig":null,"attributes":[{"value":"/ Configures the system timer (SysTick) as a delay provider","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\delay\\syst.rs","byte_start":69844,"byte_end":69905,"line_start":13,"line_end":13,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\delay\\syst.rs","byte_start":70183,"byte_end":70187,"line_start":23,"line_end":23,"column_start":12,"column_end":16},"name":"free","qualname":"<Delay<SYST>>::free","value":"pub fn free(Self) -> SYST","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.10.0\", note = \"Please use release instead\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\delay\\syst.rs","byte_start":70103,"byte_end":70171,"line_start":22,"line_end":22,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\delay\\mod.rs","byte_start":69404,"byte_end":69409,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Delay","qualname":"::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197}],"decl_id":null,"docs":" Timer as a delay provider (SysTick by default)\n","sig":null,"attributes":[{"value":"/ Timer as a delay provider (SysTick by default)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\delay\\mod.rs","byte_start":69342,"byte_end":69392,"line_start":9,"line_end":9,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\delay\\mod.rs","byte_start":69519,"byte_end":69526,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"release","qualname":"<Delay<T>>::release","value":"pub fn release(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Releases the timer resource\n","sig":null,"attributes":[{"value":"/ Releases the timer resource","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\delay\\mod.rs","byte_start":69476,"byte_end":69507,"line_start":16,"line_end":16,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3700},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\delay\\timer.rs","byte_start":77288,"byte_end":77292,"line_start":131,"line_end":131,"column_start":17,"column_end":21},"name":"tim5","qualname":"<Delay<pac::TIM5>>::tim5","value":"pub fn tim5(pac::TIM5, &Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the timer as a delay provider\n","sig":null,"attributes":[{"value":"/ Configures the timer as a delay provider","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\delay\\timer.rs","byte_start":73604,"byte_end":73648,"line_start":54,"line_end":54,"column_start":17,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3720},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\delay\\timer.rs","byte_start":77778,"byte_end":77782,"line_start":153,"line_end":153,"column_start":17,"column_end":21},"name":"tim2","qualname":"<Delay<pac::TIM2>>::tim2","value":"pub fn tim2(pac::TIM2, &Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the timer as a delay provider\n","sig":null,"attributes":[{"value":"/ Configures the timer as a delay provider","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\delay\\timer.rs","byte_start":73604,"byte_end":73648,"line_start":54,"line_end":54,"column_start":17,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gpio","qualname":"::gpio","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":250},{"krate":0,"index":253},{"krate":0,"index":256},{"krate":0,"index":259},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":715},{"krate":0,"index":718},{"krate":0,"index":721},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":793},{"krate":0,"index":796},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":858},{"krate":0,"index":861},{"krate":0,"index":863},{"krate":0,"index":866},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":895},{"krate":0,"index":897},{"krate":0,"index":899},{"krate":0,"index":901},{"krate":0,"index":903},{"krate":0,"index":906},{"krate":0,"index":908},{"krate":0,"index":3729},{"krate":0,"index":3742},{"krate":0,"index":3744},{"krate":0,"index":3745},{"krate":0,"index":3747},{"krate":0,"index":3748},{"krate":0,"index":3750},{"krate":0,"index":3752},{"krate":0,"index":3753},{"krate":0,"index":3760},{"krate":0,"index":3762},{"krate":0,"index":3763},{"krate":0,"index":3765},{"krate":0,"index":3766},{"krate":0,"index":3768},{"krate":0,"index":3770},{"krate":0,"index":910},{"krate":0,"index":912},{"krate":0,"index":915},{"krate":0,"index":917},{"krate":0,"index":919},{"krate":0,"index":926},{"krate":0,"index":947},{"krate":0,"index":952},{"krate":0,"index":957},{"krate":0,"index":964},{"krate":0,"index":970},{"krate":0,"index":975},{"krate":0,"index":983},{"krate":0,"index":989},{"krate":0,"index":997},{"krate":0,"index":1008},{"krate":0,"index":1019},{"krate":0,"index":1026},{"krate":0,"index":1032},{"krate":0,"index":1038},{"krate":0,"index":1043},{"krate":0,"index":1049},{"krate":0,"index":1055},{"krate":0,"index":1062},{"krate":0,"index":1068},{"krate":0,"index":1074},{"krate":0,"index":1080},{"krate":0,"index":3771},{"krate":0,"index":3880},{"krate":0,"index":3989},{"krate":0,"index":4098},{"krate":0,"index":4207},{"krate":0,"index":4316},{"krate":0,"index":1081},{"krate":0,"index":1084}],"decl_id":null,"docs":" General Purpose Input / Output","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":4329,"byte_end":4364,"line_start":125,"line_end":125,"column_start":1,"column_end":36}},{"value":"/ General Purpose Input / Output","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":77799,"byte_end":77833,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":77834,"byte_end":77837,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The GPIO pins are organised into groups of 16 pins which can be accessed through the","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":77838,"byte_end":77926,"line_start":3,"line_end":3,"column_start":1,"column_end":89}},{"value":"/ `gpioa`, `gpiob`... modules. To get access to the pins, you first need to convert them into a","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":77927,"byte_end":78024,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ HAL designed struct from the `pac` struct using the [split](trait.GpioExt.html#tymethod.split) function.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":78025,"byte_end":78133,"line_start":5,"line_end":5,"column_start":1,"column_end":109}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":78134,"byte_end":78145,"line_start":6,"line_end":6,"column_start":1,"column_end":12}},{"value":"/ // Acquire the GPIOC peripheral","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":78146,"byte_end":78181,"line_start":7,"line_end":7,"column_start":1,"column_end":36}},{"value":"/ // NOTE: `dp` is the device peripherals from the `PAC` crate","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":78182,"byte_end":78246,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/ let mut gpioa = dp.GPIOA.split();","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":78247,"byte_end":78284,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":78285,"byte_end":78292,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":78293,"byte_end":78296,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This gives you a struct containing all the pins `px0..px15`.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":78297,"byte_end":78361,"line_start":12,"line_end":12,"column_start":1,"column_end":65}},{"value":"/ By default pins are in floating input mode. You can change their modes.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":78362,"byte_end":78437,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ For example, to set `pa5` high, you would call","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":78438,"byte_end":78488,"line_start":14,"line_end":14,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":78489,"byte_end":78492,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":78493,"byte_end":78504,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/ let output = gpioa.pa5.into_push_pull_output();","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":78505,"byte_end":78556,"line_start":17,"line_end":17,"column_start":1,"column_end":52}},{"value":"/ output.set_high();","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":78557,"byte_end":78579,"line_start":18,"line_end":18,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":78580,"byte_end":78587,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":78588,"byte_end":78591,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Modes","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":78592,"byte_end":78604,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":78605,"byte_end":78608,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Each GPIO pin can be set to various modes:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":78609,"byte_end":78655,"line_start":23,"line_end":23,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":78656,"byte_end":78659,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ - **Alternate**: Pin mode required when the pin is driven by other peripherals","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":78660,"byte_end":78742,"line_start":25,"line_end":25,"column_start":1,"column_end":83}},{"value":"/ - **AlternateOD**: Pin mode required when the pin is driven by other peripherals and has open drain","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":78743,"byte_end":78846,"line_start":26,"line_end":26,"column_start":1,"column_end":104}},{"value":"/ - **Analog**: Analog input to be used with ADC.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":78847,"byte_end":78898,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"/ - Input","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":78899,"byte_end":78910,"line_start":28,"line_end":28,"column_start":1,"column_end":12}},{"value":"/     - **PullUp**: Input connected to high with a weak pull up resistor. Will be high when nothing","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":78911,"byte_end":79012,"line_start":29,"line_end":29,"column_start":1,"column_end":102}},{"value":"/     is connected","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":79013,"byte_end":79033,"line_start":30,"line_end":30,"column_start":1,"column_end":21}},{"value":"/     - **PullDown**: Input connected to high with a weak pull up resistor. Will be low when nothing","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":79034,"byte_end":79136,"line_start":31,"line_end":31,"column_start":1,"column_end":103}},{"value":"/     is connected","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":79137,"byte_end":79157,"line_start":32,"line_end":32,"column_start":1,"column_end":21}},{"value":"/     - **Floating**: Input not pulled to high or low. Will be undefined when nothing is connected","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":79158,"byte_end":79258,"line_start":33,"line_end":33,"column_start":1,"column_end":101}},{"value":"/ - Output","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":79259,"byte_end":79271,"line_start":34,"line_end":34,"column_start":1,"column_end":13}},{"value":"/     - **PushPull**: Output which either drives the pin high or low","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":79272,"byte_end":79342,"line_start":35,"line_end":35,"column_start":1,"column_end":71}},{"value":"/     - **OpenDrain**: Output which leaves the gate floating, or pulls it do ground in drain","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":79343,"byte_end":79437,"line_start":36,"line_end":36,"column_start":1,"column_end":95}},{"value":"/     mode. Can be used as an input in the `open` configuration","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":79438,"byte_end":79503,"line_start":37,"line_end":37,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":79504,"byte_end":79507,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ## Changing modes","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":79508,"byte_end":79529,"line_start":39,"line_end":39,"column_start":1,"column_end":22}},{"value":"/ The simplest way to change the pin mode is to use the `into_<mode>` functions. These return a","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":79530,"byte_end":79627,"line_start":40,"line_end":40,"column_start":1,"column_end":98}},{"value":"/ new struct with the correct mode that you can use the input or output functions on.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":79628,"byte_end":79715,"line_start":41,"line_end":41,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":79716,"byte_end":79719,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ If you need a more temporary mode change, and can not use the `into_<mode>` functions for","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":79720,"byte_end":79813,"line_start":43,"line_end":43,"column_start":1,"column_end":94}},{"value":"/ ownership reasons, you can use the closure based `with_<mode>` functions to temporarily change the pin type, do","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":79814,"byte_end":79929,"line_start":44,"line_end":44,"column_start":1,"column_end":116}},{"value":"/ some output or input, and then have it change back once done.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":79930,"byte_end":79995,"line_start":45,"line_end":45,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":114169,"byte_end":114183,"line_start":363,"line_end":363,"column_start":12,"column_end":26},"name":"into_alternate","qualname":"<Pin<MODE, P, N>>::into_alternate","value":"pub fn into_alternate<const A: u8>(Self) -> Pin<Alternate<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate alternate mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate alternate mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":114109,"byte_end":114157,"line_start":362,"line_end":362,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":114405,"byte_end":114430,"line_start":370,"line_end":370,"column_start":12,"column_end":37},"name":"into_alternate_open_drain","qualname":"<Pin<MODE, P, N>>::into_alternate_open_drain","value":"pub fn into_alternate_open_drain<const A: u8>(Self) -> Pin<AlternateOD<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in alternate open drain mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in alternate open drain mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":114301,"byte_end":114363,"line_start":368,"line_end":368,"column_start":5,"column_end":67}},{"value":"allow(path_statements)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":114368,"byte_end":114393,"line_start":369,"line_end":369,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":114637,"byte_end":114655,"line_start":376,"line_end":376,"column_start":12,"column_end":30},"name":"into_alternate_af0","qualname":"<Pin<MODE, P, N>>::into_alternate_af0","value":"pub fn into_alternate_af0(Self) -> Pin<Alternate<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in AF0 mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in AF0 mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":114544,"byte_end":114589,"line_start":374,"line_end":374,"column_start":5,"column_end":50}},{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":114594,"byte_end":114625,"line_start":375,"line_end":375,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":114830,"byte_end":114848,"line_start":382,"line_end":382,"column_start":12,"column_end":30},"name":"into_alternate_af1","qualname":"<Pin<MODE, P, N>>::into_alternate_af1","value":"pub fn into_alternate_af1(Self) -> Pin<Alternate<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in AF1 mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in AF1 mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":114737,"byte_end":114782,"line_start":380,"line_end":380,"column_start":5,"column_end":50}},{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":114787,"byte_end":114818,"line_start":381,"line_end":381,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":115023,"byte_end":115041,"line_start":388,"line_end":388,"column_start":12,"column_end":30},"name":"into_alternate_af2","qualname":"<Pin<MODE, P, N>>::into_alternate_af2","value":"pub fn into_alternate_af2(Self) -> Pin<Alternate<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in AF2 mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in AF2 mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":114930,"byte_end":114975,"line_start":386,"line_end":386,"column_start":5,"column_end":50}},{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":114980,"byte_end":115011,"line_start":387,"line_end":387,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":115216,"byte_end":115234,"line_start":394,"line_end":394,"column_start":12,"column_end":30},"name":"into_alternate_af3","qualname":"<Pin<MODE, P, N>>::into_alternate_af3","value":"pub fn into_alternate_af3(Self) -> Pin<Alternate<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in AF3 mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in AF3 mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":115123,"byte_end":115168,"line_start":392,"line_end":392,"column_start":5,"column_end":50}},{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":115173,"byte_end":115204,"line_start":393,"line_end":393,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":115409,"byte_end":115427,"line_start":400,"line_end":400,"column_start":12,"column_end":30},"name":"into_alternate_af4","qualname":"<Pin<MODE, P, N>>::into_alternate_af4","value":"pub fn into_alternate_af4(Self) -> Pin<Alternate<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in AF4 mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in AF4 mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":115316,"byte_end":115361,"line_start":398,"line_end":398,"column_start":5,"column_end":50}},{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":115366,"byte_end":115397,"line_start":399,"line_end":399,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":115602,"byte_end":115620,"line_start":406,"line_end":406,"column_start":12,"column_end":30},"name":"into_alternate_af5","qualname":"<Pin<MODE, P, N>>::into_alternate_af5","value":"pub fn into_alternate_af5(Self) -> Pin<Alternate<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in AF5 mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in AF5 mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":115509,"byte_end":115554,"line_start":404,"line_end":404,"column_start":5,"column_end":50}},{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":115559,"byte_end":115590,"line_start":405,"line_end":405,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":115795,"byte_end":115813,"line_start":412,"line_end":412,"column_start":12,"column_end":30},"name":"into_alternate_af6","qualname":"<Pin<MODE, P, N>>::into_alternate_af6","value":"pub fn into_alternate_af6(Self) -> Pin<Alternate<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in AF6 mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in AF6 mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":115702,"byte_end":115747,"line_start":410,"line_end":410,"column_start":5,"column_end":50}},{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":115752,"byte_end":115783,"line_start":411,"line_end":411,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":115988,"byte_end":116006,"line_start":418,"line_end":418,"column_start":12,"column_end":30},"name":"into_alternate_af7","qualname":"<Pin<MODE, P, N>>::into_alternate_af7","value":"pub fn into_alternate_af7(Self) -> Pin<Alternate<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in AF7 mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in AF7 mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":115895,"byte_end":115940,"line_start":416,"line_end":416,"column_start":5,"column_end":50}},{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":115945,"byte_end":115976,"line_start":417,"line_end":417,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":116181,"byte_end":116199,"line_start":424,"line_end":424,"column_start":12,"column_end":30},"name":"into_alternate_af8","qualname":"<Pin<MODE, P, N>>::into_alternate_af8","value":"pub fn into_alternate_af8(Self) -> Pin<Alternate<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in AF8 mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in AF8 mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":116088,"byte_end":116133,"line_start":422,"line_end":422,"column_start":5,"column_end":50}},{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":116138,"byte_end":116169,"line_start":423,"line_end":423,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":116374,"byte_end":116392,"line_start":430,"line_end":430,"column_start":12,"column_end":30},"name":"into_alternate_af9","qualname":"<Pin<MODE, P, N>>::into_alternate_af9","value":"pub fn into_alternate_af9(Self) -> Pin<Alternate<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in AF9 mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in AF9 mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":116281,"byte_end":116326,"line_start":428,"line_end":428,"column_start":5,"column_end":50}},{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":116331,"byte_end":116362,"line_start":429,"line_end":429,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":116568,"byte_end":116587,"line_start":436,"line_end":436,"column_start":12,"column_end":31},"name":"into_alternate_af10","qualname":"<Pin<MODE, P, N>>::into_alternate_af10","value":"pub fn into_alternate_af10(Self) -> Pin<Alternate<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in AF10 mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in AF10 mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":116474,"byte_end":116520,"line_start":434,"line_end":434,"column_start":5,"column_end":51}},{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":116525,"byte_end":116556,"line_start":435,"line_end":435,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":116765,"byte_end":116784,"line_start":442,"line_end":442,"column_start":12,"column_end":31},"name":"into_alternate_af11","qualname":"<Pin<MODE, P, N>>::into_alternate_af11","value":"pub fn into_alternate_af11(Self) -> Pin<Alternate<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in AF11 mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in AF11 mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":116671,"byte_end":116717,"line_start":440,"line_end":440,"column_start":5,"column_end":51}},{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":116722,"byte_end":116753,"line_start":441,"line_end":441,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":116962,"byte_end":116981,"line_start":448,"line_end":448,"column_start":12,"column_end":31},"name":"into_alternate_af12","qualname":"<Pin<MODE, P, N>>::into_alternate_af12","value":"pub fn into_alternate_af12(Self) -> Pin<Alternate<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in AF12 mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in AF12 mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":116868,"byte_end":116914,"line_start":446,"line_end":446,"column_start":5,"column_end":51}},{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":116919,"byte_end":116950,"line_start":447,"line_end":447,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":117159,"byte_end":117178,"line_start":454,"line_end":454,"column_start":12,"column_end":31},"name":"into_alternate_af13","qualname":"<Pin<MODE, P, N>>::into_alternate_af13","value":"pub fn into_alternate_af13(Self) -> Pin<Alternate<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in AF13 mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in AF13 mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":117065,"byte_end":117111,"line_start":452,"line_end":452,"column_start":5,"column_end":51}},{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":117116,"byte_end":117147,"line_start":453,"line_end":453,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":117356,"byte_end":117375,"line_start":460,"line_end":460,"column_start":12,"column_end":31},"name":"into_alternate_af14","qualname":"<Pin<MODE, P, N>>::into_alternate_af14","value":"pub fn into_alternate_af14(Self) -> Pin<Alternate<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in AF14 mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in AF14 mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":117262,"byte_end":117308,"line_start":458,"line_end":458,"column_start":5,"column_end":51}},{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":117313,"byte_end":117344,"line_start":459,"line_end":459,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":117553,"byte_end":117572,"line_start":466,"line_end":466,"column_start":12,"column_end":31},"name":"into_alternate_af15","qualname":"<Pin<MODE, P, N>>::into_alternate_af15","value":"pub fn into_alternate_af15(Self) -> Pin<Alternate<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in AF15 mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in AF15 mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":117459,"byte_end":117505,"line_start":464,"line_end":464,"column_start":5,"column_end":51}},{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":117510,"byte_end":117541,"line_start":465,"line_end":465,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":117760,"byte_end":117789,"line_start":472,"line_end":472,"column_start":12,"column_end":41},"name":"into_alternate_af0_open_drain","qualname":"<Pin<MODE, P, N>>::into_alternate_af0_open_drain","value":"pub fn into_alternate_af0_open_drain(Self) -> Pin<AlternateOD<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in AF0 open drain mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in AF0 open drain mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":117656,"byte_end":117712,"line_start":470,"line_end":470,"column_start":5,"column_end":61}},{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":117717,"byte_end":117748,"line_start":471,"line_end":471,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":117988,"byte_end":118017,"line_start":478,"line_end":478,"column_start":12,"column_end":41},"name":"into_alternate_af1_open_drain","qualname":"<Pin<MODE, P, N>>::into_alternate_af1_open_drain","value":"pub fn into_alternate_af1_open_drain(Self) -> Pin<AlternateOD<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in AF1 open drain mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in AF1 open drain mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":117884,"byte_end":117940,"line_start":476,"line_end":476,"column_start":5,"column_end":61}},{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":117945,"byte_end":117976,"line_start":477,"line_end":477,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":118216,"byte_end":118245,"line_start":484,"line_end":484,"column_start":12,"column_end":41},"name":"into_alternate_af2_open_drain","qualname":"<Pin<MODE, P, N>>::into_alternate_af2_open_drain","value":"pub fn into_alternate_af2_open_drain(Self) -> Pin<AlternateOD<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in AF2 open drain mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in AF2 open drain mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":118112,"byte_end":118168,"line_start":482,"line_end":482,"column_start":5,"column_end":61}},{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":118173,"byte_end":118204,"line_start":483,"line_end":483,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":118444,"byte_end":118473,"line_start":490,"line_end":490,"column_start":12,"column_end":41},"name":"into_alternate_af3_open_drain","qualname":"<Pin<MODE, P, N>>::into_alternate_af3_open_drain","value":"pub fn into_alternate_af3_open_drain(Self) -> Pin<AlternateOD<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in AF3 open drain mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in AF3 open drain mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":118340,"byte_end":118396,"line_start":488,"line_end":488,"column_start":5,"column_end":61}},{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":118401,"byte_end":118432,"line_start":489,"line_end":489,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":118672,"byte_end":118701,"line_start":496,"line_end":496,"column_start":12,"column_end":41},"name":"into_alternate_af4_open_drain","qualname":"<Pin<MODE, P, N>>::into_alternate_af4_open_drain","value":"pub fn into_alternate_af4_open_drain(Self) -> Pin<AlternateOD<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in AF4 open drain mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in AF4 open drain mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":118568,"byte_end":118624,"line_start":494,"line_end":494,"column_start":5,"column_end":61}},{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":118629,"byte_end":118660,"line_start":495,"line_end":495,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":118900,"byte_end":118929,"line_start":502,"line_end":502,"column_start":12,"column_end":41},"name":"into_alternate_af5_open_drain","qualname":"<Pin<MODE, P, N>>::into_alternate_af5_open_drain","value":"pub fn into_alternate_af5_open_drain(Self) -> Pin<AlternateOD<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in AF5 open drain mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in AF5 open drain mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":118796,"byte_end":118852,"line_start":500,"line_end":500,"column_start":5,"column_end":61}},{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":118857,"byte_end":118888,"line_start":501,"line_end":501,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":119128,"byte_end":119157,"line_start":508,"line_end":508,"column_start":12,"column_end":41},"name":"into_alternate_af6_open_drain","qualname":"<Pin<MODE, P, N>>::into_alternate_af6_open_drain","value":"pub fn into_alternate_af6_open_drain(Self) -> Pin<AlternateOD<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in AF6 open drain mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in AF6 open drain mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":119024,"byte_end":119080,"line_start":506,"line_end":506,"column_start":5,"column_end":61}},{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":119085,"byte_end":119116,"line_start":507,"line_end":507,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":119356,"byte_end":119385,"line_start":514,"line_end":514,"column_start":12,"column_end":41},"name":"into_alternate_af7_open_drain","qualname":"<Pin<MODE, P, N>>::into_alternate_af7_open_drain","value":"pub fn into_alternate_af7_open_drain(Self) -> Pin<AlternateOD<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in AF7 open drain mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in AF7 open drain mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":119252,"byte_end":119308,"line_start":512,"line_end":512,"column_start":5,"column_end":61}},{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":119313,"byte_end":119344,"line_start":513,"line_end":513,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":119584,"byte_end":119613,"line_start":520,"line_end":520,"column_start":12,"column_end":41},"name":"into_alternate_af8_open_drain","qualname":"<Pin<MODE, P, N>>::into_alternate_af8_open_drain","value":"pub fn into_alternate_af8_open_drain(Self) -> Pin<AlternateOD<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in AF8 open drain mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in AF8 open drain mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":119480,"byte_end":119536,"line_start":518,"line_end":518,"column_start":5,"column_end":61}},{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":119541,"byte_end":119572,"line_start":519,"line_end":519,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":119812,"byte_end":119841,"line_start":526,"line_end":526,"column_start":12,"column_end":41},"name":"into_alternate_af9_open_drain","qualname":"<Pin<MODE, P, N>>::into_alternate_af9_open_drain","value":"pub fn into_alternate_af9_open_drain(Self) -> Pin<AlternateOD<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in AF9 open drain mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in AF9 open drain mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":119708,"byte_end":119764,"line_start":524,"line_end":524,"column_start":5,"column_end":61}},{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":119769,"byte_end":119800,"line_start":525,"line_end":525,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":120041,"byte_end":120071,"line_start":532,"line_end":532,"column_start":12,"column_end":42},"name":"into_alternate_af10_open_drain","qualname":"<Pin<MODE, P, N>>::into_alternate_af10_open_drain","value":"pub fn into_alternate_af10_open_drain(Self) -> Pin<AlternateOD<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in AF10 open drain mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in AF10 open drain mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":119936,"byte_end":119993,"line_start":530,"line_end":530,"column_start":5,"column_end":62}},{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":119998,"byte_end":120029,"line_start":531,"line_end":531,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":120273,"byte_end":120303,"line_start":538,"line_end":538,"column_start":12,"column_end":42},"name":"into_alternate_af11_open_drain","qualname":"<Pin<MODE, P, N>>::into_alternate_af11_open_drain","value":"pub fn into_alternate_af11_open_drain(Self) -> Pin<AlternateOD<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in AF11 open drain mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in AF11 open drain mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":120168,"byte_end":120225,"line_start":536,"line_end":536,"column_start":5,"column_end":62}},{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":120230,"byte_end":120261,"line_start":537,"line_end":537,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":120505,"byte_end":120535,"line_start":544,"line_end":544,"column_start":12,"column_end":42},"name":"into_alternate_af12_open_drain","qualname":"<Pin<MODE, P, N>>::into_alternate_af12_open_drain","value":"pub fn into_alternate_af12_open_drain(Self) -> Pin<AlternateOD<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in AF12 open drain mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in AF12 open drain mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":120400,"byte_end":120457,"line_start":542,"line_end":542,"column_start":5,"column_end":62}},{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":120462,"byte_end":120493,"line_start":543,"line_end":543,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":120702,"byte_end":120732,"line_start":549,"line_end":549,"column_start":12,"column_end":42},"name":"into_alternate_af13_open_drain","qualname":"<Pin<MODE, P, N>>::into_alternate_af13_open_drain","value":"pub fn into_alternate_af13_open_drain(Self) -> Pin<AlternateOD<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in AF13 open drain modev\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in AF13 open drain modev","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":120632,"byte_end":120690,"line_start":548,"line_end":548,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":120934,"byte_end":120964,"line_start":555,"line_end":555,"column_start":12,"column_end":42},"name":"into_alternate_af14_open_drain","qualname":"<Pin<MODE, P, N>>::into_alternate_af14_open_drain","value":"pub fn into_alternate_af14_open_drain(Self) -> Pin<AlternateOD<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in AF14 open drain mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in AF14 open drain mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":120829,"byte_end":120886,"line_start":553,"line_end":553,"column_start":5,"column_end":62}},{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":120891,"byte_end":120922,"line_start":554,"line_end":554,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":121166,"byte_end":121196,"line_start":561,"line_end":561,"column_start":12,"column_end":42},"name":"into_alternate_af15_open_drain","qualname":"<Pin<MODE, P, N>>::into_alternate_af15_open_drain","value":"pub fn into_alternate_af15_open_drain(Self) -> Pin<AlternateOD<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate in AF15 open drain mode\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate in AF15 open drain mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":121061,"byte_end":121118,"line_start":559,"line_end":559,"column_start":5,"column_end":62}},{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":121123,"byte_end":121154,"line_start":560,"line_end":560,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":121362,"byte_end":121381,"line_start":566,"line_end":566,"column_start":12,"column_end":31},"name":"into_floating_input","qualname":"<Pin<MODE, P, N>>::into_floating_input","value":"pub fn into_floating_input(Self) -> Pin<Input<Floating>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate as a floating input pin\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate as a floating input pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":121293,"byte_end":121350,"line_start":565,"line_end":565,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":121566,"byte_end":121586,"line_start":572,"line_end":572,"column_start":12,"column_end":32},"name":"into_pull_down_input","qualname":"<Pin<MODE, P, N>>::into_pull_down_input","value":"pub fn into_pull_down_input(Self) -> Pin<Input<PullDown>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate as a pulled down input pin\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate as a pulled down input pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":121494,"byte_end":121554,"line_start":571,"line_end":571,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":121769,"byte_end":121787,"line_start":578,"line_end":578,"column_start":12,"column_end":30},"name":"into_pull_up_input","qualname":"<Pin<MODE, P, N>>::into_pull_up_input","value":"pub fn into_pull_up_input(Self) -> Pin<Input<PullUp>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate as a pulled up input pin\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate as a pulled up input pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":121699,"byte_end":121757,"line_start":577,"line_end":577,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":122004,"byte_end":122026,"line_start":585,"line_end":585,"column_start":12,"column_end":34},"name":"into_open_drain_output","qualname":"<Pin<MODE, P, N>>::into_open_drain_output","value":"pub fn into_open_drain_output(Self) -> Pin<Output<OpenDrain>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate as an open drain output pin\n Initial state will be low.\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate as an open drain output pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":121896,"byte_end":121957,"line_start":583,"line_end":583,"column_start":5,"column_end":66}},{"value":"/ Initial state will be low.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":121962,"byte_end":121992,"line_start":584,"line_end":584,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":122300,"byte_end":122331,"line_start":592,"line_end":592,"column_start":12,"column_end":43},"name":"into_open_drain_output_in_state","qualname":"<Pin<MODE, P, N>>::into_open_drain_output_in_state","value":"pub fn into_open_drain_output_in_state(Self, PinState)\n-> Pin<Output<OpenDrain>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate as an open-drain output pin.\n `initial_state` specifies whether the pin should be initially high or low.\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate as an open-drain output pin.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":122143,"byte_end":122205,"line_start":590,"line_end":590,"column_start":5,"column_end":67}},{"value":"/ `initial_state` specifies whether the pin should be initially high or low.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":122210,"byte_end":122288,"line_start":591,"line_end":591,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":122643,"byte_end":122664,"line_start":603,"line_end":603,"column_start":12,"column_end":33},"name":"into_push_pull_output","qualname":"<Pin<MODE, P, N>>::into_push_pull_output","value":"pub fn into_push_pull_output(Self) -> Pin<Output<PushPull>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate as an push pull output pin\n Initial state will be low.\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate as an push pull output pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":122536,"byte_end":122596,"line_start":601,"line_end":601,"column_start":5,"column_end":65}},{"value":"/ Initial state will be low.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":122601,"byte_end":122631,"line_start":602,"line_end":602,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":122960,"byte_end":122990,"line_start":611,"line_end":611,"column_start":12,"column_end":42},"name":"into_push_pull_output_in_state","qualname":"<Pin<MODE, P, N>>::into_push_pull_output_in_state","value":"pub fn into_push_pull_output_in_state(Self, PinState)\n-> Pin<Output<PushPull>, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate as an push-pull output pin.\n `initial_state` specifies whether the pin should be initially high or low.\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate as an push-pull output pin.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":122804,"byte_end":122865,"line_start":609,"line_end":609,"column_start":5,"column_end":66}},{"value":"/ `initial_state` specifies whether the pin should be initially high or low.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":122870,"byte_end":122948,"line_start":610,"line_end":610,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":123261,"byte_end":123272,"line_start":621,"line_end":621,"column_start":12,"column_end":23},"name":"into_analog","qualname":"<Pin<MODE, P, N>>::into_analog","value":"pub fn into_analog(Self) -> Pin<Analog, , >","parent":null,"children":[],"decl_id":null,"docs":" Configures the pin to operate as an analog input pin\n","sig":null,"attributes":[{"value":"/ Configures the pin to operate as an analog input pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":123193,"byte_end":123249,"line_start":620,"line_end":620,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":124854,"byte_end":124873,"line_start":675,"line_end":675,"column_start":12,"column_end":31},"name":"with_floating_input","qualname":"<Pin<MODE, P, N>>::with_floating_input","value":"pub fn with_floating_input<R,\nimpl FnOnce(&mut Pin<Input<Floating>, P, N>) -> R: FnOnce(&mut Pin<Input<Floating>,\n, >) -> R>(&mut Self, impl FnOnce(&mut Pin<Input<Floating>, P, N>) -> R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily configures this pin as a floating input.","sig":null,"attributes":[{"value":"/ Temporarily configures this pin as a floating input.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":124658,"byte_end":124714,"line_start":671,"line_end":671,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":124719,"byte_end":124722,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is called with the reconfigured pin. After it returns,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":124727,"byte_end":124801,"line_start":673,"line_end":673,"column_start":5,"column_end":79}},{"value":"/ the pin will be configured back.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":124806,"byte_end":124842,"line_start":674,"line_end":674,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":125208,"byte_end":125228,"line_start":686,"line_end":686,"column_start":12,"column_end":32},"name":"with_pull_down_input","qualname":"<Pin<MODE, P, N>>::with_pull_down_input","value":"pub fn with_pull_down_input<R,\nimpl FnOnce(&mut Pin<Input<PullDown>, P, N>) -> R: FnOnce(&mut Pin<Input<PullDown>,\n, >) -> R>(&mut Self, impl FnOnce(&mut Pin<Input<PullDown>, P, N>) -> R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily configures this pin as a pulled-down input.","sig":null,"attributes":[{"value":"/ Temporarily configures this pin as a pulled-down input.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":125009,"byte_end":125068,"line_start":682,"line_end":682,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":125073,"byte_end":125076,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is called with the reconfigured pin. After it returns,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":125081,"byte_end":125155,"line_start":684,"line_end":684,"column_start":5,"column_end":79}},{"value":"/ the pin will be configured back.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":125160,"byte_end":125196,"line_start":685,"line_end":685,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":125561,"byte_end":125579,"line_start":697,"line_end":697,"column_start":12,"column_end":30},"name":"with_pull_up_input","qualname":"<Pin<MODE, P, N>>::with_pull_up_input","value":"pub fn with_pull_up_input<R,\nimpl FnOnce(&mut Pin<Input<PullUp>, P, N>) -> R: FnOnce(&mut Pin<Input<PullUp>,\n, >) -> R>(&mut Self, impl FnOnce(&mut Pin<Input<PullUp>, P, N>) -> R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily configures this pin as a pulled-up input.","sig":null,"attributes":[{"value":"/ Temporarily configures this pin as a pulled-up input.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":125364,"byte_end":125421,"line_start":693,"line_end":693,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":125426,"byte_end":125429,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is called with the reconfigured pin. After it returns,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":125434,"byte_end":125508,"line_start":695,"line_end":695,"column_start":5,"column_end":79}},{"value":"/ the pin will be configured back.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":125513,"byte_end":125549,"line_start":696,"line_end":696,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":125906,"byte_end":125917,"line_start":708,"line_end":708,"column_start":12,"column_end":23},"name":"with_analog","qualname":"<Pin<MODE, P, N>>::with_analog","value":"pub fn with_analog<R,\nimpl FnOnce(&mut Pin<Analog, P, N>) -> R: FnOnce(&mut Pin<Analog, , >) ->\nR>(&mut Self, impl FnOnce(&mut Pin<Analog, P, N>) -> R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily configures this pin as an analog pin.","sig":null,"attributes":[{"value":"/ Temporarily configures this pin as an analog pin.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":125713,"byte_end":125766,"line_start":704,"line_end":704,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":125771,"byte_end":125774,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is called with the reconfigured pin. After it returns,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":125779,"byte_end":125853,"line_start":706,"line_end":706,"column_start":5,"column_end":79}},{"value":"/ the pin will be configured back.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":125858,"byte_end":125894,"line_start":707,"line_end":707,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":126354,"byte_end":126376,"line_start":718,"line_end":718,"column_start":12,"column_end":34},"name":"with_open_drain_output","qualname":"<Pin<MODE, P, N>>::with_open_drain_output","value":"pub fn with_open_drain_output<R,\nimpl FnOnce(&mut Pin<Output<OpenDrain>, P, N>) -> R: FnOnce(&mut Pin<Output<OpenDrain>,\n, >) -> R>(&mut Self, impl FnOnce(&mut Pin<Output<OpenDrain>, P, N>) -> R)\n-> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily configures this pin as an open drain output.","sig":null,"attributes":[{"value":"/ Temporarily configures this pin as an open drain output.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":126021,"byte_end":126081,"line_start":712,"line_end":712,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":126086,"byte_end":126089,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is called with the reconfigured pin. After it returns,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":126094,"byte_end":126168,"line_start":714,"line_end":714,"column_start":5,"column_end":79}},{"value":"/ the pin will be configured back.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":126173,"byte_end":126209,"line_start":715,"line_end":715,"column_start":5,"column_end":41}},{"value":"/ The value of the pin after conversion is undefined. If you","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":126214,"byte_end":126276,"line_start":716,"line_end":716,"column_start":5,"column_end":67}},{"value":"/ want to control it, use `with_open_drain_output_in_state`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":126281,"byte_end":126342,"line_start":717,"line_end":717,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":126877,"byte_end":126908,"line_start":732,"line_end":732,"column_start":12,"column_end":43},"name":"with_open_drain_output_in_state","qualname":"<Pin<MODE, P, N>>::with_open_drain_output_in_state","value":"pub fn with_open_drain_output_in_state<R,\nimpl FnOnce(&mut Pin<Output<OpenDrain>, P, N>) -> R: FnOnce(&mut Pin<Output<OpenDrain>,\n, >) ->\nR>(&mut Self, PinState, impl FnOnce(&mut Pin<Output<OpenDrain>, P, N>) -> R)\n-> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily configures this pin as an open drain output .","sig":null,"attributes":[{"value":"/ Temporarily configures this pin as an open drain output .","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":126514,"byte_end":126575,"line_start":725,"line_end":725,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":126580,"byte_end":126583,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is called with the reconfigured pin. After it returns,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":126588,"byte_end":126662,"line_start":727,"line_end":727,"column_start":5,"column_end":79}},{"value":"/ the pin will be configured back.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":126667,"byte_end":126703,"line_start":728,"line_end":728,"column_start":5,"column_end":41}},{"value":"/ Note that the new state is set slightly before conversion","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":126708,"byte_end":126769,"line_start":729,"line_end":729,"column_start":5,"column_end":66}},{"value":"/ happens. This can cause a short output glitch if switching","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":126774,"byte_end":126836,"line_start":730,"line_end":730,"column_start":5,"column_end":67}},{"value":"/ between output modes","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":126841,"byte_end":126865,"line_start":731,"line_end":731,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":127433,"byte_end":127454,"line_start":747,"line_end":747,"column_start":12,"column_end":33},"name":"with_push_pull_output","qualname":"<Pin<MODE, P, N>>::with_push_pull_output","value":"pub fn with_push_pull_output<R,\nimpl FnOnce(&mut Pin<Output<PushPull>, P, N>) -> R: FnOnce(&mut Pin<Output<PushPull>,\n, >) -> R>(&mut Self, impl FnOnce(&mut Pin<Output<PushPull>, P, N>) -> R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily configures this pin as a push-pull output.","sig":null,"attributes":[{"value":"/ Temporarily configures this pin as a push-pull output.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":127103,"byte_end":127161,"line_start":741,"line_end":741,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":127166,"byte_end":127169,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is called with the reconfigured pin. After it returns,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":127174,"byte_end":127248,"line_start":743,"line_end":743,"column_start":5,"column_end":79}},{"value":"/ the pin will be configured back.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":127253,"byte_end":127289,"line_start":744,"line_end":744,"column_start":5,"column_end":41}},{"value":"/ The value of the pin after conversion is undefined. If you","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":127294,"byte_end":127356,"line_start":745,"line_end":745,"column_start":5,"column_end":67}},{"value":"/ want to control it, use `with_push_pull_output_in_state`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":127361,"byte_end":127421,"line_start":746,"line_end":746,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":127951,"byte_end":127981,"line_start":761,"line_end":761,"column_start":12,"column_end":42},"name":"with_push_pull_output_in_state","qualname":"<Pin<MODE, P, N>>::with_push_pull_output_in_state","value":"pub fn with_push_pull_output_in_state<R,\nimpl FnOnce(&mut Pin<Output<PushPull>, P, N>) -> R: FnOnce(&mut Pin<Output<PushPull>,\n, >) ->\nR>(&mut Self, PinState, impl FnOnce(&mut Pin<Output<PushPull>, P, N>) -> R)\n-> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily configures this pin as a push-pull output.","sig":null,"attributes":[{"value":"/ Temporarily configures this pin as a push-pull output.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":127591,"byte_end":127649,"line_start":754,"line_end":754,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":127654,"byte_end":127657,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is called with the reconfigured pin. After it returns,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":127662,"byte_end":127736,"line_start":756,"line_end":756,"column_start":5,"column_end":79}},{"value":"/ the pin will be configured back.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":127741,"byte_end":127777,"line_start":757,"line_end":757,"column_start":5,"column_end":41}},{"value":"/ Note that the new state is set slightly before conversion","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":127782,"byte_end":127843,"line_start":758,"line_end":758,"column_start":5,"column_end":66}},{"value":"/ happens. This can cause a short output glitch if switching","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":127848,"byte_end":127910,"line_start":759,"line_end":759,"column_start":5,"column_end":67}},{"value":"/ between output modes","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":127915,"byte_end":127939,"line_start":760,"line_end":760,"column_start":5,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":128545,"byte_end":128552,"line_start":784,"line_end":784,"column_start":11,"column_end":18},"name":"PinMode","qualname":"::gpio::convert::PinMode","value":"PinMode: crate::Sealed","parent":null,"children":[{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638}],"decl_id":null,"docs":" Marker trait for valid pin modes (type state).","sig":null,"attributes":[{"value":"/ Marker trait for valid pin modes (type state).","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":128432,"byte_end":128482,"line_start":781,"line_end":781,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":128483,"byte_end":128486,"line_start":782,"line_end":782,"column_start":1,"column_end":4}},{"value":"/ It can not be implemented by outside types.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":128487,"byte_end":128534,"line_start":783,"line_end":783,"column_start":1,"column_end":48}}]},{"kind":"Const","id":{"krate":0,"index":636},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":128713,"byte_end":128718,"line_start":789,"line_end":789,"column_start":11,"column_end":16},"name":"PUPDR","qualname":"::gpio::convert::PinMode::PUPDR","value":"u32","parent":{"krate":0,"index":635},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":637},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":128754,"byte_end":128759,"line_start":791,"line_end":791,"column_start":11,"column_end":16},"name":"MODER","qualname":"::gpio::convert::PinMode::MODER","value":"u32","parent":{"krate":0,"index":635},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":638},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":128795,"byte_end":128801,"line_start":793,"line_end":793,"column_start":11,"column_end":17},"name":"OTYPER","qualname":"::gpio::convert::PinMode::OTYPER","value":"Option<u32>","parent":{"krate":0,"index":635},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":665},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":129735,"byte_end":129740,"line_start":834,"line_end":834,"column_start":12,"column_end":17},"name":"Const","qualname":"::gpio::convert::Const","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":668},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":129766,"byte_end":129778,"line_start":836,"line_end":836,"column_start":11,"column_end":23},"name":"SetAlternate","qualname":"::gpio::convert::SetAlternate","value":"SetAlternate<const A: u8>","parent":null,"children":[{"krate":0,"index":670},{"krate":0,"index":671}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":129801,"byte_end":129813,"line_start":837,"line_end":837,"column_start":8,"column_end":20},"name":"set_alt_mode","qualname":"::gpio::convert::SetAlternate::set_alt_mode","value":"pub fn set_alt_mode(&mut Self)","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":129833,"byte_end":129845,"line_start":838,"line_end":838,"column_start":8,"column_end":20},"name":"restore_mode","qualname":"::gpio::convert::SetAlternate::restore_mode","value":"pub fn restore_mode(&mut Self)","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":689},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":130381,"byte_end":130395,"line_start":859,"line_end":859,"column_start":11,"column_end":25},"name":"SetAlternateOD","qualname":"::gpio::convert::SetAlternateOD","value":"SetAlternateOD<const A: u8>","parent":null,"children":[{"krate":0,"index":691},{"krate":0,"index":692}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":130418,"byte_end":130430,"line_start":860,"line_end":860,"column_start":8,"column_end":20},"name":"set_alt_mode","qualname":"::gpio::convert::SetAlternateOD::set_alt_mode","value":"pub fn set_alt_mode(&mut Self)","parent":{"krate":0,"index":689},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":130450,"byte_end":130462,"line_start":861,"line_end":861,"column_start":8,"column_end":20},"name":"restore_mode","qualname":"::gpio::convert::SetAlternateOD::restore_mode","value":"pub fn restore_mode(&mut Self)","parent":{"krate":0,"index":689},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":723},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":131164,"byte_end":131169,"line_start":3,"line_end":3,"column_start":10,"column_end":15},"name":"PEPin","qualname":"::gpio::partially_erased::PEPin","value":"PartiallyErasedPin<MODE, >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":726},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":131401,"byte_end":131419,"line_start":9,"line_end":9,"column_start":12,"column_end":30},"name":"PartiallyErasedPin","qualname":"::gpio::partially_erased::PartiallyErasedPin","value":"PartiallyErasedPin {  }","parent":null,"children":[{"krate":0,"index":729},{"krate":0,"index":730}],"decl_id":null,"docs":" Partially erased pin","sig":null,"attributes":[{"value":"/ Partially erased pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":131223,"byte_end":131247,"line_start":5,"line_end":5,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":131248,"byte_end":131251,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ - `MODE` is one of the pin modes (see [Modes](crate::gpio#modes) section).","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":131252,"byte_end":131330,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ - `P` is port name: `A` for GPIOA, `B` for GPIOB, etc.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":131331,"byte_end":131389,"line_start":8,"line_end":8,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":132006,"byte_end":132014,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"set_high","qualname":"<PartiallyErasedPin<Output<MODE>, P>>::set_high","value":"pub fn set_high(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":131977,"byte_end":131994,"line_start":37,"line_end":37,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":132204,"byte_end":132211,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"set_low","qualname":"<PartiallyErasedPin<Output<MODE>, P>>::set_low","value":"pub fn set_low(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":132175,"byte_end":132192,"line_start":43,"line_end":43,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":132462,"byte_end":132471,"line_start":54,"line_end":54,"column_start":12,"column_end":21},"name":"get_state","qualname":"<PartiallyErasedPin<Output<MODE>, P>>::get_state","value":"pub fn get_state(&Self) -> PinState","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":132433,"byte_end":132450,"line_start":53,"line_end":53,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":132644,"byte_end":132653,"line_start":63,"line_end":63,"column_start":12,"column_end":21},"name":"set_state","qualname":"<PartiallyErasedPin<Output<MODE>, P>>::set_state","value":"pub fn set_state(&mut Self, PinState)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":132615,"byte_end":132632,"line_start":62,"line_end":62,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":132848,"byte_end":132859,"line_start":71,"line_end":71,"column_start":12,"column_end":23},"name":"is_set_high","qualname":"<PartiallyErasedPin<Output<MODE>, P>>::is_set_high","value":"pub fn is_set_high(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":132819,"byte_end":132836,"line_start":70,"line_end":70,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":132944,"byte_end":132954,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"is_set_low","qualname":"<PartiallyErasedPin<Output<MODE>, P>>::is_set_low","value":"pub fn is_set_low(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":132915,"byte_end":132932,"line_start":75,"line_end":75,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":133147,"byte_end":133153,"line_start":82,"line_end":82,"column_start":12,"column_end":18},"name":"toggle","qualname":"<PartiallyErasedPin<Output<MODE>, P>>::toggle","value":"pub fn toggle(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":133118,"byte_end":133135,"line_start":81,"line_end":81,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":134304,"byte_end":134311,"line_start":131,"line_end":131,"column_start":12,"column_end":19},"name":"is_high","qualname":"<PartiallyErasedPin<Output<OpenDrain>, P>>::is_high","value":"pub fn is_high(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":134275,"byte_end":134292,"line_start":130,"line_end":130,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":134392,"byte_end":134398,"line_start":136,"line_end":136,"column_start":12,"column_end":18},"name":"is_low","qualname":"<PartiallyErasedPin<Output<OpenDrain>, P>>::is_low","value":"pub fn is_low(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":134363,"byte_end":134380,"line_start":135,"line_end":135,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":134980,"byte_end":134987,"line_start":158,"line_end":158,"column_start":12,"column_end":19},"name":"is_high","qualname":"<PartiallyErasedPin<Input<MODE>, P>>::is_high","value":"pub fn is_high(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":134951,"byte_end":134968,"line_start":157,"line_end":157,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":135068,"byte_end":135074,"line_start":163,"line_end":163,"column_start":12,"column_end":18},"name":"is_low","qualname":"<PartiallyErasedPin<Input<MODE>, P>>::is_low","value":"pub fn is_low(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":135039,"byte_end":135056,"line_start":162,"line_end":162,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":798},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":135584,"byte_end":135588,"line_start":3,"line_end":3,"column_start":10,"column_end":14},"name":"EPin","qualname":"::gpio::erased::EPin","value":"ErasedPin<MODE>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":800},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":135728,"byte_end":135737,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"ErasedPin","qualname":"::gpio::erased::ErasedPin","value":"ErasedPin {  }","parent":null,"children":[{"krate":0,"index":802},{"krate":0,"index":803}],"decl_id":null,"docs":" Fully erased pin","sig":null,"attributes":[{"value":"/ Fully erased pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":135615,"byte_end":135635,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":135636,"byte_end":135639,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `MODE` is one of the pin modes (see [Modes](crate::gpio#modes) section).","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":135640,"byte_end":135716,"line_start":7,"line_end":7,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":137193,"byte_end":137201,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"set_high","qualname":"<ErasedPin<Output<MODE>>>::set_high","value":"pub fn set_high(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":137164,"byte_end":137181,"line_start":57,"line_end":57,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":137392,"byte_end":137399,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"set_low","qualname":"<ErasedPin<Output<MODE>>>::set_low","value":"pub fn set_low(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":137363,"byte_end":137380,"line_start":63,"line_end":63,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":137651,"byte_end":137660,"line_start":74,"line_end":74,"column_start":12,"column_end":21},"name":"get_state","qualname":"<ErasedPin<Output<MODE>>>::get_state","value":"pub fn get_state(&Self) -> PinState","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":137622,"byte_end":137639,"line_start":73,"line_end":73,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":137833,"byte_end":137842,"line_start":83,"line_end":83,"column_start":12,"column_end":21},"name":"set_state","qualname":"<ErasedPin<Output<MODE>>>::set_state","value":"pub fn set_state(&mut Self, PinState)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":137804,"byte_end":137821,"line_start":82,"line_end":82,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":138037,"byte_end":138048,"line_start":91,"line_end":91,"column_start":12,"column_end":23},"name":"is_set_high","qualname":"<ErasedPin<Output<MODE>>>::is_set_high","value":"pub fn is_set_high(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":138008,"byte_end":138025,"line_start":90,"line_end":90,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":138133,"byte_end":138143,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"is_set_low","qualname":"<ErasedPin<Output<MODE>>>::is_set_low","value":"pub fn is_set_low(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":138104,"byte_end":138121,"line_start":95,"line_end":95,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":138268,"byte_end":138274,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"toggle","qualname":"<ErasedPin<Output<MODE>>>::toggle","value":"pub fn toggle(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":138239,"byte_end":138256,"line_start":100,"line_end":100,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":139332,"byte_end":139339,"line_start":150,"line_end":150,"column_start":12,"column_end":19},"name":"is_high","qualname":"<ErasedPin<Output<OpenDrain>>>::is_high","value":"pub fn is_high(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":139303,"byte_end":139320,"line_start":149,"line_end":149,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":139420,"byte_end":139426,"line_start":155,"line_end":155,"column_start":12,"column_end":18},"name":"is_low","qualname":"<ErasedPin<Output<OpenDrain>>>::is_low","value":"pub fn is_low(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":139391,"byte_end":139408,"line_start":154,"line_end":154,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":139901,"byte_end":139908,"line_start":176,"line_end":176,"column_start":12,"column_end":19},"name":"is_high","qualname":"<ErasedPin<Input<MODE>>>::is_high","value":"pub fn is_high(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":139872,"byte_end":139889,"line_start":175,"line_end":175,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":139989,"byte_end":139995,"line_start":181,"line_end":181,"column_start":12,"column_end":18},"name":"is_low","qualname":"<ErasedPin<Input<MODE>>>::is_low","value":"pub fn is_low(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":139960,"byte_end":139977,"line_start":180,"line_end":180,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":861},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":80498,"byte_end":80503,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"name":"NoPin","qualname":"::gpio::NoPin","value":"","parent":null,"children":[],"decl_id":null,"docs":" A filler pin type\n","sig":null,"attributes":[{"value":"/ A filler pin type","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":80465,"byte_end":80486,"line_start":65,"line_end":65,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":80597,"byte_end":80604,"line_start":69,"line_end":69,"column_start":11,"column_end":18},"name":"GpioExt","qualname":"::gpio::GpioExt","value":"GpioExt","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":865}],"decl_id":null,"docs":" Extension trait to split a GPIO peripheral in independent pins and registers\n","sig":null,"attributes":[{"value":"/ Extension trait to split a GPIO peripheral in independent pins and registers","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":80506,"byte_end":80586,"line_start":68,"line_end":68,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":864},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":80657,"byte_end":80662,"line_start":71,"line_end":71,"column_start":10,"column_end":15},"name":"Parts","qualname":"::gpio::GpioExt::Parts","value":"type Parts;","parent":{"krate":0,"index":863},"children":[],"decl_id":null,"docs":" The parts to split the GPIO into\n","sig":null,"attributes":[{"value":"/ The parts to split the GPIO into","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":80611,"byte_end":80647,"line_start":70,"line_end":70,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":80738,"byte_end":80743,"line_start":74,"line_end":74,"column_start":8,"column_end":13},"name":"split","qualname":"::gpio::GpioExt::split","value":"pub fn split(Self) -> Self::Parts","parent":{"krate":0,"index":863},"children":[],"decl_id":null,"docs":" Splits the GPIO block into independent pins and registers\n","sig":null,"attributes":[{"value":"/ Splits the GPIO block into independent pins and registers","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":80669,"byte_end":80730,"line_start":73,"line_end":73,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":866},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":80779,"byte_end":80785,"line_start":77,"line_end":77,"column_start":11,"column_end":17},"name":"PinExt","qualname":"::gpio::PinExt","value":"PinExt","parent":null,"children":[{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":867},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":80797,"byte_end":80801,"line_start":78,"line_end":78,"column_start":10,"column_end":14},"name":"Mode","qualname":"::gpio::PinExt::Mode","value":"type Mode;","parent":{"krate":0,"index":866},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":80836,"byte_end":80842,"line_start":80,"line_end":80,"column_start":8,"column_end":14},"name":"pin_id","qualname":"::gpio::PinExt::pin_id","value":"pub fn pin_id(&Self) -> u8","parent":{"krate":0,"index":866},"children":[],"decl_id":null,"docs":" Return pin number\n","sig":null,"attributes":[{"value":"/ Return pin number","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":80807,"byte_end":80828,"line_start":79,"line_end":79,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":80891,"byte_end":80898,"line_start":82,"line_end":82,"column_start":8,"column_end":15},"name":"port_id","qualname":"::gpio::PinExt::port_id","value":"pub fn port_id(&Self) -> u8","parent":{"krate":0,"index":866},"children":[],"decl_id":null,"docs":" Return port number\n","sig":null,"attributes":[{"value":"/ Return port number","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":80861,"byte_end":80883,"line_start":81,"line_end":81,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":870},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":80964,"byte_end":80973,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"Alternate","qualname":"::gpio::Alternate","value":"","parent":null,"children":[],"decl_id":null,"docs":" Some alternate mode (type state)\n","sig":null,"attributes":[{"value":"/ Some alternate mode (type state)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":80916,"byte_end":80952,"line_start":85,"line_end":85,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":873},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":81065,"byte_end":81076,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"AlternateOD","qualname":"::gpio::AlternateOD","value":"","parent":null,"children":[],"decl_id":null,"docs":" Some alternate mode in open drain configuration (type state)\n","sig":null,"attributes":[{"value":"/ Some alternate mode in open drain configuration (type state)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":80989,"byte_end":81053,"line_start":88,"line_end":88,"column_start":1,"column_end":65}}]},{"kind":"Const","id":{"krate":0,"index":876},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":81129,"byte_end":81132,"line_start":92,"line_end":92,"column_start":11,"column_end":14},"name":"AF0","qualname":"::gpio::AF0","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":877},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":81152,"byte_end":81155,"line_start":93,"line_end":93,"column_start":11,"column_end":14},"name":"AF1","qualname":"::gpio::AF1","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":878},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":81175,"byte_end":81178,"line_start":94,"line_end":94,"column_start":11,"column_end":14},"name":"AF2","qualname":"::gpio::AF2","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":879},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":81198,"byte_end":81201,"line_start":95,"line_end":95,"column_start":11,"column_end":14},"name":"AF3","qualname":"::gpio::AF3","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":880},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":81221,"byte_end":81224,"line_start":96,"line_end":96,"column_start":11,"column_end":14},"name":"AF4","qualname":"::gpio::AF4","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":881},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":81244,"byte_end":81247,"line_start":97,"line_end":97,"column_start":11,"column_end":14},"name":"AF5","qualname":"::gpio::AF5","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":882},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":81267,"byte_end":81270,"line_start":98,"line_end":98,"column_start":11,"column_end":14},"name":"AF6","qualname":"::gpio::AF6","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":883},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":81290,"byte_end":81293,"line_start":99,"line_end":99,"column_start":11,"column_end":14},"name":"AF7","qualname":"::gpio::AF7","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":884},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":81313,"byte_end":81316,"line_start":100,"line_end":100,"column_start":11,"column_end":14},"name":"AF8","qualname":"::gpio::AF8","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":885},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":81336,"byte_end":81339,"line_start":101,"line_end":101,"column_start":11,"column_end":14},"name":"AF9","qualname":"::gpio::AF9","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":886},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":81359,"byte_end":81363,"line_start":102,"line_end":102,"column_start":11,"column_end":15},"name":"AF10","qualname":"::gpio::AF10","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":887},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":81384,"byte_end":81388,"line_start":103,"line_end":103,"column_start":11,"column_end":15},"name":"AF11","qualname":"::gpio::AF11","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":888},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":81409,"byte_end":81413,"line_start":104,"line_end":104,"column_start":11,"column_end":15},"name":"AF12","qualname":"::gpio::AF12","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":889},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":81434,"byte_end":81438,"line_start":105,"line_end":105,"column_start":11,"column_end":15},"name":"AF13","qualname":"::gpio::AF13","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":890},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":81459,"byte_end":81463,"line_start":106,"line_end":106,"column_start":11,"column_end":15},"name":"AF14","qualname":"::gpio::AF14","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":891},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":81484,"byte_end":81488,"line_start":107,"line_end":107,"column_start":11,"column_end":15},"name":"AF15","qualname":"::gpio::AF15","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":892},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":81539,"byte_end":81544,"line_start":110,"line_end":110,"column_start":12,"column_end":17},"name":"Input","qualname":"::gpio::Input","value":"Input {  }","parent":null,"children":[{"krate":0,"index":894}],"decl_id":null,"docs":" Input mode (type state)\n","sig":null,"attributes":[{"value":"/ Input mode (type state)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":81500,"byte_end":81527,"line_start":109,"line_end":109,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":895},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":81629,"byte_end":81637,"line_start":115,"line_end":115,"column_start":12,"column_end":20},"name":"Floating","qualname":"::gpio::Floating","value":"","parent":null,"children":[],"decl_id":null,"docs":" Floating input (type state)\n","sig":null,"attributes":[{"value":"/ Floating input (type state)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":81586,"byte_end":81617,"line_start":114,"line_end":114,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":897},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":81686,"byte_end":81694,"line_start":118,"line_end":118,"column_start":12,"column_end":20},"name":"PullDown","qualname":"::gpio::PullDown","value":"","parent":null,"children":[],"decl_id":null,"docs":" Pulled down input (type state)\n","sig":null,"attributes":[{"value":"/ Pulled down input (type state)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":81640,"byte_end":81674,"line_start":117,"line_end":117,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":899},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":81741,"byte_end":81747,"line_start":121,"line_end":121,"column_start":12,"column_end":18},"name":"PullUp","qualname":"::gpio::PullUp","value":"","parent":null,"children":[],"decl_id":null,"docs":" Pulled up input (type state)\n","sig":null,"attributes":[{"value":"/ Pulled up input (type state)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":81697,"byte_end":81729,"line_start":120,"line_end":120,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":901},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":81805,"byte_end":81814,"line_start":124,"line_end":124,"column_start":12,"column_end":21},"name":"OpenDrain","qualname":"::gpio::OpenDrain","value":"","parent":null,"children":[],"decl_id":null,"docs":" Open drain input or output (type state)\n","sig":null,"attributes":[{"value":"/ Open drain input or output (type state)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":81750,"byte_end":81793,"line_start":123,"line_end":123,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":903},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":81857,"byte_end":81863,"line_start":127,"line_end":127,"column_start":12,"column_end":18},"name":"Output","qualname":"::gpio::Output","value":"Output {  }","parent":null,"children":[{"krate":0,"index":905}],"decl_id":null,"docs":" Output mode (type state)\n","sig":null,"attributes":[{"value":"/ Output mode (type state)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":81817,"byte_end":81845,"line_start":126,"line_end":126,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":906},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":81950,"byte_end":81958,"line_start":132,"line_end":132,"column_start":12,"column_end":20},"name":"PushPull","qualname":"::gpio::PushPull","value":"","parent":null,"children":[],"decl_id":null,"docs":" Push pull output (type state)\n","sig":null,"attributes":[{"value":"/ Push pull output (type state)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":81905,"byte_end":81938,"line_start":131,"line_end":131,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":908},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":82001,"byte_end":82007,"line_start":135,"line_end":135,"column_start":12,"column_end":18},"name":"Analog","qualname":"::gpio::Analog","value":"","parent":null,"children":[],"decl_id":null,"docs":" Analog mode (type state)\n","sig":null,"attributes":[{"value":"/ Analog mode (type state)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":81961,"byte_end":81989,"line_start":134,"line_end":134,"column_start":1,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3730},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":82105,"byte_end":82108,"line_start":140,"line_end":140,"column_start":5,"column_end":8},"name":"Low","qualname":"::gpio::Speed::Low","value":"Speed::Low","parent":{"krate":0,"index":3729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3733},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":82118,"byte_end":82124,"line_start":141,"line_end":141,"column_start":5,"column_end":11},"name":"Medium","qualname":"::gpio::Speed::Medium","value":"Speed::Medium","parent":{"krate":0,"index":3729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3736},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":82134,"byte_end":82138,"line_start":142,"line_end":142,"column_start":5,"column_end":9},"name":"High","qualname":"::gpio::Speed::High","value":"Speed::High","parent":{"krate":0,"index":3729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3739},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":82148,"byte_end":82156,"line_start":143,"line_end":143,"column_start":5,"column_end":13},"name":"VeryHigh","qualname":"::gpio::Speed::VeryHigh","value":"Speed::VeryHigh","parent":{"krate":0,"index":3729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3729},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":82093,"byte_end":82098,"line_start":139,"line_end":139,"column_start":10,"column_end":15},"name":"Speed","qualname":"::gpio::Speed","value":"pub enum Speed { Low = , Medium = , High = , VeryHigh = , }","parent":null,"children":[{"krate":0,"index":3730},{"krate":0,"index":3733},{"krate":0,"index":3736},{"krate":0,"index":3739}],"decl_id":null,"docs":" GPIO Pin speed selection\n","sig":null,"attributes":[{"value":"/ GPIO Pin speed selection","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":82010,"byte_end":82038,"line_start":137,"line_end":137,"column_start":1,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3754},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":82230,"byte_end":82236,"line_start":148,"line_end":148,"column_start":5,"column_end":11},"name":"Rising","qualname":"::gpio::Edge::Rising","value":"Edge::Rising","parent":{"krate":0,"index":3753},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3756},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":82242,"byte_end":82249,"line_start":149,"line_end":149,"column_start":5,"column_end":12},"name":"Falling","qualname":"::gpio::Edge::Falling","value":"Edge::Falling","parent":{"krate":0,"index":3753},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3758},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":82255,"byte_end":82268,"line_start":150,"line_end":150,"column_start":5,"column_end":18},"name":"RisingFalling","qualname":"::gpio::Edge::RisingFalling","value":"Edge::RisingFalling","parent":{"krate":0,"index":3753},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3753},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":82219,"byte_end":82223,"line_start":147,"line_end":147,"column_start":10,"column_end":14},"name":"Edge","qualname":"::gpio::Edge","value":"pub enum Edge { Rising, Falling, RisingFalling, }","parent":null,"children":[{"krate":0,"index":3754},{"krate":0,"index":3756},{"krate":0,"index":3758}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":911},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":82363,"byte_end":82376,"line_start":155,"line_end":155,"column_start":15,"column_end":28},"name":"Interruptable","qualname":"::gpio::sealed::Interruptable","value":"Interruptable","parent":null,"children":[],"decl_id":null,"docs":" Marker trait that show if `ExtiPin` can be implemented\n","sig":null,"attributes":[{"value":"/ Marker trait that show if `ExtiPin` can be implemented","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":82290,"byte_end":82348,"line_start":154,"line_end":154,"column_start":5,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":919},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":82537,"byte_end":82544,"line_start":163,"line_end":163,"column_start":11,"column_end":18},"name":"ExtiPin","qualname":"::gpio::ExtiPin","value":"ExtiPin","parent":null,"children":[{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925}],"decl_id":null,"docs":" External Interrupt Pin\n","sig":null,"attributes":[{"value":"/ External Interrupt Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":82500,"byte_end":82526,"line_start":162,"line_end":162,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":82554,"byte_end":82575,"line_start":164,"line_end":164,"column_start":8,"column_end":29},"name":"make_interrupt_source","qualname":"::gpio::ExtiPin::make_interrupt_source","value":"pub fn make_interrupt_source(&mut Self, &mut SysCfg)","parent":{"krate":0,"index":919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":82616,"byte_end":82631,"line_start":165,"line_end":165,"column_start":8,"column_end":23},"name":"trigger_on_edge","qualname":"::gpio::ExtiPin::trigger_on_edge","value":"pub fn trigger_on_edge(&mut Self, &mut EXTI, Edge)","parent":{"krate":0,"index":919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":82681,"byte_end":82697,"line_start":166,"line_end":166,"column_start":8,"column_end":24},"name":"enable_interrupt","qualname":"::gpio::ExtiPin::enable_interrupt","value":"pub fn enable_interrupt(&mut Self, &mut EXTI)","parent":{"krate":0,"index":919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":82734,"byte_end":82751,"line_start":167,"line_end":167,"column_start":8,"column_end":25},"name":"disable_interrupt","qualname":"::gpio::ExtiPin::disable_interrupt","value":"pub fn disable_interrupt(&mut Self, &mut EXTI)","parent":{"krate":0,"index":919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":82788,"byte_end":82815,"line_start":168,"line_end":168,"column_start":8,"column_end":35},"name":"clear_interrupt_pending_bit","qualname":"::gpio::ExtiPin::clear_interrupt_pending_bit","value":"pub fn clear_interrupt_pending_bit(&mut Self)","parent":{"krate":0,"index":919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":82835,"byte_end":82850,"line_start":169,"line_end":169,"column_start":8,"column_end":23},"name":"check_interrupt","qualname":"::gpio::ExtiPin::check_interrupt","value":"pub fn check_interrupt(&Self) -> bool","parent":{"krate":0,"index":919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":947},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":86089,"byte_end":86092,"line_start":266,"line_end":266,"column_start":12,"column_end":15},"name":"Pin","qualname":"::gpio::Pin","value":"Pin {  }","parent":null,"children":[{"krate":0,"index":951}],"decl_id":null,"docs":" Generic pin type","sig":null,"attributes":[{"value":"/ Generic pin type","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":85872,"byte_end":85892,"line_start":261,"line_end":261,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":85893,"byte_end":85896,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ - `MODE` is one of the pin modes (see [Modes](crate::gpio#modes) section).","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":85897,"byte_end":85975,"line_start":263,"line_end":263,"column_start":1,"column_end":79}},{"value":"/ - `P` is port name: `A` for GPIOA, `B` for GPIOB, etc.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":85976,"byte_end":86034,"line_start":264,"line_end":264,"column_start":1,"column_end":59}},{"value":"/ - `N` is pin number: from `0` to `15`.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":86035,"byte_end":86077,"line_start":265,"line_end":265,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":968},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":86632,"byte_end":86641,"line_start":290,"line_end":290,"column_start":12,"column_end":21},"name":"set_speed","qualname":"<Pin<Output<MODE>, P, N>>::set_speed","value":"pub fn set_speed(Self, Speed) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set pin speed\n","sig":null,"attributes":[{"value":"/ Set pin speed","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":86603,"byte_end":86620,"line_start":289,"line_end":289,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":87036,"byte_end":87052,"line_start":305,"line_end":305,"column_start":12,"column_end":28},"name":"internal_pull_up","qualname":"<Pin<Output<OpenDrain>, P, N>>::internal_pull_up","value":"pub fn internal_pull_up(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Enables / disables the internal pull up\n","sig":null,"attributes":[{"value":"/ Enables / disables the internal pull up","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":86981,"byte_end":87024,"line_start":304,"line_end":304,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":87446,"byte_end":87455,"line_start":318,"line_end":318,"column_start":12,"column_end":21},"name":"set_speed","qualname":"<Pin<Alternate<A>, P, N>>::set_speed","value":"pub fn set_speed(Self, Speed) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set pin speed\n","sig":null,"attributes":[{"value":"/ Set pin speed","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":87417,"byte_end":87434,"line_start":317,"line_end":317,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":87784,"byte_end":87800,"line_start":331,"line_end":331,"column_start":12,"column_end":28},"name":"internal_pull_up","qualname":"<Pin<Alternate<A>, P, N>>::internal_pull_up","value":"pub fn internal_pull_up(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enables / disables the internal pull up\n","sig":null,"attributes":[{"value":"/ Enables / disables the internal pull up","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":87729,"byte_end":87772,"line_start":330,"line_end":330,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":88251,"byte_end":88265,"line_start":346,"line_end":346,"column_start":12,"column_end":26},"name":"set_open_drain","qualname":"<Pin<Alternate<A>, P, N>>::set_open_drain","value":"pub fn set_open_drain(Self) -> Pin<AlternateOD<>, , >","parent":null,"children":[],"decl_id":null,"docs":" Turns pin alternate configuration pin into open drain\n","sig":null,"attributes":[{"value":"/ Turns pin alternate configuration pin into open drain","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":88182,"byte_end":88239,"line_start":345,"line_end":345,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":88762,"byte_end":88774,"line_start":363,"line_end":363,"column_start":12,"column_end":24},"name":"erase_number","qualname":"<Pin<MODE, P, N>>::erase_number","value":"pub fn erase_number(Self) -> PEPin<MODE, >","parent":null,"children":[],"decl_id":null,"docs":" Erases the pin number from the type","sig":null,"attributes":[{"value":"/ Erases the pin number from the type","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":88570,"byte_end":88609,"line_start":359,"line_end":359,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":88614,"byte_end":88617,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This is useful when you want to collect the pins into an array where you","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":88622,"byte_end":88698,"line_start":361,"line_end":361,"column_start":5,"column_end":81}},{"value":"/ need all the elements to have the same type","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":88703,"byte_end":88750,"line_start":362,"line_end":362,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":88918,"byte_end":88927,"line_start":367,"line_end":367,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<Pin<MODE, P, N>>::downgrade","value":"pub fn downgrade(Self) -> PEPin<MODE, >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.10.0\", note = \"Please use erase_number instead\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":88833,"byte_end":88906,"line_start":366,"line_end":366,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":89198,"byte_end":89203,"line_start":375,"line_end":375,"column_start":12,"column_end":17},"name":"erase","qualname":"<Pin<MODE, P, N>>::erase","value":"pub fn erase(Self) -> EPin<MODE>","parent":null,"children":[],"decl_id":null,"docs":" Erases the pin number and the port from the type","sig":null,"attributes":[{"value":"/ Erases the pin number and the port from the type","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":88993,"byte_end":89045,"line_start":371,"line_end":371,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":89050,"byte_end":89053,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ This is useful when you want to collect the pins into an array where you","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":89058,"byte_end":89134,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ need all the elements to have the same type","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":89139,"byte_end":89186,"line_start":374,"line_end":374,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":89351,"byte_end":89361,"line_start":379,"line_end":379,"column_start":12,"column_end":22},"name":"downgrade2","qualname":"<Pin<MODE, P, N>>::downgrade2","value":"pub fn downgrade2(Self) -> EPin<MODE>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.10.0\", note = \"Please use erase instead\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":89273,"byte_end":89339,"line_start":378,"line_end":378,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":90757,"byte_end":90765,"line_start":420,"line_end":420,"column_start":12,"column_end":20},"name":"set_high","qualname":"<Pin<Output<MODE>, P, N>>::set_high","value":"pub fn set_high(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":90728,"byte_end":90745,"line_start":419,"line_end":419,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":90844,"byte_end":90851,"line_start":425,"line_end":425,"column_start":12,"column_end":19},"name":"set_low","qualname":"<Pin<Output<MODE>, P, N>>::set_low","value":"pub fn set_low(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":90815,"byte_end":90832,"line_start":424,"line_end":424,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":90929,"byte_end":90938,"line_start":430,"line_end":430,"column_start":12,"column_end":21},"name":"get_state","qualname":"<Pin<Output<MODE>, P, N>>::get_state","value":"pub fn get_state(&Self) -> PinState","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":90900,"byte_end":90917,"line_start":429,"line_end":429,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":91111,"byte_end":91120,"line_start":439,"line_end":439,"column_start":12,"column_end":21},"name":"set_state","qualname":"<Pin<Output<MODE>, P, N>>::set_state","value":"pub fn set_state(&mut Self, PinState)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":91082,"byte_end":91099,"line_start":438,"line_end":438,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":91315,"byte_end":91326,"line_start":447,"line_end":447,"column_start":12,"column_end":23},"name":"is_set_high","qualname":"<Pin<Output<MODE>, P, N>>::is_set_high","value":"pub fn is_set_high(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":91286,"byte_end":91303,"line_start":446,"line_end":446,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":91411,"byte_end":91421,"line_start":452,"line_end":452,"column_start":12,"column_end":22},"name":"is_set_low","qualname":"<Pin<Output<MODE>, P, N>>::is_set_low","value":"pub fn is_set_low(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":91382,"byte_end":91399,"line_start":451,"line_end":451,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":91506,"byte_end":91512,"line_start":457,"line_end":457,"column_start":12,"column_end":18},"name":"toggle","qualname":"<Pin<Output<MODE>, P, N>>::toggle","value":"pub fn toggle(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":91477,"byte_end":91494,"line_start":456,"line_end":456,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":92667,"byte_end":92674,"line_start":506,"line_end":506,"column_start":12,"column_end":19},"name":"is_high","qualname":"<Pin<Output<OpenDrain>, P, N>>::is_high","value":"pub fn is_high(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":92638,"byte_end":92655,"line_start":505,"line_end":505,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":92755,"byte_end":92761,"line_start":511,"line_end":511,"column_start":12,"column_end":18},"name":"is_low","qualname":"<Pin<Output<OpenDrain>, P, N>>::is_low","value":"pub fn is_low(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":92726,"byte_end":92743,"line_start":510,"line_end":510,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":93233,"byte_end":93240,"line_start":532,"line_end":532,"column_start":12,"column_end":19},"name":"is_high","qualname":"<Pin<Input<MODE>, P, N>>::is_high","value":"pub fn is_high(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":93204,"byte_end":93221,"line_start":531,"line_end":531,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":93321,"byte_end":93327,"line_start":537,"line_end":537,"column_start":12,"column_end":18},"name":"is_low","qualname":"<Pin<Input<MODE>, P, N>>::is_low","value":"pub fn is_low(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":93292,"byte_end":93309,"line_start":536,"line_end":536,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":3771},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96229,"byte_end":96234,"line_start":642,"line_end":642,"column_start":14,"column_end":19},"name":"gpioa","qualname":"::gpio::gpioa","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","parent":null,"children":[{"krate":0,"index":3772},{"krate":0,"index":3773},{"krate":0,"index":3776},{"krate":0,"index":3779},{"krate":0,"index":3780},{"krate":0,"index":3783},{"krate":0,"index":3786},{"krate":0,"index":3787},{"krate":0,"index":3788},{"krate":0,"index":3790},{"krate":0,"index":3793},{"krate":0,"index":3810},{"krate":0,"index":3813},{"krate":0,"index":3816},{"krate":0,"index":3820},{"krate":0,"index":3824},{"krate":0,"index":3828},{"krate":0,"index":3832},{"krate":0,"index":3836},{"krate":0,"index":3840},{"krate":0,"index":3844},{"krate":0,"index":3848},{"krate":0,"index":3852},{"krate":0,"index":3856},{"krate":0,"index":3860},{"krate":0,"index":3864},{"krate":0,"index":3868},{"krate":0,"index":3872},{"krate":0,"index":3876}],"decl_id":null,"docs":" GPIO\n","sig":null,"attributes":[{"value":"/ GPIO","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95000,"byte_end":95008,"line_start":596,"line_end":596,"column_start":9,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":3794},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96262,"byte_end":96265,"line_start":643,"line_end":643,"column_start":11,"column_end":14},"name":"pa0","qualname":"::gpio::gpioa::Parts::pa0","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'A', 0_u8>","parent":{"krate":0,"index":3793},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3795},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96298,"byte_end":96301,"line_start":644,"line_end":644,"column_start":11,"column_end":14},"name":"pa1","qualname":"::gpio::gpioa::Parts::pa1","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'A', 1_u8>","parent":{"krate":0,"index":3793},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3796},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96334,"byte_end":96337,"line_start":645,"line_end":645,"column_start":11,"column_end":14},"name":"pa2","qualname":"::gpio::gpioa::Parts::pa2","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'A', 2_u8>","parent":{"krate":0,"index":3793},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3797},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96370,"byte_end":96373,"line_start":646,"line_end":646,"column_start":11,"column_end":14},"name":"pa3","qualname":"::gpio::gpioa::Parts::pa3","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'A', 3_u8>","parent":{"krate":0,"index":3793},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3798},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96406,"byte_end":96409,"line_start":647,"line_end":647,"column_start":11,"column_end":14},"name":"pa4","qualname":"::gpio::gpioa::Parts::pa4","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'A', 4_u8>","parent":{"krate":0,"index":3793},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3799},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96442,"byte_end":96445,"line_start":648,"line_end":648,"column_start":11,"column_end":14},"name":"pa5","qualname":"::gpio::gpioa::Parts::pa5","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'A', 5_u8>","parent":{"krate":0,"index":3793},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3800},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96478,"byte_end":96481,"line_start":649,"line_end":649,"column_start":11,"column_end":14},"name":"pa6","qualname":"::gpio::gpioa::Parts::pa6","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'A', 6_u8>","parent":{"krate":0,"index":3793},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3801},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96514,"byte_end":96517,"line_start":650,"line_end":650,"column_start":11,"column_end":14},"name":"pa7","qualname":"::gpio::gpioa::Parts::pa7","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'A', 7_u8>","parent":{"krate":0,"index":3793},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3802},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96550,"byte_end":96553,"line_start":651,"line_end":651,"column_start":11,"column_end":14},"name":"pa8","qualname":"::gpio::gpioa::Parts::pa8","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'A', 8_u8>","parent":{"krate":0,"index":3793},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3803},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96586,"byte_end":96589,"line_start":652,"line_end":652,"column_start":11,"column_end":14},"name":"pa9","qualname":"::gpio::gpioa::Parts::pa9","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'A', 9_u8>","parent":{"krate":0,"index":3793},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3804},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96623,"byte_end":96627,"line_start":653,"line_end":653,"column_start":12,"column_end":16},"name":"pa10","qualname":"::gpio::gpioa::Parts::pa10","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'A', 10_u8>","parent":{"krate":0,"index":3793},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3805},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96662,"byte_end":96666,"line_start":654,"line_end":654,"column_start":12,"column_end":16},"name":"pa11","qualname":"::gpio::gpioa::Parts::pa11","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'A', 11_u8>","parent":{"krate":0,"index":3793},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3806},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96701,"byte_end":96705,"line_start":655,"line_end":655,"column_start":12,"column_end":16},"name":"pa12","qualname":"::gpio::gpioa::Parts::pa12","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'A', 12_u8>","parent":{"krate":0,"index":3793},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3807},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96740,"byte_end":96744,"line_start":656,"line_end":656,"column_start":12,"column_end":16},"name":"pa13","qualname":"::gpio::gpioa::Parts::pa13","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'A', 13_u8>","parent":{"krate":0,"index":3793},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3808},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96779,"byte_end":96783,"line_start":657,"line_end":657,"column_start":12,"column_end":16},"name":"pa14","qualname":"::gpio::gpioa::Parts::pa14","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'A', 14_u8>","parent":{"krate":0,"index":3793},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3809},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96818,"byte_end":96822,"line_start":658,"line_end":658,"column_start":12,"column_end":16},"name":"pa15","qualname":"::gpio::gpioa::Parts::pa15","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'A', 15_u8>","parent":{"krate":0,"index":3793},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":3813},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96245,"byte_end":96248,"line_start":642,"line_end":642,"column_start":30,"column_end":33},"name":"PAn","qualname":"::gpio::gpioa::PAn","value":"super::PEPin<MODE, >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3816},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96256,"byte_end":96259,"line_start":643,"line_end":643,"column_start":5,"column_end":8},"name":"PA0","qualname":"::gpio::gpioa::PA0","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3820},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96292,"byte_end":96295,"line_start":644,"line_end":644,"column_start":5,"column_end":8},"name":"PA1","qualname":"::gpio::gpioa::PA1","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3824},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96328,"byte_end":96331,"line_start":645,"line_end":645,"column_start":5,"column_end":8},"name":"PA2","qualname":"::gpio::gpioa::PA2","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3828},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96364,"byte_end":96367,"line_start":646,"line_end":646,"column_start":5,"column_end":8},"name":"PA3","qualname":"::gpio::gpioa::PA3","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3832},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96400,"byte_end":96403,"line_start":647,"line_end":647,"column_start":5,"column_end":8},"name":"PA4","qualname":"::gpio::gpioa::PA4","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3836},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96436,"byte_end":96439,"line_start":648,"line_end":648,"column_start":5,"column_end":8},"name":"PA5","qualname":"::gpio::gpioa::PA5","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3840},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96472,"byte_end":96475,"line_start":649,"line_end":649,"column_start":5,"column_end":8},"name":"PA6","qualname":"::gpio::gpioa::PA6","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3844},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96508,"byte_end":96511,"line_start":650,"line_end":650,"column_start":5,"column_end":8},"name":"PA7","qualname":"::gpio::gpioa::PA7","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3848},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96544,"byte_end":96547,"line_start":651,"line_end":651,"column_start":5,"column_end":8},"name":"PA8","qualname":"::gpio::gpioa::PA8","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3852},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96580,"byte_end":96583,"line_start":652,"line_end":652,"column_start":5,"column_end":8},"name":"PA9","qualname":"::gpio::gpioa::PA9","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3856},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96616,"byte_end":96620,"line_start":653,"line_end":653,"column_start":5,"column_end":9},"name":"PA10","qualname":"::gpio::gpioa::PA10","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3860},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96655,"byte_end":96659,"line_start":654,"line_end":654,"column_start":5,"column_end":9},"name":"PA11","qualname":"::gpio::gpioa::PA11","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3864},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96694,"byte_end":96698,"line_start":655,"line_end":655,"column_start":5,"column_end":9},"name":"PA12","qualname":"::gpio::gpioa::PA12","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3868},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96733,"byte_end":96737,"line_start":656,"line_end":656,"column_start":5,"column_end":9},"name":"PA13","qualname":"::gpio::gpioa::PA13","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3872},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96772,"byte_end":96776,"line_start":657,"line_end":657,"column_start":5,"column_end":9},"name":"PA14","qualname":"::gpio::gpioa::PA14","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3876},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96811,"byte_end":96815,"line_start":658,"line_end":658,"column_start":5,"column_end":9},"name":"PA15","qualname":"::gpio::gpioa::PA15","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3880},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96864,"byte_end":96869,"line_start":661,"line_end":661,"column_start":14,"column_end":19},"name":"gpiob","qualname":"::gpio::gpiob","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","parent":null,"children":[{"krate":0,"index":3881},{"krate":0,"index":3882},{"krate":0,"index":3885},{"krate":0,"index":3888},{"krate":0,"index":3889},{"krate":0,"index":3892},{"krate":0,"index":3895},{"krate":0,"index":3896},{"krate":0,"index":3897},{"krate":0,"index":3899},{"krate":0,"index":3902},{"krate":0,"index":3919},{"krate":0,"index":3922},{"krate":0,"index":3925},{"krate":0,"index":3929},{"krate":0,"index":3933},{"krate":0,"index":3937},{"krate":0,"index":3941},{"krate":0,"index":3945},{"krate":0,"index":3949},{"krate":0,"index":3953},{"krate":0,"index":3957},{"krate":0,"index":3961},{"krate":0,"index":3965},{"krate":0,"index":3969},{"krate":0,"index":3973},{"krate":0,"index":3977},{"krate":0,"index":3981},{"krate":0,"index":3985}],"decl_id":null,"docs":" GPIO\n","sig":null,"attributes":[{"value":"/ GPIO","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95000,"byte_end":95008,"line_start":596,"line_end":596,"column_start":9,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":3903},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96897,"byte_end":96900,"line_start":662,"line_end":662,"column_start":11,"column_end":14},"name":"pb0","qualname":"::gpio::gpiob::Parts::pb0","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'B', 0_u8>","parent":{"krate":0,"index":3902},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3904},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96933,"byte_end":96936,"line_start":663,"line_end":663,"column_start":11,"column_end":14},"name":"pb1","qualname":"::gpio::gpiob::Parts::pb1","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'B', 1_u8>","parent":{"krate":0,"index":3902},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3905},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96969,"byte_end":96972,"line_start":664,"line_end":664,"column_start":11,"column_end":14},"name":"pb2","qualname":"::gpio::gpiob::Parts::pb2","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'B', 2_u8>","parent":{"krate":0,"index":3902},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3906},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97005,"byte_end":97008,"line_start":665,"line_end":665,"column_start":11,"column_end":14},"name":"pb3","qualname":"::gpio::gpiob::Parts::pb3","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'B', 3_u8>","parent":{"krate":0,"index":3902},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3907},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97041,"byte_end":97044,"line_start":666,"line_end":666,"column_start":11,"column_end":14},"name":"pb4","qualname":"::gpio::gpiob::Parts::pb4","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'B', 4_u8>","parent":{"krate":0,"index":3902},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3908},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97077,"byte_end":97080,"line_start":667,"line_end":667,"column_start":11,"column_end":14},"name":"pb5","qualname":"::gpio::gpiob::Parts::pb5","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'B', 5_u8>","parent":{"krate":0,"index":3902},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3909},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97113,"byte_end":97116,"line_start":668,"line_end":668,"column_start":11,"column_end":14},"name":"pb6","qualname":"::gpio::gpiob::Parts::pb6","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'B', 6_u8>","parent":{"krate":0,"index":3902},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3910},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97149,"byte_end":97152,"line_start":669,"line_end":669,"column_start":11,"column_end":14},"name":"pb7","qualname":"::gpio::gpiob::Parts::pb7","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'B', 7_u8>","parent":{"krate":0,"index":3902},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3911},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97185,"byte_end":97188,"line_start":670,"line_end":670,"column_start":11,"column_end":14},"name":"pb8","qualname":"::gpio::gpiob::Parts::pb8","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'B', 8_u8>","parent":{"krate":0,"index":3902},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3912},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97221,"byte_end":97224,"line_start":671,"line_end":671,"column_start":11,"column_end":14},"name":"pb9","qualname":"::gpio::gpiob::Parts::pb9","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'B', 9_u8>","parent":{"krate":0,"index":3902},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3913},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97258,"byte_end":97262,"line_start":672,"line_end":672,"column_start":12,"column_end":16},"name":"pb10","qualname":"::gpio::gpiob::Parts::pb10","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'B', 10_u8>","parent":{"krate":0,"index":3902},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3914},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97297,"byte_end":97301,"line_start":673,"line_end":673,"column_start":12,"column_end":16},"name":"pb11","qualname":"::gpio::gpiob::Parts::pb11","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'B', 11_u8>","parent":{"krate":0,"index":3902},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3915},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97336,"byte_end":97340,"line_start":674,"line_end":674,"column_start":12,"column_end":16},"name":"pb12","qualname":"::gpio::gpiob::Parts::pb12","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'B', 12_u8>","parent":{"krate":0,"index":3902},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3916},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97375,"byte_end":97379,"line_start":675,"line_end":675,"column_start":12,"column_end":16},"name":"pb13","qualname":"::gpio::gpiob::Parts::pb13","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'B', 13_u8>","parent":{"krate":0,"index":3902},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3917},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97414,"byte_end":97418,"line_start":676,"line_end":676,"column_start":12,"column_end":16},"name":"pb14","qualname":"::gpio::gpiob::Parts::pb14","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'B', 14_u8>","parent":{"krate":0,"index":3902},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3918},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97453,"byte_end":97457,"line_start":677,"line_end":677,"column_start":12,"column_end":16},"name":"pb15","qualname":"::gpio::gpiob::Parts::pb15","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'B', 15_u8>","parent":{"krate":0,"index":3902},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":3922},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96880,"byte_end":96883,"line_start":661,"line_end":661,"column_start":30,"column_end":33},"name":"PBn","qualname":"::gpio::gpiob::PBn","value":"super::PEPin<MODE, >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3925},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96891,"byte_end":96894,"line_start":662,"line_end":662,"column_start":5,"column_end":8},"name":"PB0","qualname":"::gpio::gpiob::PB0","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3929},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96927,"byte_end":96930,"line_start":663,"line_end":663,"column_start":5,"column_end":8},"name":"PB1","qualname":"::gpio::gpiob::PB1","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3933},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96963,"byte_end":96966,"line_start":664,"line_end":664,"column_start":5,"column_end":8},"name":"PB2","qualname":"::gpio::gpiob::PB2","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3937},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":96999,"byte_end":97002,"line_start":665,"line_end":665,"column_start":5,"column_end":8},"name":"PB3","qualname":"::gpio::gpiob::PB3","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3941},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97035,"byte_end":97038,"line_start":666,"line_end":666,"column_start":5,"column_end":8},"name":"PB4","qualname":"::gpio::gpiob::PB4","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3945},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97071,"byte_end":97074,"line_start":667,"line_end":667,"column_start":5,"column_end":8},"name":"PB5","qualname":"::gpio::gpiob::PB5","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3949},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97107,"byte_end":97110,"line_start":668,"line_end":668,"column_start":5,"column_end":8},"name":"PB6","qualname":"::gpio::gpiob::PB6","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3953},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97143,"byte_end":97146,"line_start":669,"line_end":669,"column_start":5,"column_end":8},"name":"PB7","qualname":"::gpio::gpiob::PB7","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3957},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97179,"byte_end":97182,"line_start":670,"line_end":670,"column_start":5,"column_end":8},"name":"PB8","qualname":"::gpio::gpiob::PB8","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3961},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97215,"byte_end":97218,"line_start":671,"line_end":671,"column_start":5,"column_end":8},"name":"PB9","qualname":"::gpio::gpiob::PB9","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3965},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97251,"byte_end":97255,"line_start":672,"line_end":672,"column_start":5,"column_end":9},"name":"PB10","qualname":"::gpio::gpiob::PB10","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3969},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97290,"byte_end":97294,"line_start":673,"line_end":673,"column_start":5,"column_end":9},"name":"PB11","qualname":"::gpio::gpiob::PB11","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3973},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97329,"byte_end":97333,"line_start":674,"line_end":674,"column_start":5,"column_end":9},"name":"PB12","qualname":"::gpio::gpiob::PB12","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3977},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97368,"byte_end":97372,"line_start":675,"line_end":675,"column_start":5,"column_end":9},"name":"PB13","qualname":"::gpio::gpiob::PB13","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3981},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97407,"byte_end":97411,"line_start":676,"line_end":676,"column_start":5,"column_end":9},"name":"PB14","qualname":"::gpio::gpiob::PB14","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3985},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97446,"byte_end":97450,"line_start":677,"line_end":677,"column_start":5,"column_end":9},"name":"PB15","qualname":"::gpio::gpiob::PB15","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3989},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97499,"byte_end":97504,"line_start":680,"line_end":680,"column_start":14,"column_end":19},"name":"gpioc","qualname":"::gpio::gpioc","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","parent":null,"children":[{"krate":0,"index":3990},{"krate":0,"index":3991},{"krate":0,"index":3994},{"krate":0,"index":3997},{"krate":0,"index":3998},{"krate":0,"index":4001},{"krate":0,"index":4004},{"krate":0,"index":4005},{"krate":0,"index":4006},{"krate":0,"index":4008},{"krate":0,"index":4011},{"krate":0,"index":4028},{"krate":0,"index":4031},{"krate":0,"index":4034},{"krate":0,"index":4038},{"krate":0,"index":4042},{"krate":0,"index":4046},{"krate":0,"index":4050},{"krate":0,"index":4054},{"krate":0,"index":4058},{"krate":0,"index":4062},{"krate":0,"index":4066},{"krate":0,"index":4070},{"krate":0,"index":4074},{"krate":0,"index":4078},{"krate":0,"index":4082},{"krate":0,"index":4086},{"krate":0,"index":4090},{"krate":0,"index":4094}],"decl_id":null,"docs":" GPIO\n","sig":null,"attributes":[{"value":"/ GPIO","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95000,"byte_end":95008,"line_start":596,"line_end":596,"column_start":9,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":4012},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97532,"byte_end":97535,"line_start":681,"line_end":681,"column_start":11,"column_end":14},"name":"pc0","qualname":"::gpio::gpioc::Parts::pc0","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'C', 0_u8>","parent":{"krate":0,"index":4011},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4013},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97568,"byte_end":97571,"line_start":682,"line_end":682,"column_start":11,"column_end":14},"name":"pc1","qualname":"::gpio::gpioc::Parts::pc1","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'C', 1_u8>","parent":{"krate":0,"index":4011},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4014},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97604,"byte_end":97607,"line_start":683,"line_end":683,"column_start":11,"column_end":14},"name":"pc2","qualname":"::gpio::gpioc::Parts::pc2","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'C', 2_u8>","parent":{"krate":0,"index":4011},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4015},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97640,"byte_end":97643,"line_start":684,"line_end":684,"column_start":11,"column_end":14},"name":"pc3","qualname":"::gpio::gpioc::Parts::pc3","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'C', 3_u8>","parent":{"krate":0,"index":4011},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4016},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97676,"byte_end":97679,"line_start":685,"line_end":685,"column_start":11,"column_end":14},"name":"pc4","qualname":"::gpio::gpioc::Parts::pc4","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'C', 4_u8>","parent":{"krate":0,"index":4011},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4017},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97712,"byte_end":97715,"line_start":686,"line_end":686,"column_start":11,"column_end":14},"name":"pc5","qualname":"::gpio::gpioc::Parts::pc5","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'C', 5_u8>","parent":{"krate":0,"index":4011},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4018},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97748,"byte_end":97751,"line_start":687,"line_end":687,"column_start":11,"column_end":14},"name":"pc6","qualname":"::gpio::gpioc::Parts::pc6","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'C', 6_u8>","parent":{"krate":0,"index":4011},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4019},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97784,"byte_end":97787,"line_start":688,"line_end":688,"column_start":11,"column_end":14},"name":"pc7","qualname":"::gpio::gpioc::Parts::pc7","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'C', 7_u8>","parent":{"krate":0,"index":4011},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4020},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97820,"byte_end":97823,"line_start":689,"line_end":689,"column_start":11,"column_end":14},"name":"pc8","qualname":"::gpio::gpioc::Parts::pc8","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'C', 8_u8>","parent":{"krate":0,"index":4011},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4021},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97856,"byte_end":97859,"line_start":690,"line_end":690,"column_start":11,"column_end":14},"name":"pc9","qualname":"::gpio::gpioc::Parts::pc9","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'C', 9_u8>","parent":{"krate":0,"index":4011},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4022},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97893,"byte_end":97897,"line_start":691,"line_end":691,"column_start":12,"column_end":16},"name":"pc10","qualname":"::gpio::gpioc::Parts::pc10","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'C', 10_u8>","parent":{"krate":0,"index":4011},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4023},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97932,"byte_end":97936,"line_start":692,"line_end":692,"column_start":12,"column_end":16},"name":"pc11","qualname":"::gpio::gpioc::Parts::pc11","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'C', 11_u8>","parent":{"krate":0,"index":4011},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4024},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97971,"byte_end":97975,"line_start":693,"line_end":693,"column_start":12,"column_end":16},"name":"pc12","qualname":"::gpio::gpioc::Parts::pc12","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'C', 12_u8>","parent":{"krate":0,"index":4011},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4025},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98010,"byte_end":98014,"line_start":694,"line_end":694,"column_start":12,"column_end":16},"name":"pc13","qualname":"::gpio::gpioc::Parts::pc13","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'C', 13_u8>","parent":{"krate":0,"index":4011},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4026},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98049,"byte_end":98053,"line_start":695,"line_end":695,"column_start":12,"column_end":16},"name":"pc14","qualname":"::gpio::gpioc::Parts::pc14","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'C', 14_u8>","parent":{"krate":0,"index":4011},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4027},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98088,"byte_end":98092,"line_start":696,"line_end":696,"column_start":12,"column_end":16},"name":"pc15","qualname":"::gpio::gpioc::Parts::pc15","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'C', 15_u8>","parent":{"krate":0,"index":4011},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":4031},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97515,"byte_end":97518,"line_start":680,"line_end":680,"column_start":30,"column_end":33},"name":"PCn","qualname":"::gpio::gpioc::PCn","value":"super::PEPin<MODE, >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4034},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97526,"byte_end":97529,"line_start":681,"line_end":681,"column_start":5,"column_end":8},"name":"PC0","qualname":"::gpio::gpioc::PC0","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4038},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97562,"byte_end":97565,"line_start":682,"line_end":682,"column_start":5,"column_end":8},"name":"PC1","qualname":"::gpio::gpioc::PC1","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4042},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97598,"byte_end":97601,"line_start":683,"line_end":683,"column_start":5,"column_end":8},"name":"PC2","qualname":"::gpio::gpioc::PC2","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4046},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97634,"byte_end":97637,"line_start":684,"line_end":684,"column_start":5,"column_end":8},"name":"PC3","qualname":"::gpio::gpioc::PC3","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4050},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97670,"byte_end":97673,"line_start":685,"line_end":685,"column_start":5,"column_end":8},"name":"PC4","qualname":"::gpio::gpioc::PC4","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4054},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97706,"byte_end":97709,"line_start":686,"line_end":686,"column_start":5,"column_end":8},"name":"PC5","qualname":"::gpio::gpioc::PC5","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4058},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97742,"byte_end":97745,"line_start":687,"line_end":687,"column_start":5,"column_end":8},"name":"PC6","qualname":"::gpio::gpioc::PC6","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4062},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97778,"byte_end":97781,"line_start":688,"line_end":688,"column_start":5,"column_end":8},"name":"PC7","qualname":"::gpio::gpioc::PC7","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4066},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97814,"byte_end":97817,"line_start":689,"line_end":689,"column_start":5,"column_end":8},"name":"PC8","qualname":"::gpio::gpioc::PC8","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4070},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97850,"byte_end":97853,"line_start":690,"line_end":690,"column_start":5,"column_end":8},"name":"PC9","qualname":"::gpio::gpioc::PC9","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4074},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97886,"byte_end":97890,"line_start":691,"line_end":691,"column_start":5,"column_end":9},"name":"PC10","qualname":"::gpio::gpioc::PC10","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4078},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97925,"byte_end":97929,"line_start":692,"line_end":692,"column_start":5,"column_end":9},"name":"PC11","qualname":"::gpio::gpioc::PC11","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4082},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":97964,"byte_end":97968,"line_start":693,"line_end":693,"column_start":5,"column_end":9},"name":"PC12","qualname":"::gpio::gpioc::PC12","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4086},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98003,"byte_end":98007,"line_start":694,"line_end":694,"column_start":5,"column_end":9},"name":"PC13","qualname":"::gpio::gpioc::PC13","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4090},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98042,"byte_end":98046,"line_start":695,"line_end":695,"column_start":5,"column_end":9},"name":"PC14","qualname":"::gpio::gpioc::PC14","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4094},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98081,"byte_end":98085,"line_start":696,"line_end":696,"column_start":5,"column_end":9},"name":"PC15","qualname":"::gpio::gpioc::PC15","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4098},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98160,"byte_end":98165,"line_start":700,"line_end":700,"column_start":14,"column_end":19},"name":"gpiod","qualname":"::gpio::gpiod","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","parent":null,"children":[{"krate":0,"index":4099},{"krate":0,"index":4100},{"krate":0,"index":4103},{"krate":0,"index":4106},{"krate":0,"index":4107},{"krate":0,"index":4110},{"krate":0,"index":4113},{"krate":0,"index":4114},{"krate":0,"index":4115},{"krate":0,"index":4117},{"krate":0,"index":4120},{"krate":0,"index":4137},{"krate":0,"index":4140},{"krate":0,"index":4143},{"krate":0,"index":4147},{"krate":0,"index":4151},{"krate":0,"index":4155},{"krate":0,"index":4159},{"krate":0,"index":4163},{"krate":0,"index":4167},{"krate":0,"index":4171},{"krate":0,"index":4175},{"krate":0,"index":4179},{"krate":0,"index":4183},{"krate":0,"index":4187},{"krate":0,"index":4191},{"krate":0,"index":4195},{"krate":0,"index":4199},{"krate":0,"index":4203}],"decl_id":null,"docs":" GPIO\n","sig":null,"attributes":[{"value":"/ GPIO","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95000,"byte_end":95008,"line_start":596,"line_end":596,"column_start":9,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":4121},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98193,"byte_end":98196,"line_start":701,"line_end":701,"column_start":11,"column_end":14},"name":"pd0","qualname":"::gpio::gpiod::Parts::pd0","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'D', 0_u8>","parent":{"krate":0,"index":4120},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4122},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98229,"byte_end":98232,"line_start":702,"line_end":702,"column_start":11,"column_end":14},"name":"pd1","qualname":"::gpio::gpiod::Parts::pd1","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'D', 1_u8>","parent":{"krate":0,"index":4120},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4123},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98265,"byte_end":98268,"line_start":703,"line_end":703,"column_start":11,"column_end":14},"name":"pd2","qualname":"::gpio::gpiod::Parts::pd2","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'D', 2_u8>","parent":{"krate":0,"index":4120},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4124},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98301,"byte_end":98304,"line_start":704,"line_end":704,"column_start":11,"column_end":14},"name":"pd3","qualname":"::gpio::gpiod::Parts::pd3","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'D', 3_u8>","parent":{"krate":0,"index":4120},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4125},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98337,"byte_end":98340,"line_start":705,"line_end":705,"column_start":11,"column_end":14},"name":"pd4","qualname":"::gpio::gpiod::Parts::pd4","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'D', 4_u8>","parent":{"krate":0,"index":4120},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4126},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98373,"byte_end":98376,"line_start":706,"line_end":706,"column_start":11,"column_end":14},"name":"pd5","qualname":"::gpio::gpiod::Parts::pd5","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'D', 5_u8>","parent":{"krate":0,"index":4120},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4127},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98409,"byte_end":98412,"line_start":707,"line_end":707,"column_start":11,"column_end":14},"name":"pd6","qualname":"::gpio::gpiod::Parts::pd6","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'D', 6_u8>","parent":{"krate":0,"index":4120},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4128},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98445,"byte_end":98448,"line_start":708,"line_end":708,"column_start":11,"column_end":14},"name":"pd7","qualname":"::gpio::gpiod::Parts::pd7","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'D', 7_u8>","parent":{"krate":0,"index":4120},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4129},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98481,"byte_end":98484,"line_start":709,"line_end":709,"column_start":11,"column_end":14},"name":"pd8","qualname":"::gpio::gpiod::Parts::pd8","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'D', 8_u8>","parent":{"krate":0,"index":4120},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4130},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98517,"byte_end":98520,"line_start":710,"line_end":710,"column_start":11,"column_end":14},"name":"pd9","qualname":"::gpio::gpiod::Parts::pd9","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'D', 9_u8>","parent":{"krate":0,"index":4120},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4131},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98554,"byte_end":98558,"line_start":711,"line_end":711,"column_start":12,"column_end":16},"name":"pd10","qualname":"::gpio::gpiod::Parts::pd10","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'D', 10_u8>","parent":{"krate":0,"index":4120},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4132},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98593,"byte_end":98597,"line_start":712,"line_end":712,"column_start":12,"column_end":16},"name":"pd11","qualname":"::gpio::gpiod::Parts::pd11","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'D', 11_u8>","parent":{"krate":0,"index":4120},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4133},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98632,"byte_end":98636,"line_start":713,"line_end":713,"column_start":12,"column_end":16},"name":"pd12","qualname":"::gpio::gpiod::Parts::pd12","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'D', 12_u8>","parent":{"krate":0,"index":4120},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4134},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98671,"byte_end":98675,"line_start":714,"line_end":714,"column_start":12,"column_end":16},"name":"pd13","qualname":"::gpio::gpiod::Parts::pd13","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'D', 13_u8>","parent":{"krate":0,"index":4120},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4135},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98710,"byte_end":98714,"line_start":715,"line_end":715,"column_start":12,"column_end":16},"name":"pd14","qualname":"::gpio::gpiod::Parts::pd14","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'D', 14_u8>","parent":{"krate":0,"index":4120},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4136},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98749,"byte_end":98753,"line_start":716,"line_end":716,"column_start":12,"column_end":16},"name":"pd15","qualname":"::gpio::gpiod::Parts::pd15","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'D', 15_u8>","parent":{"krate":0,"index":4120},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":4140},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98176,"byte_end":98179,"line_start":700,"line_end":700,"column_start":30,"column_end":33},"name":"PDn","qualname":"::gpio::gpiod::PDn","value":"super::PEPin<MODE, >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4143},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98187,"byte_end":98190,"line_start":701,"line_end":701,"column_start":5,"column_end":8},"name":"PD0","qualname":"::gpio::gpiod::PD0","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4147},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98223,"byte_end":98226,"line_start":702,"line_end":702,"column_start":5,"column_end":8},"name":"PD1","qualname":"::gpio::gpiod::PD1","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4151},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98259,"byte_end":98262,"line_start":703,"line_end":703,"column_start":5,"column_end":8},"name":"PD2","qualname":"::gpio::gpiod::PD2","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4155},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98295,"byte_end":98298,"line_start":704,"line_end":704,"column_start":5,"column_end":8},"name":"PD3","qualname":"::gpio::gpiod::PD3","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4159},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98331,"byte_end":98334,"line_start":705,"line_end":705,"column_start":5,"column_end":8},"name":"PD4","qualname":"::gpio::gpiod::PD4","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4163},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98367,"byte_end":98370,"line_start":706,"line_end":706,"column_start":5,"column_end":8},"name":"PD5","qualname":"::gpio::gpiod::PD5","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4167},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98403,"byte_end":98406,"line_start":707,"line_end":707,"column_start":5,"column_end":8},"name":"PD6","qualname":"::gpio::gpiod::PD6","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4171},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98439,"byte_end":98442,"line_start":708,"line_end":708,"column_start":5,"column_end":8},"name":"PD7","qualname":"::gpio::gpiod::PD7","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4175},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98475,"byte_end":98478,"line_start":709,"line_end":709,"column_start":5,"column_end":8},"name":"PD8","qualname":"::gpio::gpiod::PD8","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4179},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98511,"byte_end":98514,"line_start":710,"line_end":710,"column_start":5,"column_end":8},"name":"PD9","qualname":"::gpio::gpiod::PD9","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4183},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98547,"byte_end":98551,"line_start":711,"line_end":711,"column_start":5,"column_end":9},"name":"PD10","qualname":"::gpio::gpiod::PD10","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4187},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98586,"byte_end":98590,"line_start":712,"line_end":712,"column_start":5,"column_end":9},"name":"PD11","qualname":"::gpio::gpiod::PD11","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4191},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98625,"byte_end":98629,"line_start":713,"line_end":713,"column_start":5,"column_end":9},"name":"PD12","qualname":"::gpio::gpiod::PD12","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4195},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98664,"byte_end":98668,"line_start":714,"line_end":714,"column_start":5,"column_end":9},"name":"PD13","qualname":"::gpio::gpiod::PD13","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4199},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98703,"byte_end":98707,"line_start":715,"line_end":715,"column_start":5,"column_end":9},"name":"PD14","qualname":"::gpio::gpiod::PD14","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4203},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98742,"byte_end":98746,"line_start":716,"line_end":716,"column_start":5,"column_end":9},"name":"PD15","qualname":"::gpio::gpiod::PD15","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4207},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98821,"byte_end":98826,"line_start":720,"line_end":720,"column_start":14,"column_end":19},"name":"gpioe","qualname":"::gpio::gpioe","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","parent":null,"children":[{"krate":0,"index":4208},{"krate":0,"index":4209},{"krate":0,"index":4212},{"krate":0,"index":4215},{"krate":0,"index":4216},{"krate":0,"index":4219},{"krate":0,"index":4222},{"krate":0,"index":4223},{"krate":0,"index":4224},{"krate":0,"index":4226},{"krate":0,"index":4229},{"krate":0,"index":4246},{"krate":0,"index":4249},{"krate":0,"index":4252},{"krate":0,"index":4256},{"krate":0,"index":4260},{"krate":0,"index":4264},{"krate":0,"index":4268},{"krate":0,"index":4272},{"krate":0,"index":4276},{"krate":0,"index":4280},{"krate":0,"index":4284},{"krate":0,"index":4288},{"krate":0,"index":4292},{"krate":0,"index":4296},{"krate":0,"index":4300},{"krate":0,"index":4304},{"krate":0,"index":4308},{"krate":0,"index":4312}],"decl_id":null,"docs":" GPIO\n","sig":null,"attributes":[{"value":"/ GPIO","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95000,"byte_end":95008,"line_start":596,"line_end":596,"column_start":9,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":4230},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98854,"byte_end":98857,"line_start":721,"line_end":721,"column_start":11,"column_end":14},"name":"pe0","qualname":"::gpio::gpioe::Parts::pe0","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'E', 0_u8>","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4231},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98890,"byte_end":98893,"line_start":722,"line_end":722,"column_start":11,"column_end":14},"name":"pe1","qualname":"::gpio::gpioe::Parts::pe1","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'E', 1_u8>","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4232},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98926,"byte_end":98929,"line_start":723,"line_end":723,"column_start":11,"column_end":14},"name":"pe2","qualname":"::gpio::gpioe::Parts::pe2","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'E', 2_u8>","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4233},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98962,"byte_end":98965,"line_start":724,"line_end":724,"column_start":11,"column_end":14},"name":"pe3","qualname":"::gpio::gpioe::Parts::pe3","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'E', 3_u8>","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4234},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98998,"byte_end":99001,"line_start":725,"line_end":725,"column_start":11,"column_end":14},"name":"pe4","qualname":"::gpio::gpioe::Parts::pe4","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'E', 4_u8>","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4235},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":99034,"byte_end":99037,"line_start":726,"line_end":726,"column_start":11,"column_end":14},"name":"pe5","qualname":"::gpio::gpioe::Parts::pe5","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'E', 5_u8>","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4236},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":99070,"byte_end":99073,"line_start":727,"line_end":727,"column_start":11,"column_end":14},"name":"pe6","qualname":"::gpio::gpioe::Parts::pe6","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'E', 6_u8>","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4237},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":99106,"byte_end":99109,"line_start":728,"line_end":728,"column_start":11,"column_end":14},"name":"pe7","qualname":"::gpio::gpioe::Parts::pe7","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'E', 7_u8>","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4238},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":99142,"byte_end":99145,"line_start":729,"line_end":729,"column_start":11,"column_end":14},"name":"pe8","qualname":"::gpio::gpioe::Parts::pe8","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'E', 8_u8>","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4239},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":99178,"byte_end":99181,"line_start":730,"line_end":730,"column_start":11,"column_end":14},"name":"pe9","qualname":"::gpio::gpioe::Parts::pe9","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'E', 9_u8>","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4240},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":99215,"byte_end":99219,"line_start":731,"line_end":731,"column_start":12,"column_end":16},"name":"pe10","qualname":"::gpio::gpioe::Parts::pe10","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'E', 10_u8>","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4241},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":99254,"byte_end":99258,"line_start":732,"line_end":732,"column_start":12,"column_end":16},"name":"pe11","qualname":"::gpio::gpioe::Parts::pe11","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'E', 11_u8>","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4242},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":99293,"byte_end":99297,"line_start":733,"line_end":733,"column_start":12,"column_end":16},"name":"pe12","qualname":"::gpio::gpioe::Parts::pe12","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'E', 12_u8>","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4243},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":99332,"byte_end":99336,"line_start":734,"line_end":734,"column_start":12,"column_end":16},"name":"pe13","qualname":"::gpio::gpioe::Parts::pe13","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'E', 13_u8>","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4244},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":99371,"byte_end":99375,"line_start":735,"line_end":735,"column_start":12,"column_end":16},"name":"pe14","qualname":"::gpio::gpioe::Parts::pe14","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'E', 14_u8>","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4245},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":99410,"byte_end":99414,"line_start":736,"line_end":736,"column_start":12,"column_end":16},"name":"pe15","qualname":"::gpio::gpioe::Parts::pe15","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'E', 15_u8>","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":4249},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98837,"byte_end":98840,"line_start":720,"line_end":720,"column_start":30,"column_end":33},"name":"PEn","qualname":"::gpio::gpioe::PEn","value":"super::PEPin<MODE, >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4252},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98848,"byte_end":98851,"line_start":721,"line_end":721,"column_start":5,"column_end":8},"name":"PE0","qualname":"::gpio::gpioe::PE0","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4256},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98884,"byte_end":98887,"line_start":722,"line_end":722,"column_start":5,"column_end":8},"name":"PE1","qualname":"::gpio::gpioe::PE1","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4260},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98920,"byte_end":98923,"line_start":723,"line_end":723,"column_start":5,"column_end":8},"name":"PE2","qualname":"::gpio::gpioe::PE2","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4264},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98956,"byte_end":98959,"line_start":724,"line_end":724,"column_start":5,"column_end":8},"name":"PE3","qualname":"::gpio::gpioe::PE3","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4268},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":98992,"byte_end":98995,"line_start":725,"line_end":725,"column_start":5,"column_end":8},"name":"PE4","qualname":"::gpio::gpioe::PE4","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4272},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":99028,"byte_end":99031,"line_start":726,"line_end":726,"column_start":5,"column_end":8},"name":"PE5","qualname":"::gpio::gpioe::PE5","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4276},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":99064,"byte_end":99067,"line_start":727,"line_end":727,"column_start":5,"column_end":8},"name":"PE6","qualname":"::gpio::gpioe::PE6","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4280},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":99100,"byte_end":99103,"line_start":728,"line_end":728,"column_start":5,"column_end":8},"name":"PE7","qualname":"::gpio::gpioe::PE7","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4284},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":99136,"byte_end":99139,"line_start":729,"line_end":729,"column_start":5,"column_end":8},"name":"PE8","qualname":"::gpio::gpioe::PE8","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4288},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":99172,"byte_end":99175,"line_start":730,"line_end":730,"column_start":5,"column_end":8},"name":"PE9","qualname":"::gpio::gpioe::PE9","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4292},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":99208,"byte_end":99212,"line_start":731,"line_end":731,"column_start":5,"column_end":9},"name":"PE10","qualname":"::gpio::gpioe::PE10","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4296},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":99247,"byte_end":99251,"line_start":732,"line_end":732,"column_start":5,"column_end":9},"name":"PE11","qualname":"::gpio::gpioe::PE11","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4300},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":99286,"byte_end":99290,"line_start":733,"line_end":733,"column_start":5,"column_end":9},"name":"PE12","qualname":"::gpio::gpioe::PE12","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4304},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":99325,"byte_end":99329,"line_start":734,"line_end":734,"column_start":5,"column_end":9},"name":"PE13","qualname":"::gpio::gpioe::PE13","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4308},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":99364,"byte_end":99368,"line_start":735,"line_end":735,"column_start":5,"column_end":9},"name":"PE14","qualname":"::gpio::gpioe::PE14","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4312},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":99403,"byte_end":99407,"line_start":736,"line_end":736,"column_start":5,"column_end":9},"name":"PE15","qualname":"::gpio::gpioe::PE15","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4316},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":100813,"byte_end":100818,"line_start":780,"line_end":780,"column_start":14,"column_end":19},"name":"gpioh","qualname":"::gpio::gpioh","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","parent":null,"children":[{"krate":0,"index":4317},{"krate":0,"index":4318},{"krate":0,"index":4321},{"krate":0,"index":4324},{"krate":0,"index":4325},{"krate":0,"index":4328},{"krate":0,"index":4331},{"krate":0,"index":4332},{"krate":0,"index":4333},{"krate":0,"index":4335},{"krate":0,"index":4338},{"krate":0,"index":4355},{"krate":0,"index":4358},{"krate":0,"index":4361},{"krate":0,"index":4365},{"krate":0,"index":4369},{"krate":0,"index":4373},{"krate":0,"index":4377},{"krate":0,"index":4381},{"krate":0,"index":4385},{"krate":0,"index":4389},{"krate":0,"index":4393},{"krate":0,"index":4397},{"krate":0,"index":4401},{"krate":0,"index":4405},{"krate":0,"index":4409},{"krate":0,"index":4413},{"krate":0,"index":4417},{"krate":0,"index":4421}],"decl_id":null,"docs":" GPIO\n","sig":null,"attributes":[{"value":"/ GPIO","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95000,"byte_end":95008,"line_start":596,"line_end":596,"column_start":9,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":4339},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":100846,"byte_end":100849,"line_start":781,"line_end":781,"column_start":11,"column_end":14},"name":"ph0","qualname":"::gpio::gpioh::Parts::ph0","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'H', 0_u8>","parent":{"krate":0,"index":4338},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4340},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":100882,"byte_end":100885,"line_start":782,"line_end":782,"column_start":11,"column_end":14},"name":"ph1","qualname":"::gpio::gpioh::Parts::ph1","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'H', 1_u8>","parent":{"krate":0,"index":4338},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4341},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":100918,"byte_end":100921,"line_start":783,"line_end":783,"column_start":11,"column_end":14},"name":"ph2","qualname":"::gpio::gpioh::Parts::ph2","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'H', 2_u8>","parent":{"krate":0,"index":4338},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4342},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":100954,"byte_end":100957,"line_start":784,"line_end":784,"column_start":11,"column_end":14},"name":"ph3","qualname":"::gpio::gpioh::Parts::ph3","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'H', 3_u8>","parent":{"krate":0,"index":4338},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4343},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":100990,"byte_end":100993,"line_start":785,"line_end":785,"column_start":11,"column_end":14},"name":"ph4","qualname":"::gpio::gpioh::Parts::ph4","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'H', 4_u8>","parent":{"krate":0,"index":4338},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4344},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":101026,"byte_end":101029,"line_start":786,"line_end":786,"column_start":11,"column_end":14},"name":"ph5","qualname":"::gpio::gpioh::Parts::ph5","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'H', 5_u8>","parent":{"krate":0,"index":4338},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4345},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":101062,"byte_end":101065,"line_start":787,"line_end":787,"column_start":11,"column_end":14},"name":"ph6","qualname":"::gpio::gpioh::Parts::ph6","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'H', 6_u8>","parent":{"krate":0,"index":4338},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4346},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":101098,"byte_end":101101,"line_start":788,"line_end":788,"column_start":11,"column_end":14},"name":"ph7","qualname":"::gpio::gpioh::Parts::ph7","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'H', 7_u8>","parent":{"krate":0,"index":4338},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4347},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":101134,"byte_end":101137,"line_start":789,"line_end":789,"column_start":11,"column_end":14},"name":"ph8","qualname":"::gpio::gpioh::Parts::ph8","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'H', 8_u8>","parent":{"krate":0,"index":4338},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4348},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":101170,"byte_end":101173,"line_start":790,"line_end":790,"column_start":11,"column_end":14},"name":"ph9","qualname":"::gpio::gpioh::Parts::ph9","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'H', 9_u8>","parent":{"krate":0,"index":4338},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4349},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":101207,"byte_end":101211,"line_start":791,"line_end":791,"column_start":12,"column_end":16},"name":"ph10","qualname":"::gpio::gpioh::Parts::ph10","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'H', 10_u8>","parent":{"krate":0,"index":4338},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4350},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":101246,"byte_end":101250,"line_start":792,"line_end":792,"column_start":12,"column_end":16},"name":"ph11","qualname":"::gpio::gpioh::Parts::ph11","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'H', 11_u8>","parent":{"krate":0,"index":4338},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4351},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":101285,"byte_end":101289,"line_start":793,"line_end":793,"column_start":12,"column_end":16},"name":"ph12","qualname":"::gpio::gpioh::Parts::ph12","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'H', 12_u8>","parent":{"krate":0,"index":4338},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4352},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":101324,"byte_end":101328,"line_start":794,"line_end":794,"column_start":12,"column_end":16},"name":"ph13","qualname":"::gpio::gpioh::Parts::ph13","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'H', 13_u8>","parent":{"krate":0,"index":4338},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4353},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":101363,"byte_end":101367,"line_start":795,"line_end":795,"column_start":12,"column_end":16},"name":"ph14","qualname":"::gpio::gpioh::Parts::ph14","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'H', 14_u8>","parent":{"krate":0,"index":4338},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4354},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":101402,"byte_end":101406,"line_start":796,"line_end":796,"column_start":12,"column_end":16},"name":"ph15","qualname":"::gpio::gpioh::Parts::ph15","value":"gpio::Pin<gpio::Input<gpio::Floating>, 'H', 15_u8>","parent":{"krate":0,"index":4338},"children":[],"decl_id":null,"docs":" Pin\n","sig":null,"attributes":[{"value":"/ Pin","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":95293,"byte_end":95300,"line_start":607,"line_end":607,"column_start":21,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":4358},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":100829,"byte_end":100832,"line_start":780,"line_end":780,"column_start":30,"column_end":33},"name":"PHn","qualname":"::gpio::gpioh::PHn","value":"super::PEPin<MODE, >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4361},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":100840,"byte_end":100843,"line_start":781,"line_end":781,"column_start":5,"column_end":8},"name":"PH0","qualname":"::gpio::gpioh::PH0","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4365},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":100876,"byte_end":100879,"line_start":782,"line_end":782,"column_start":5,"column_end":8},"name":"PH1","qualname":"::gpio::gpioh::PH1","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4369},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":100912,"byte_end":100915,"line_start":783,"line_end":783,"column_start":5,"column_end":8},"name":"PH2","qualname":"::gpio::gpioh::PH2","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4373},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":100948,"byte_end":100951,"line_start":784,"line_end":784,"column_start":5,"column_end":8},"name":"PH3","qualname":"::gpio::gpioh::PH3","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4377},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":100984,"byte_end":100987,"line_start":785,"line_end":785,"column_start":5,"column_end":8},"name":"PH4","qualname":"::gpio::gpioh::PH4","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4381},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":101020,"byte_end":101023,"line_start":786,"line_end":786,"column_start":5,"column_end":8},"name":"PH5","qualname":"::gpio::gpioh::PH5","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4385},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":101056,"byte_end":101059,"line_start":787,"line_end":787,"column_start":5,"column_end":8},"name":"PH6","qualname":"::gpio::gpioh::PH6","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4389},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":101092,"byte_end":101095,"line_start":788,"line_end":788,"column_start":5,"column_end":8},"name":"PH7","qualname":"::gpio::gpioh::PH7","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4393},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":101128,"byte_end":101131,"line_start":789,"line_end":789,"column_start":5,"column_end":8},"name":"PH8","qualname":"::gpio::gpioh::PH8","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4397},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":101164,"byte_end":101167,"line_start":790,"line_end":790,"column_start":5,"column_end":8},"name":"PH9","qualname":"::gpio::gpioh::PH9","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4401},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":101200,"byte_end":101204,"line_start":791,"line_end":791,"column_start":5,"column_end":9},"name":"PH10","qualname":"::gpio::gpioh::PH10","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4405},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":101239,"byte_end":101243,"line_start":792,"line_end":792,"column_start":5,"column_end":9},"name":"PH11","qualname":"::gpio::gpioh::PH11","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4409},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":101278,"byte_end":101282,"line_start":793,"line_end":793,"column_start":5,"column_end":9},"name":"PH12","qualname":"::gpio::gpioh::PH12","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4413},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":101317,"byte_end":101321,"line_start":794,"line_end":794,"column_start":5,"column_end":9},"name":"PH13","qualname":"::gpio::gpioh::PH13","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4417},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":101356,"byte_end":101360,"line_start":795,"line_end":795,"column_start":5,"column_end":9},"name":"PH14","qualname":"::gpio::gpioh::PH14","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4421},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":101395,"byte_end":101399,"line_start":796,"line_end":796,"column_start":5,"column_end":9},"name":"PH15","qualname":"::gpio::gpioh::PH15","value":"super::Pin<MODE, , >","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1087},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"i2c","qualname":"::i2c","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","parent":null,"children":[{"krate":0,"index":1088},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1095},{"krate":0,"index":1098},{"krate":0,"index":1101},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1108},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1115},{"krate":0,"index":1118},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1125},{"krate":0,"index":1128},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1135},{"krate":0,"index":1138},{"krate":0,"index":1141},{"krate":0,"index":1144},{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1151},{"krate":0,"index":4425},{"krate":0,"index":4430},{"krate":0,"index":4432},{"krate":0,"index":4433},{"krate":0,"index":4435},{"krate":0,"index":4436},{"krate":0,"index":4438},{"krate":0,"index":4444},{"krate":0,"index":4446},{"krate":0,"index":4447},{"krate":0,"index":1154},{"krate":0,"index":1160},{"krate":0,"index":1163},{"krate":0,"index":1168},{"krate":0,"index":1170},{"krate":0,"index":1173},{"krate":0,"index":1176},{"krate":0,"index":1180},{"krate":0,"index":4450},{"krate":0,"index":4454},{"krate":0,"index":4458},{"krate":0,"index":4462},{"krate":0,"index":4466},{"krate":0,"index":4470},{"krate":0,"index":4474},{"krate":0,"index":4478},{"krate":0,"index":4482},{"krate":0,"index":4486},{"krate":0,"index":4490},{"krate":0,"index":4494},{"krate":0,"index":4498},{"krate":0,"index":4511},{"krate":0,"index":4513},{"krate":0,"index":4514},{"krate":0,"index":4516},{"krate":0,"index":4517},{"krate":0,"index":4519},{"krate":0,"index":4520},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1194},{"krate":0,"index":1213},{"krate":0,"index":1217},{"krate":0,"index":1226},{"krate":0,"index":1231},{"krate":0,"index":1237}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":4379,"byte_end":4414,"line_start":127,"line_end":127,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4426},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":140912,"byte_end":140921,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"name":"Ratio2to1","qualname":"::i2c::DutyCycle::Ratio2to1","value":"DutyCycle::Ratio2to1","parent":{"krate":0,"index":4425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4428},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":140927,"byte_end":140937,"line_start":24,"line_end":24,"column_start":5,"column_end":15},"name":"Ratio16to9","qualname":"::i2c::DutyCycle::Ratio16to9","value":"DutyCycle::Ratio16to9","parent":{"krate":0,"index":4425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4425},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":140896,"byte_end":140905,"line_start":22,"line_end":22,"column_start":10,"column_end":19},"name":"DutyCycle","qualname":"::i2c::DutyCycle","value":"pub enum DutyCycle { Ratio2to1, Ratio16to9, }","parent":null,"children":[{"krate":0,"index":4426},{"krate":0,"index":4428}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4439},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":140990,"byte_end":140998,"line_start":29,"line_end":29,"column_start":5,"column_end":13},"name":"Standard","qualname":"::i2c::Mode::Standard","value":"Mode::Standard { frequency }","parent":{"krate":0,"index":4438},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4441},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":141038,"byte_end":141042,"line_start":32,"line_end":32,"column_start":5,"column_end":9},"name":"Fast","qualname":"::i2c::Mode::Fast","value":"Mode::Fast { frequency, duty_cycle }","parent":{"krate":0,"index":4438},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4438},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":140979,"byte_end":140983,"line_start":28,"line_end":28,"column_start":10,"column_end":14},"name":"Mode","qualname":"::i2c::Mode","value":"pub enum Mode {\n    Standard {\n            frequency: Hertz,\n        },\n    Fast {\n            frequency: Hertz,\n            duty_cycle: DutyCycle,\n        },\n}","parent":null,"children":[{"krate":0,"index":4439},{"krate":0,"index":4441}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1155},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":141135,"byte_end":141143,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"standard","qualname":"<Mode>::standard","value":"pub fn standard<F: Into<Hertz>>(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1157},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":141278,"byte_end":141282,"line_start":45,"line_end":45,"column_start":12,"column_end":16},"name":"fast","qualname":"<Mode>::fast","value":"pub fn fast<F: Into<Hertz>>(F, DutyCycle) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1159},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":141460,"byte_end":141473,"line_start":52,"line_end":52,"column_start":12,"column_end":25},"name":"get_frequency","qualname":"<Mode>::get_frequency","value":"pub fn get_frequency(&Self) -> Hertz","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1163},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":142044,"byte_end":142047,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"I2c","qualname":"::i2c::I2c","value":"I2c {  }","parent":null,"children":[{"krate":0,"index":1166},{"krate":0,"index":1167}],"decl_id":null,"docs":" I2C abstraction\n","sig":null,"attributes":[{"value":"/ I2C abstraction","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":142013,"byte_end":142032,"line_start":77,"line_end":77,"column_start":1,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":1168},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":142114,"byte_end":142118,"line_start":83,"line_end":83,"column_start":11,"column_end":15},"name":"Pins","qualname":"::i2c::Pins","value":"Pins<I2c>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1170},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":142137,"byte_end":142143,"line_start":84,"line_end":84,"column_start":11,"column_end":17},"name":"PinScl","qualname":"::i2c::PinScl","value":"PinScl<I2c>","parent":null,"children":[{"krate":0,"index":1172}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1172},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":142160,"byte_end":142161,"line_start":85,"line_end":85,"column_start":10,"column_end":11},"name":"A","qualname":"::i2c::PinScl::A","value":"type A;","parent":{"krate":0,"index":1170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1173},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":142175,"byte_end":142181,"line_start":87,"line_end":87,"column_start":11,"column_end":17},"name":"PinSda","qualname":"::i2c::PinSda","value":"PinSda<I2c>","parent":null,"children":[{"krate":0,"index":1175}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1175},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":142198,"byte_end":142199,"line_start":88,"line_end":88,"column_start":10,"column_end":11},"name":"A","qualname":"::i2c::PinSda::A","value":"type A;","parent":{"krate":0,"index":1173},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4499},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":146493,"byte_end":146500,"line_start":264,"line_end":264,"column_start":5,"column_end":12},"name":"OVERRUN","qualname":"::i2c::Error::OVERRUN","value":"Error::OVERRUN","parent":{"krate":0,"index":4498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4501},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":146506,"byte_end":146510,"line_start":265,"line_end":265,"column_start":5,"column_end":9},"name":"NACK","qualname":"::i2c::Error::NACK","value":"Error::NACK","parent":{"krate":0,"index":4498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4503},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":146516,"byte_end":146523,"line_start":266,"line_end":266,"column_start":5,"column_end":12},"name":"TIMEOUT","qualname":"::i2c::Error::TIMEOUT","value":"Error::TIMEOUT","parent":{"krate":0,"index":4498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4505},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":146642,"byte_end":146645,"line_start":269,"line_end":269,"column_start":5,"column_end":8},"name":"BUS","qualname":"::i2c::Error::BUS","value":"Error::BUS","parent":{"krate":0,"index":4498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4507},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":146651,"byte_end":146654,"line_start":270,"line_end":270,"column_start":5,"column_end":8},"name":"CRC","qualname":"::i2c::Error::CRC","value":"Error::CRC","parent":{"krate":0,"index":4498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4509},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":146660,"byte_end":146671,"line_start":271,"line_end":271,"column_start":5,"column_end":16},"name":"ARBITRATION","qualname":"::i2c::Error::ARBITRATION","value":"Error::ARBITRATION","parent":{"krate":0,"index":4498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4498},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":146481,"byte_end":146486,"line_start":263,"line_end":263,"column_start":10,"column_end":15},"name":"Error","qualname":"::i2c::Error","value":"pub enum Error { OVERRUN, NACK, TIMEOUT, BUS, CRC, ARBITRATION, }","parent":null,"children":[{"krate":0,"index":4499},{"krate":0,"index":4501},{"krate":0,"index":4503},{"krate":0,"index":4505},{"krate":0,"index":4507},{"krate":0,"index":4509}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1181},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":146686,"byte_end":146694,"line_start":274,"line_end":274,"column_start":11,"column_end":19},"name":"Instance","qualname":"::i2c::Instance","value":"Instance: crate::Sealed + Deref<Target = i2c1::RegisterBlock> + Enable + Reset","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1191},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":147109,"byte_end":147112,"line_start":288,"line_end":288,"column_start":12,"column_end":15},"name":"new","qualname":"<I2c<I2C, (SCL, SDA)>>::new","value":"pub fn new<M: Into<Mode>>(I2C, (SCL, SDA), M, Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1193},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":147635,"byte_end":147642,"line_start":306,"line_end":306,"column_start":12,"column_end":19},"name":"release","qualname":"<I2c<I2C, (SCL, SDA)>>::release","value":"pub fn release(Self) -> (I2C, (SCL, SDA))","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1248},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dma","qualname":"::dma","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","parent":null,"children":[{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1257},{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1263},{"krate":0,"index":1266},{"krate":0,"index":1269},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1276},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1283},{"krate":0,"index":1286},{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1293},{"krate":0,"index":1296},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1409},{"krate":0,"index":1412},{"krate":0,"index":1415},{"krate":0,"index":1418},{"krate":0,"index":1421},{"krate":0,"index":1424},{"krate":0,"index":1427},{"krate":0,"index":1430},{"krate":0,"index":4995},{"krate":0,"index":5006},{"krate":0,"index":5008},{"krate":0,"index":1433},{"krate":0,"index":5012},{"krate":0,"index":5019},{"krate":0,"index":5021},{"krate":0,"index":5023},{"krate":0,"index":5024},{"krate":0,"index":5025},{"krate":0,"index":5027},{"krate":0,"index":5029},{"krate":0,"index":5031},{"krate":0,"index":5033},{"krate":0,"index":1436},{"krate":0,"index":1438},{"krate":0,"index":5034},{"krate":0,"index":5037},{"krate":0,"index":5040},{"krate":0,"index":5043},{"krate":0,"index":1441},{"krate":0,"index":1444},{"krate":0,"index":5045},{"krate":0,"index":5047},{"krate":0,"index":5049},{"krate":0,"index":5051},{"krate":0,"index":1448},{"krate":0,"index":1450},{"krate":0,"index":1453},{"krate":0,"index":1456},{"krate":0,"index":1459},{"krate":0,"index":5052},{"krate":0,"index":5067},{"krate":0,"index":5069},{"krate":0,"index":5071},{"krate":0,"index":1462},{"krate":0,"index":5072},{"krate":0,"index":5077},{"krate":0,"index":5079},{"krate":0,"index":5081},{"krate":0,"index":5082},{"krate":0,"index":5083},{"krate":0,"index":1464},{"krate":0,"index":1467},{"krate":0,"index":1471},{"krate":0,"index":1475},{"krate":0,"index":1479},{"krate":0,"index":1482},{"krate":0,"index":1485},{"krate":0,"index":1488},{"krate":0,"index":1491},{"krate":0,"index":1494},{"krate":0,"index":1497},{"krate":0,"index":1500},{"krate":0,"index":1503},{"krate":0,"index":1506},{"krate":0,"index":1509},{"krate":0,"index":1512},{"krate":0,"index":1515},{"krate":0,"index":1518},{"krate":0,"index":1521},{"krate":0,"index":1524},{"krate":0,"index":1527},{"krate":0,"index":1546},{"krate":0,"index":1549},{"krate":0,"index":1610},{"krate":0,"index":5085},{"krate":0,"index":5105},{"krate":0,"index":5125},{"krate":0,"index":5145},{"krate":0,"index":5165},{"krate":0,"index":5185},{"krate":0,"index":5205},{"krate":0,"index":5225},{"krate":0,"index":5245},{"krate":0,"index":5248},{"krate":0,"index":5252},{"krate":0,"index":5257},{"krate":0,"index":1611},{"krate":0,"index":5260},{"krate":0,"index":5262},{"krate":0,"index":5264},{"krate":0,"index":5266},{"krate":0,"index":5268},{"krate":0,"index":5270},{"krate":0,"index":5272},{"krate":0,"index":5274},{"krate":0,"index":5276},{"krate":0,"index":5278},{"krate":0,"index":5280},{"krate":0,"index":5282},{"krate":0,"index":5284},{"krate":0,"index":5286},{"krate":0,"index":5288},{"krate":0,"index":5290},{"krate":0,"index":1612},{"krate":0,"index":1638},{"krate":0,"index":1650},{"krate":0,"index":1661},{"krate":0,"index":1672},{"krate":0,"index":1683},{"krate":0,"index":1706}],"decl_id":null,"docs":" Direct Memory Access.","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":4918,"byte_end":4953,"line_start":147,"line_end":147,"column_start":1,"column_end":36}},{"value":"/ Direct Memory Access.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":156617,"byte_end":156642,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":156643,"byte_end":156646,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [Transfer::init](struct.Transfer.html#method.init) is only implemented for valid combinations of","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":156647,"byte_end":156747,"line_start":3,"line_end":3,"column_start":1,"column_end":101}},{"value":"/ peripheral-stream-channel-direction, providing compile time checking.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":156748,"byte_end":156821,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":156822,"byte_end":156825,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module implements Memory To Memory, Peripheral To Memory and Memory to Peripheral","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":156826,"byte_end":156916,"line_start":6,"line_end":6,"column_start":1,"column_end":91}},{"value":"/ transfers, double buffering is supported only for Peripheral To Memory and Memory to Peripheral","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":156917,"byte_end":157016,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ transfers.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":157017,"byte_end":157031,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Mod","id":{"krate":0,"index":1296},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"traits","qualname":"::dma::traits","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","parent":null,"children":[{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1306},{"krate":0,"index":1309},{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1316},{"krate":0,"index":1319},{"krate":0,"index":1322},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1331},{"krate":0,"index":1334},{"krate":0,"index":1346},{"krate":0,"index":1381},{"krate":0,"index":1384},{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1393},{"krate":0,"index":1395},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":4522},{"krate":0,"index":4526},{"krate":0,"index":4530},{"krate":0,"index":4534},{"krate":0,"index":4538},{"krate":0,"index":4542},{"krate":0,"index":4546},{"krate":0,"index":4550},{"krate":0,"index":4554},{"krate":0,"index":4558},{"krate":0,"index":4562},{"krate":0,"index":4566},{"krate":0,"index":1403},{"krate":0,"index":4570},{"krate":0,"index":4572},{"krate":0,"index":4574},{"krate":0,"index":4576},{"krate":0,"index":4578},{"krate":0,"index":4580},{"krate":0,"index":4582},{"krate":0,"index":4584},{"krate":0,"index":4586},{"krate":0,"index":4588},{"krate":0,"index":4590},{"krate":0,"index":4592},{"krate":0,"index":4594},{"krate":0,"index":4596},{"krate":0,"index":4598},{"krate":0,"index":4600},{"krate":0,"index":4602},{"krate":0,"index":4604},{"krate":0,"index":4606},{"krate":0,"index":4608},{"krate":0,"index":4610},{"krate":0,"index":4612},{"krate":0,"index":4614},{"krate":0,"index":4616},{"krate":0,"index":4618},{"krate":0,"index":4620},{"krate":0,"index":4622},{"krate":0,"index":4624},{"krate":0,"index":4626},{"krate":0,"index":4628},{"krate":0,"index":4630},{"krate":0,"index":4632},{"krate":0,"index":4635},{"krate":0,"index":4638},{"krate":0,"index":4641},{"krate":0,"index":4644},{"krate":0,"index":4647},{"krate":0,"index":4650},{"krate":0,"index":4653},{"krate":0,"index":4656},{"krate":0,"index":4659},{"krate":0,"index":4662},{"krate":0,"index":4665},{"krate":0,"index":4668},{"krate":0,"index":4671},{"krate":0,"index":4674},{"krate":0,"index":4676},{"krate":0,"index":4678},{"krate":0,"index":4680},{"krate":0,"index":4682},{"krate":0,"index":4685},{"krate":0,"index":4687},{"krate":0,"index":4689},{"krate":0,"index":4691},{"krate":0,"index":4693},{"krate":0,"index":4695},{"krate":0,"index":4697},{"krate":0,"index":4699},{"krate":0,"index":4701},{"krate":0,"index":4703},{"krate":0,"index":4705},{"krate":0,"index":4707},{"krate":0,"index":4709},{"krate":0,"index":4711},{"krate":0,"index":4713},{"krate":0,"index":4715},{"krate":0,"index":4717},{"krate":0,"index":4719},{"krate":0,"index":4721},{"krate":0,"index":4723},{"krate":0,"index":4725},{"krate":0,"index":4727},{"krate":0,"index":4729},{"krate":0,"index":4731},{"krate":0,"index":4733},{"krate":0,"index":4735},{"krate":0,"index":4737},{"krate":0,"index":4739},{"krate":0,"index":4741},{"krate":0,"index":4743},{"krate":0,"index":4745},{"krate":0,"index":4747},{"krate":0,"index":4749},{"krate":0,"index":4751},{"krate":0,"index":4753},{"krate":0,"index":4755},{"krate":0,"index":4757},{"krate":0,"index":4759},{"krate":0,"index":4761},{"krate":0,"index":4763},{"krate":0,"index":4765},{"krate":0,"index":4767},{"krate":0,"index":4769},{"krate":0,"index":4771},{"krate":0,"index":4773},{"krate":0,"index":4775},{"krate":0,"index":4777},{"krate":0,"index":4779},{"krate":0,"index":4781},{"krate":0,"index":4783},{"krate":0,"index":4785},{"krate":0,"index":4787},{"krate":0,"index":4789},{"krate":0,"index":4791},{"krate":0,"index":4793},{"krate":0,"index":4795},{"krate":0,"index":4797},{"krate":0,"index":4799},{"krate":0,"index":4801},{"krate":0,"index":4803},{"krate":0,"index":4805},{"krate":0,"index":4807},{"krate":0,"index":4809},{"krate":0,"index":4811},{"krate":0,"index":4813},{"krate":0,"index":4815},{"krate":0,"index":4817},{"krate":0,"index":4819},{"krate":0,"index":4821},{"krate":0,"index":4823},{"krate":0,"index":4825},{"krate":0,"index":4827},{"krate":0,"index":4829},{"krate":0,"index":4831},{"krate":0,"index":4833},{"krate":0,"index":4835},{"krate":0,"index":4837},{"krate":0,"index":4839},{"krate":0,"index":4841},{"krate":0,"index":4843},{"krate":0,"index":4845},{"krate":0,"index":4847},{"krate":0,"index":4849},{"krate":0,"index":4851},{"krate":0,"index":4853},{"krate":0,"index":4855},{"krate":0,"index":4857},{"krate":0,"index":4859},{"krate":0,"index":4861},{"krate":0,"index":4863},{"krate":0,"index":4865},{"krate":0,"index":4867},{"krate":0,"index":4869},{"krate":0,"index":4871},{"krate":0,"index":4873},{"krate":0,"index":4876},{"krate":0,"index":4879},{"krate":0,"index":4882},{"krate":0,"index":4885},{"krate":0,"index":4888},{"krate":0,"index":4891},{"krate":0,"index":4894},{"krate":0,"index":4897},{"krate":0,"index":4900},{"krate":0,"index":4903},{"krate":0,"index":4906},{"krate":0,"index":4909},{"krate":0,"index":4912},{"krate":0,"index":4915},{"krate":0,"index":4918},{"krate":0,"index":4921},{"krate":0,"index":4924},{"krate":0,"index":4927},{"krate":0,"index":4929},{"krate":0,"index":4931},{"krate":0,"index":4933},{"krate":0,"index":4935},{"krate":0,"index":4937},{"krate":0,"index":4939},{"krate":0,"index":4941},{"krate":0,"index":4943},{"krate":0,"index":4945},{"krate":0,"index":4947},{"krate":0,"index":4950},{"krate":0,"index":4953},{"krate":0,"index":4955},{"krate":0,"index":4957},{"krate":0,"index":4959},{"krate":0,"index":4961},{"krate":0,"index":4963},{"krate":0,"index":4966},{"krate":0,"index":4968},{"krate":0,"index":4970},{"krate":0,"index":4972},{"krate":0,"index":4974},{"krate":0,"index":4976},{"krate":0,"index":4978},{"krate":0,"index":4980},{"krate":0,"index":4982},{"krate":0,"index":4984},{"krate":0,"index":4986},{"krate":0,"index":4988},{"krate":0,"index":4990},{"krate":0,"index":4993}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1323},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":213208,"byte_end":213212,"line_start":11,"line_end":11,"column_start":15,"column_end":19},"name":"Bits","qualname":"::dma::traits::sealed::Bits","value":"Bits<T>","parent":null,"children":[{"krate":0,"index":1325}],"decl_id":null,"docs":" Converts value to bits for setting a register value.\n","sig":null,"attributes":[{"value":"/ Converts value to bits for setting a register value.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":213137,"byte_end":213193,"line_start":10,"line_end":10,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1325},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":213264,"byte_end":213268,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"bits","qualname":"::dma::traits::sealed::Bits::bits","value":"pub fn bits(Self) -> T","parent":{"krate":0,"index":1323},"children":[],"decl_id":null,"docs":" Returns the bit value.\n","sig":null,"attributes":[{"value":"/ Returns the bit value.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":213226,"byte_end":213252,"line_start":12,"line_end":12,"column_start":9,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":1326},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":213301,"byte_end":213307,"line_start":15,"line_end":15,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::dma::traits::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1334},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":213397,"byte_end":213406,"line_start":20,"line_end":20,"column_start":11,"column_end":20},"name":"StreamISR","qualname":"::dma::traits::StreamISR","value":"StreamISR: Sealed","parent":null,"children":[{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345}],"decl_id":null,"docs":" Trait for DMA stream interrupt handling.\n","sig":null,"attributes":[{"value":"/ Trait for DMA stream interrupt handling.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":213342,"byte_end":213386,"line_start":19,"line_end":19,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1335},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":213473,"byte_end":213489,"line_start":22,"line_end":22,"column_start":8,"column_end":24},"name":"clear_interrupts","qualname":"::dma::traits::StreamISR::clear_interrupts","value":"pub fn clear_interrupts(&mut Self)","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" Clear all interrupts for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Clear all interrupts for the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":213421,"byte_end":213465,"line_start":21,"line_end":21,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1336},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":213579,"byte_end":213612,"line_start":25,"line_end":25,"column_start":8,"column_end":41},"name":"clear_transfer_complete_interrupt","qualname":"::dma::traits::StreamISR::clear_transfer_complete_interrupt","value":"pub fn clear_transfer_complete_interrupt(&mut Self)","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" Clear transfer complete interrupt (tcif) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Clear transfer complete interrupt (tcif) for the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":213507,"byte_end":213571,"line_start":24,"line_end":24,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1337},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":213698,"byte_end":213727,"line_start":28,"line_end":28,"column_start":8,"column_end":37},"name":"clear_half_transfer_interrupt","qualname":"::dma::traits::StreamISR::clear_half_transfer_interrupt","value":"pub fn clear_half_transfer_interrupt(&mut Self)","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" Clear half transfer interrupt (htif) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Clear half transfer interrupt (htif) for the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":213630,"byte_end":213690,"line_start":27,"line_end":27,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1338},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":213814,"byte_end":213844,"line_start":31,"line_end":31,"column_start":8,"column_end":38},"name":"clear_transfer_error_interrupt","qualname":"::dma::traits::StreamISR::clear_transfer_error_interrupt","value":"pub fn clear_transfer_error_interrupt(&mut Self)","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" Clear transfer error interrupt (teif) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Clear transfer error interrupt (teif) for the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":213745,"byte_end":213806,"line_start":30,"line_end":30,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1339},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":213935,"byte_end":213968,"line_start":34,"line_end":34,"column_start":8,"column_end":41},"name":"clear_direct_mode_error_interrupt","qualname":"::dma::traits::StreamISR::clear_direct_mode_error_interrupt","value":"pub fn clear_direct_mode_error_interrupt(&mut Self)","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" Clear direct mode error interrupt (dmeif) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Clear direct mode error interrupt (dmeif) for the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":213862,"byte_end":213927,"line_start":33,"line_end":33,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1340},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":214051,"byte_end":214077,"line_start":37,"line_end":37,"column_start":8,"column_end":34},"name":"clear_fifo_error_interrupt","qualname":"::dma::traits::StreamISR::clear_fifo_error_interrupt","value":"pub fn clear_fifo_error_interrupt(&mut Self)","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" Clear fifo error interrupt (feif) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Clear fifo error interrupt (feif) for the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":213986,"byte_end":214043,"line_start":36,"line_end":36,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1341},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":214134,"byte_end":214160,"line_start":40,"line_end":40,"column_start":8,"column_end":34},"name":"get_transfer_complete_flag","qualname":"::dma::traits::StreamISR::get_transfer_complete_flag","value":"pub fn get_transfer_complete_flag() -> bool","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" Get transfer complete flag.\n","sig":null,"attributes":[{"value":"/ Get transfer complete flag.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":214095,"byte_end":214126,"line_start":39,"line_end":39,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1342},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":214212,"byte_end":214234,"line_start":43,"line_end":43,"column_start":8,"column_end":30},"name":"get_half_transfer_flag","qualname":"::dma::traits::StreamISR::get_half_transfer_flag","value":"pub fn get_half_transfer_flag() -> bool","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" Get half transfer flag.\n","sig":null,"attributes":[{"value":"/ Get half transfer flag.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":214177,"byte_end":214204,"line_start":42,"line_end":42,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1343},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":214286,"byte_end":214309,"line_start":46,"line_end":46,"column_start":8,"column_end":31},"name":"get_transfer_error_flag","qualname":"::dma::traits::StreamISR::get_transfer_error_flag","value":"pub fn get_transfer_error_flag() -> bool","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" Get transfer error flag\n","sig":null,"attributes":[{"value":"/ Get transfer error flag","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":214251,"byte_end":214278,"line_start":45,"line_end":45,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1344},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":214357,"byte_end":214376,"line_start":49,"line_end":49,"column_start":8,"column_end":27},"name":"get_fifo_error_flag","qualname":"::dma::traits::StreamISR::get_fifo_error_flag","value":"pub fn get_fifo_error_flag() -> bool","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" Get fifo error flag\n","sig":null,"attributes":[{"value":"/ Get fifo error flag","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":214326,"byte_end":214349,"line_start":48,"line_end":48,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1345},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":214431,"byte_end":214457,"line_start":52,"line_end":52,"column_start":8,"column_end":34},"name":"get_direct_mode_error_flag","qualname":"::dma::traits::StreamISR::get_direct_mode_error_flag","value":"pub fn get_direct_mode_error_flag() -> bool","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" Get direct mode error flag\n","sig":null,"attributes":[{"value":"/ Get direct mode error flag","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":214393,"byte_end":214423,"line_start":51,"line_end":51,"column_start":5,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":1346},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":214515,"byte_end":214521,"line_start":56,"line_end":56,"column_start":11,"column_end":17},"name":"Stream","qualname":"::dma::traits::Stream","value":"Stream: StreamISR + Sealed","parent":null,"children":[{"krate":0,"index":1347},{"krate":0,"index":1348},{"krate":0,"index":1349},{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1380}],"decl_id":null,"docs":" Trait for DMA streams types.\n","sig":null,"attributes":[{"value":"/ Trait for DMA streams types.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":214472,"byte_end":214504,"line_start":55,"line_end":55,"column_start":1,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":1347},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":214593,"byte_end":214599,"line_start":58,"line_end":58,"column_start":11,"column_end":17},"name":"NUMBER","qualname":"::dma::traits::Stream::NUMBER","value":"usize","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" Number of the register stream.\n","sig":null,"attributes":[{"value":"/ Number of the register stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":214548,"byte_end":214582,"line_start":57,"line_end":57,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1348},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":214676,"byte_end":214698,"line_start":60,"line_end":60,"column_start":8,"column_end":30},"name":"set_peripheral_address","qualname":"::dma::traits::Stream::set_peripheral_address","value":"pub fn set_peripheral_address(&mut Self, u32)","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" Set the peripheral address (par) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Set the peripheral address (par) for the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":214612,"byte_end":214668,"line_start":59,"line_end":59,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1349},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":214789,"byte_end":214807,"line_start":63,"line_end":63,"column_start":8,"column_end":26},"name":"set_memory_address","qualname":"::dma::traits::Stream::set_memory_address","value":"pub fn set_memory_address(&mut Self, u32)","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" Set the memory address (m0ar) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Set the memory address (m0ar) for the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":214728,"byte_end":214781,"line_start":62,"line_end":62,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1350},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":214898,"byte_end":214916,"line_start":66,"line_end":66,"column_start":8,"column_end":26},"name":"get_memory_address","qualname":"::dma::traits::Stream::get_memory_address","value":"pub fn get_memory_address(&Self) -> u32","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" Get the memory address (m0ar) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Get the memory address (m0ar) for the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":214837,"byte_end":214890,"line_start":65,"line_end":65,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1351},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":215005,"byte_end":215037,"line_start":69,"line_end":69,"column_start":8,"column_end":40},"name":"set_memory_double_buffer_address","qualname":"::dma::traits::Stream::set_memory_double_buffer_address","value":"pub fn set_memory_double_buffer_address(&mut Self, u32)","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" Set the double buffer address (m1ar) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Set the double buffer address (m1ar) for the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":214937,"byte_end":214997,"line_start":68,"line_end":68,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1352},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":215135,"byte_end":215167,"line_start":72,"line_end":72,"column_start":8,"column_end":40},"name":"get_memory_double_buffer_address","qualname":"::dma::traits::Stream::get_memory_double_buffer_address","value":"pub fn get_memory_double_buffer_address(&Self) -> u32","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" Get the double buffer address (m1ar) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Get the double buffer address (m1ar) for the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":215067,"byte_end":215127,"line_start":71,"line_end":71,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1353},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":215253,"byte_end":215276,"line_start":75,"line_end":75,"column_start":8,"column_end":31},"name":"set_number_of_transfers","qualname":"::dma::traits::Stream::set_number_of_transfers","value":"pub fn set_number_of_transfers(&mut Self, u16)","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" Set the number of transfers (ndt) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Set the number of transfers (ndt) for the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":215188,"byte_end":215245,"line_start":74,"line_end":74,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1354},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":215371,"byte_end":215394,"line_start":78,"line_end":78,"column_start":8,"column_end":31},"name":"get_number_of_transfers","qualname":"::dma::traits::Stream::get_number_of_transfers","value":"pub fn get_number_of_transfers() -> u16","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" Get the number of transfers (ndt) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Get the number of transfers (ndt) for the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":215306,"byte_end":215363,"line_start":77,"line_end":77,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1355},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":215557,"byte_end":215563,"line_start":85,"line_end":85,"column_start":15,"column_end":21},"name":"enable","qualname":"::dma::traits::Stream::enable","value":"pub unsafe fn enable(&mut Self)","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" Enable the DMA stream.","sig":null,"attributes":[{"value":"/ Enable the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":215410,"byte_end":215436,"line_start":80,"line_end":80,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":215441,"byte_end":215444,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":215449,"byte_end":215461,"line_start":82,"line_end":82,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":215466,"byte_end":215469,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ The user must ensure that all registers are properly configured.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":215474,"byte_end":215542,"line_start":84,"line_end":84,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1356},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":215629,"byte_end":215639,"line_start":88,"line_end":88,"column_start":8,"column_end":18},"name":"is_enabled","qualname":"::dma::traits::Stream::is_enabled","value":"pub fn is_enabled() -> bool","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" Returns the state of the DMA stream.\n","sig":null,"attributes":[{"value":"/ Returns the state of the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":215581,"byte_end":215621,"line_start":87,"line_end":87,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1357},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":215983,"byte_end":215990,"line_start":95,"line_end":95,"column_start":8,"column_end":15},"name":"disable","qualname":"::dma::traits::Stream::disable","value":"pub fn disable(&mut Self)","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" Disable the DMA stream.","sig":null,"attributes":[{"value":"/ Disable the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":215656,"byte_end":215683,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":215688,"byte_end":215691,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Disabling the stream during an on-going transfer needs to be performed in a certain way to","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":215696,"byte_end":215790,"line_start":92,"line_end":92,"column_start":5,"column_end":99}},{"value":"/ prevent problems if the stream is to be re-enabled shortly after, because of that, this","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":215795,"byte_end":215886,"line_start":93,"line_end":93,"column_start":5,"column_end":96}},{"value":"/ method will also clear all the stream's interrupt flags if the stream is active.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":215891,"byte_end":215975,"line_start":94,"line_end":94,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1358},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":216067,"byte_end":216078,"line_start":98,"line_end":98,"column_start":8,"column_end":19},"name":"set_channel","qualname":"::dma::traits::Stream::set_channel","value":"pub fn set_channel<const C: u8>(&mut Self) where ChannelX<>: Channel","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" Set the channel for the (chsel) the DMA stream.\n","sig":null,"attributes":[{"value":"/ Set the channel for the (chsel) the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":216008,"byte_end":216059,"line_start":97,"line_end":97,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1360},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":216197,"byte_end":216209,"line_start":103,"line_end":103,"column_start":8,"column_end":20},"name":"set_priority","qualname":"::dma::traits::Stream::set_priority","value":"pub fn set_priority(&mut Self, config::Priority)","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" Set the priority (pl) the DMA stream.\n","sig":null,"attributes":[{"value":"/ Set the priority (pl) the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":216148,"byte_end":216189,"line_start":102,"line_end":102,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1361},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":216523,"byte_end":216538,"line_start":113,"line_end":113,"column_start":15,"column_end":30},"name":"set_memory_size","qualname":"::dma::traits::Stream::set_memory_size","value":"pub unsafe fn set_memory_size(&mut Self, u8)","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" Set the memory size (msize) for the DMA stream.","sig":null,"attributes":[{"value":"/ Set the memory size (msize) for the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":216255,"byte_end":216306,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":216311,"byte_end":216314,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":216319,"byte_end":216331,"line_start":107,"line_end":107,"column_start":5,"column_end":17}},{"value":"/ This must have the same alignment of the buffer used in the transfer.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":216336,"byte_end":216409,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ Valid values:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":216414,"byte_end":216431,"line_start":109,"line_end":109,"column_start":5,"column_end":22}},{"value":"/     * 0 -> byte","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":216436,"byte_end":216455,"line_start":110,"line_end":110,"column_start":5,"column_end":24}},{"value":"/     * 1 -> half word","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":216460,"byte_end":216484,"line_start":111,"line_end":111,"column_start":5,"column_end":29}},{"value":"/     * 2 -> word","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":216489,"byte_end":216508,"line_start":112,"line_end":112,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":216854,"byte_end":216873,"line_start":123,"line_end":123,"column_start":15,"column_end":34},"name":"set_peripheral_size","qualname":"::dma::traits::Stream::set_peripheral_size","value":"pub unsafe fn set_peripheral_size(&mut Self, u8)","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" Set the peripheral memory size (psize) for the DMA stream.","sig":null,"attributes":[{"value":"/ Set the peripheral memory size (psize) for the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":216566,"byte_end":216628,"line_start":115,"line_end":115,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":216633,"byte_end":216636,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":216641,"byte_end":216653,"line_start":117,"line_end":117,"column_start":5,"column_end":17}},{"value":"/ This must have the same alignment of the peripheral data used in the transfer.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":216658,"byte_end":216740,"line_start":118,"line_end":118,"column_start":5,"column_end":87}},{"value":"/ Valid values:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":216745,"byte_end":216762,"line_start":119,"line_end":119,"column_start":5,"column_end":22}},{"value":"/     * 0 -> byte","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":216767,"byte_end":216786,"line_start":120,"line_end":120,"column_start":5,"column_end":24}},{"value":"/     * 1 -> half word","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":216791,"byte_end":216815,"line_start":121,"line_end":121,"column_start":5,"column_end":29}},{"value":"/     * 2 -> word","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":216820,"byte_end":216839,"line_start":122,"line_end":122,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1363},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":216971,"byte_end":216991,"line_start":126,"line_end":126,"column_start":8,"column_end":28},"name":"set_memory_increment","qualname":"::dma::traits::Stream::set_memory_increment","value":"pub fn set_memory_increment(&mut Self, bool)","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" Enable/disable memory increment (minc) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Enable/disable memory increment (minc) for the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":216901,"byte_end":216963,"line_start":125,"line_end":125,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":217100,"byte_end":217124,"line_start":129,"line_end":129,"column_start":8,"column_end":32},"name":"set_peripheral_increment","qualname":"::dma::traits::Stream::set_peripheral_increment","value":"pub fn set_peripheral_increment(&mut Self, bool)","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" Enable/disable peripheral increment (pinc) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Enable/disable peripheral increment (pinc) for the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":217026,"byte_end":217092,"line_start":128,"line_end":128,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1365},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":217213,"byte_end":217226,"line_start":132,"line_end":132,"column_start":8,"column_end":21},"name":"set_direction","qualname":"::dma::traits::Stream::set_direction","value":"pub fn set_direction<D: Direction>(&mut Self, D)","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" Set the direction (dir) of the DMA stream.\n","sig":null,"attributes":[{"value":"/ Set the direction (dir) of the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":217159,"byte_end":217205,"line_start":131,"line_end":131,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1367},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":217359,"byte_end":217380,"line_start":135,"line_end":135,"column_start":8,"column_end":29},"name":"set_interrupts_enable","qualname":"::dma::traits::Stream::set_interrupts_enable","value":"pub fn set_interrupts_enable(&mut Self, bool, bool, bool, bool)","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" Convenience method to configure the 4 common interrupts for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Convenience method to configure the 4 common interrupts for the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":217272,"byte_end":217351,"line_start":134,"line_end":134,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1368},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":217758,"byte_end":217779,"line_start":146,"line_end":146,"column_start":8,"column_end":29},"name":"get_interrupts_enable","qualname":"::dma::traits::Stream::get_interrupts_enable","value":"pub fn get_interrupts_enable() -> (bool, bool, bool, bool)","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" Convenience method to get the value of the 4 common interrupts for the DMA stream.\n The order of the returns are: `transfer_complete`, `half_transfer`, `transfer_error` and\n `direct_mode_error`.\n","sig":null,"attributes":[{"value":"/ Convenience method to get the value of the 4 common interrupts for the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":217538,"byte_end":217624,"line_start":143,"line_end":143,"column_start":5,"column_end":91}},{"value":"/ The order of the returns are: `transfer_complete`, `half_transfer`, `transfer_error` and","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":217629,"byte_end":217721,"line_start":144,"line_end":144,"column_start":5,"column_end":97}},{"value":"/ `direct_mode_error`.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":217726,"byte_end":217750,"line_start":145,"line_end":145,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1369},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":217900,"byte_end":217938,"line_start":149,"line_end":149,"column_start":8,"column_end":46},"name":"set_transfer_complete_interrupt_enable","qualname":"::dma::traits::Stream::set_transfer_complete_interrupt_enable","value":"pub fn set_transfer_complete_interrupt_enable(&mut Self, bool)","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" Enable/disable the transfer complete interrupt (tcie) of the DMA stream.\n","sig":null,"attributes":[{"value":"/ Enable/disable the transfer complete interrupt (tcie) of the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":217816,"byte_end":217892,"line_start":148,"line_end":148,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1370},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":218071,"byte_end":218105,"line_start":152,"line_end":152,"column_start":8,"column_end":42},"name":"set_half_transfer_interrupt_enable","qualname":"::dma::traits::Stream::set_half_transfer_interrupt_enable","value":"pub fn set_half_transfer_interrupt_enable(&mut Self, bool)","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" Enable/disable the half transfer interrupt (htie) of the DMA stream.\n","sig":null,"attributes":[{"value":"/ Enable/disable the half transfer interrupt (htie) of the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":217991,"byte_end":218063,"line_start":151,"line_end":151,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1371},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":218235,"byte_end":218270,"line_start":155,"line_end":155,"column_start":8,"column_end":43},"name":"set_transfer_error_interrupt_enable","qualname":"::dma::traits::Stream::set_transfer_error_interrupt_enable","value":"pub fn set_transfer_error_interrupt_enable(&mut Self, bool)","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" Enable/disable the transfer error interrupt (teie) of the DMA stream.\n","sig":null,"attributes":[{"value":"/ Enable/disable the transfer error interrupt (teie) of the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":218154,"byte_end":218227,"line_start":154,"line_end":154,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":218405,"byte_end":218443,"line_start":158,"line_end":158,"column_start":8,"column_end":46},"name":"set_direct_mode_error_interrupt_enable","qualname":"::dma::traits::Stream::set_direct_mode_error_interrupt_enable","value":"pub fn set_direct_mode_error_interrupt_enable(&mut Self, bool)","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" Enable/disable the direct mode error interrupt (dmeie) of the DMA stream.\n","sig":null,"attributes":[{"value":"/ Enable/disable the direct mode error interrupt (dmeie) of the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":218320,"byte_end":218397,"line_start":157,"line_end":157,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1373},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":218573,"byte_end":218604,"line_start":161,"line_end":161,"column_start":8,"column_end":39},"name":"set_fifo_error_interrupt_enable","qualname":"::dma::traits::Stream::set_fifo_error_interrupt_enable","value":"pub fn set_fifo_error_interrupt_enable(&mut Self, bool)","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" Enable/disable the fifo error interrupt (feie) of the DMA stream.\n","sig":null,"attributes":[{"value":"/ Enable/disable the fifo error interrupt (feie) of the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":218496,"byte_end":218565,"line_start":160,"line_end":160,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":218719,"byte_end":218736,"line_start":164,"line_end":164,"column_start":8,"column_end":25},"name":"set_double_buffer","qualname":"::dma::traits::Stream::set_double_buffer","value":"pub fn set_double_buffer(&mut Self, bool)","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" Enable/disable the double buffer (dbm) of the DMA stream.\n","sig":null,"attributes":[{"value":"/ Enable/disable the double buffer (dbm) of the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":218650,"byte_end":218711,"line_start":163,"line_end":163,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1375},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":218838,"byte_end":218856,"line_start":167,"line_end":167,"column_start":8,"column_end":26},"name":"set_fifo_threshold","qualname":"::dma::traits::Stream::set_fifo_threshold","value":"pub fn set_fifo_threshold(&mut Self, config::FifoThreshold)","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" Set the fifo threshold (fcr.fth) of the DMA stream.\n","sig":null,"attributes":[{"value":"/ Set the fifo threshold (fcr.fth) of the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":218775,"byte_end":218830,"line_start":166,"line_end":166,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1376},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":218975,"byte_end":218990,"line_start":170,"line_end":170,"column_start":8,"column_end":23},"name":"set_fifo_enable","qualname":"::dma::traits::Stream::set_fifo_enable","value":"pub fn set_fifo_enable(&mut Self, bool)","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" Enable/disable the fifo (dmdis) of the DMA stream.\n","sig":null,"attributes":[{"value":"/ Enable/disable the fifo (dmdis) of the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":218913,"byte_end":218967,"line_start":169,"line_end":169,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1377},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":219088,"byte_end":219104,"line_start":173,"line_end":173,"column_start":8,"column_end":24},"name":"set_memory_burst","qualname":"::dma::traits::Stream::set_memory_burst","value":"pub fn set_memory_burst(&mut Self, config::BurstMode)","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" Set memory burst mode (mburst) of the DMA stream.\n","sig":null,"attributes":[{"value":"/ Set memory burst mode (mburst) of the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":219027,"byte_end":219080,"line_start":172,"line_end":172,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":219220,"byte_end":219240,"line_start":176,"line_end":176,"column_start":8,"column_end":28},"name":"set_peripheral_burst","qualname":"::dma::traits::Stream::set_peripheral_burst","value":"pub fn set_peripheral_burst(&mut Self, config::BurstMode)","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" Set peripheral burst mode (pburst) of the DMA stream.\n","sig":null,"attributes":[{"value":"/ Set peripheral burst mode (pburst) of the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":219155,"byte_end":219212,"line_start":175,"line_end":175,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":219357,"byte_end":219367,"line_start":179,"line_end":179,"column_start":8,"column_end":18},"name":"fifo_level","qualname":"::dma::traits::Stream::fifo_level","value":"pub fn fifo_level() -> FifoLevel","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" Get the current fifo level (fs) of the DMA stream.\n","sig":null,"attributes":[{"value":"/ Get the current fifo level (fs) of the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":219295,"byte_end":219349,"line_start":178,"line_end":178,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1380},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":219449,"byte_end":219463,"line_start":182,"line_end":182,"column_start":8,"column_end":22},"name":"current_buffer","qualname":"::dma::traits::Stream::current_buffer","value":"pub fn current_buffer() -> CurrentBuffer","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":" Get which buffer is currently in use by the DMA.\n","sig":null,"attributes":[{"value":"/ Get which buffer is currently in use by the DMA.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":219389,"byte_end":219441,"line_start":181,"line_end":181,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":1381},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":219516,"byte_end":219525,"line_start":186,"line_end":186,"column_start":11,"column_end":20},"name":"Direction","qualname":"::dma::traits::Direction","value":"Direction: Bits<u8>","parent":null,"children":[{"krate":0,"index":1382},{"krate":0,"index":1383}],"decl_id":null,"docs":" DMA direction.\n","sig":null,"attributes":[{"value":"/ DMA direction.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":219487,"byte_end":219505,"line_start":185,"line_end":185,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1382},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":219589,"byte_end":219592,"line_start":188,"line_end":188,"column_start":8,"column_end":11},"name":"new","qualname":"::dma::traits::Direction::new","value":"pub fn new() -> Self","parent":{"krate":0,"index":1381},"children":[],"decl_id":null,"docs":" Creates a new instance of the type.\n","sig":null,"attributes":[{"value":"/ Creates a new instance of the type.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":219542,"byte_end":219581,"line_start":187,"line_end":187,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1383},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":219660,"byte_end":219669,"line_start":191,"line_end":191,"column_start":8,"column_end":17},"name":"direction","qualname":"::dma::traits::Direction::direction","value":"pub fn direction() -> DmaDirection","parent":{"krate":0,"index":1381},"children":[],"decl_id":null,"docs":" Returns the `DmaDirection` of the type.\n","sig":null,"attributes":[{"value":"/ Returns the `DmaDirection` of the type.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":219609,"byte_end":219652,"line_start":190,"line_end":190,"column_start":5,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":1384},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":219888,"byte_end":219899,"line_start":200,"line_end":200,"column_start":18,"column_end":29},"name":"PeriAddress","qualname":"::dma::traits::PeriAddress","value":"PeriAddress","parent":null,"children":[{"krate":0,"index":1385},{"krate":0,"index":1386}],"decl_id":null,"docs":" Get an address and memory size the DMA can use.","sig":null,"attributes":[{"value":"/ Get an address and memory size the DMA can use.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":219692,"byte_end":219743,"line_start":194,"line_end":194,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":219744,"byte_end":219747,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":219748,"byte_end":219760,"line_start":196,"line_end":196,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":219761,"byte_end":219764,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ Both the memory size and the address must be correct for the specific peripheral and for the","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":219765,"byte_end":219861,"line_start":198,"line_end":198,"column_start":1,"column_end":97}},{"value":"/ DMA.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":219862,"byte_end":219870,"line_start":199,"line_end":199,"column_start":1,"column_end":9}}]},{"kind":"Type","id":{"krate":0,"index":1385},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":219950,"byte_end":219957,"line_start":202,"line_end":202,"column_start":10,"column_end":17},"name":"MemSize","qualname":"::dma::traits::PeriAddress::MemSize","value":"type MemSize;","parent":{"krate":0,"index":1384},"children":[],"decl_id":null,"docs":" Memory size of the peripheral.\n","sig":null,"attributes":[{"value":"/ Memory size of the peripheral.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":219906,"byte_end":219940,"line_start":201,"line_end":201,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1386},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":220025,"byte_end":220032,"line_start":205,"line_end":205,"column_start":8,"column_end":15},"name":"address","qualname":"::dma::traits::PeriAddress::address","value":"pub fn address(&Self) -> u32","parent":{"krate":0,"index":1384},"children":[],"decl_id":null,"docs":" Returns the address to be used by the DMA stream.\n","sig":null,"attributes":[{"value":"/ Returns the address to be used by the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":219964,"byte_end":220017,"line_start":204,"line_end":204,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":1390},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":220933,"byte_end":220949,"line_start":243,"line_end":243,"column_start":10,"column_end":26},"name":"DMARegisterBlock","qualname":"::dma::traits::DMARegisterBlock","value":"pac::dma1::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Type alias to a DMA RegisterBlock.\n","sig":null,"attributes":[{"value":"cfg(any(feature = \"stm32f411\", feature = \"stm32f413\", feature = \"stm32f423\",\nfeature = \"stm32f410\"))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":220763,"byte_end":220884,"line_start":236,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ Type alias to a DMA RegisterBlock.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":220885,"byte_end":220923,"line_start":242,"line_end":242,"column_start":1,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":1391},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":221048,"byte_end":221056,"line_start":246,"line_end":246,"column_start":11,"column_end":19},"name":"Instance","qualname":"::dma::traits::Instance","value":"Instance: Deref<Target = DMARegisterBlock> + Sealed","parent":null,"children":[{"krate":0,"index":1392}],"decl_id":null,"docs":" Trait that represents an instance of a DMA peripheral.\n","sig":null,"attributes":[{"value":"/ Trait that represents an instance of a DMA peripheral.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":220979,"byte_end":221037,"line_start":245,"line_end":245,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":221155,"byte_end":221158,"line_start":248,"line_end":248,"column_start":8,"column_end":11},"name":"ptr","qualname":"::dma::traits::Instance::ptr","value":"pub fn ptr() -> *const DMARegisterBlock","parent":{"krate":0,"index":1391},"children":[],"decl_id":null,"docs":" Gives a pointer to the RegisterBlock.\n","sig":null,"attributes":[{"value":"/ Gives a pointer to the RegisterBlock.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":221106,"byte_end":221147,"line_start":247,"line_end":247,"column_start":5,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":1398},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":221935,"byte_end":221942,"line_start":284,"line_end":284,"column_start":11,"column_end":18},"name":"Channel","qualname":"::dma::traits::Channel","value":"Channel","parent":null,"children":[],"decl_id":null,"docs":" A channel that can be configured on a DMA stream.\n","sig":null,"attributes":[{"value":"/ A channel that can be configured on a DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":221871,"byte_end":221924,"line_start":283,"line_end":283,"column_start":1,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":1399},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":222171,"byte_end":222177,"line_start":291,"line_end":291,"column_start":18,"column_end":24},"name":"DMASet","qualname":"::dma::traits::DMASet","value":"DMASet<STREAM, DIRECTION, const CHANNEL: u8>","parent":null,"children":[],"decl_id":null,"docs":" Trait to mark a set of Stream, Channel and Direction for a Peripheral as correct together.","sig":null,"attributes":[{"value":"/ Trait to mark a set of Stream, Channel and Direction for a Peripheral as correct together.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":221947,"byte_end":222041,"line_start":286,"line_end":286,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":222042,"byte_end":222045,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":222046,"byte_end":222058,"line_start":288,"line_end":288,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":222059,"byte_end":222062,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ Memory corruption might occur if this trait is implemented for an invalid combination.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":222063,"byte_end":222153,"line_start":290,"line_end":290,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":4522},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":222234,"byte_end":222238,"line_start":293,"line_end":293,"column_start":15,"column_end":19},"name":"CCR1","qualname":"::dma::traits::CCR1","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper type that indicates which register of the contained timer to use for DMA.\n","sig":null,"attributes":[{"value":"/ Wrapper type that indicates which register of the contained timer to use for DMA.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":221513,"byte_end":221598,"line_start":268,"line_end":268,"column_start":13,"column_end":98}}]},{"kind":"Struct","id":{"krate":0,"index":4530},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":222240,"byte_end":222244,"line_start":293,"line_end":293,"column_start":21,"column_end":25},"name":"CCR2","qualname":"::dma::traits::CCR2","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper type that indicates which register of the contained timer to use for DMA.\n","sig":null,"attributes":[{"value":"/ Wrapper type that indicates which register of the contained timer to use for DMA.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":221513,"byte_end":221598,"line_start":268,"line_end":268,"column_start":13,"column_end":98}}]},{"kind":"Struct","id":{"krate":0,"index":4538},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":222246,"byte_end":222250,"line_start":293,"line_end":293,"column_start":27,"column_end":31},"name":"CCR3","qualname":"::dma::traits::CCR3","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper type that indicates which register of the contained timer to use for DMA.\n","sig":null,"attributes":[{"value":"/ Wrapper type that indicates which register of the contained timer to use for DMA.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":221513,"byte_end":221598,"line_start":268,"line_end":268,"column_start":13,"column_end":98}}]},{"kind":"Struct","id":{"krate":0,"index":4546},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":222252,"byte_end":222256,"line_start":293,"line_end":293,"column_start":33,"column_end":37},"name":"CCR4","qualname":"::dma::traits::CCR4","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper type that indicates which register of the contained timer to use for DMA.\n","sig":null,"attributes":[{"value":"/ Wrapper type that indicates which register of the contained timer to use for DMA.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":221513,"byte_end":221598,"line_start":268,"line_end":268,"column_start":13,"column_end":98}}]},{"kind":"Struct","id":{"krate":0,"index":4554},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":222258,"byte_end":222262,"line_start":293,"line_end":293,"column_start":39,"column_end":43},"name":"DMAR","qualname":"::dma::traits::DMAR","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper type that indicates which register of the contained timer to use for DMA.\n","sig":null,"attributes":[{"value":"/ Wrapper type that indicates which register of the contained timer to use for DMA.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":221513,"byte_end":221598,"line_start":268,"line_end":268,"column_start":13,"column_end":98}}]},{"kind":"Struct","id":{"krate":0,"index":4562},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":222264,"byte_end":222267,"line_start":293,"line_end":293,"column_start":45,"column_end":48},"name":"ARR","qualname":"::dma::traits::ARR","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper type that indicates which register of the contained timer to use for DMA.\n","sig":null,"attributes":[{"value":"/ Wrapper type that indicates which register of the contained timer to use for DMA.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":221513,"byte_end":221598,"line_start":268,"line_end":268,"column_start":13,"column_end":98}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4997},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":157526,"byte_end":157534,"line_start":33,"line_end":33,"column_start":5,"column_end":13},"name":"NotReady","qualname":"::dma::DMAError::NotReady","value":"DMAError::NotReady(T)","parent":{"krate":0,"index":4995},"children":[],"decl_id":null,"docs":" DMA not ready to change buffers.\n","sig":null,"attributes":[{"value":"/ DMA not ready to change buffers.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":157485,"byte_end":157521,"line_start":32,"line_end":32,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5000},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":157625,"byte_end":157636,"line_start":35,"line_end":35,"column_start":5,"column_end":16},"name":"SmallBuffer","qualname":"::dma::DMAError::SmallBuffer","value":"DMAError::SmallBuffer(T)","parent":{"krate":0,"index":4995},"children":[],"decl_id":null,"docs":" The user provided a buffer that is not big enough while double buffering.\n","sig":null,"attributes":[{"value":"/ The user provided a buffer that is not big enough while double buffering.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":157543,"byte_end":157620,"line_start":34,"line_end":34,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5003},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":157709,"byte_end":157716,"line_start":37,"line_end":37,"column_start":5,"column_end":12},"name":"Overrun","qualname":"::dma::DMAError::Overrun","value":"DMAError::Overrun(T)","parent":{"krate":0,"index":4995},"children":[],"decl_id":null,"docs":" Overrun during a double buffering or circular transfer.\n","sig":null,"attributes":[{"value":"/ Overrun during a double buffering or circular transfer.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":157645,"byte_end":157704,"line_start":36,"line_end":36,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":4995},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":157467,"byte_end":157475,"line_start":31,"line_end":31,"column_start":10,"column_end":18},"name":"DMAError","qualname":"::dma::DMAError","value":"pub enum DMAError<T> { NotReady(T), SmallBuffer(T), Overrun(T), }","parent":null,"children":[{"krate":0,"index":4997},{"krate":0,"index":5000},{"krate":0,"index":5003}],"decl_id":null,"docs":" Errors.\n","sig":null,"attributes":[{"value":"/ Errors.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":157425,"byte_end":157436,"line_start":29,"line_end":29,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5013},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":158470,"byte_end":158484,"line_start":57,"line_end":57,"column_start":5,"column_end":19},"name":"MemoryToMemory","qualname":"::dma::DmaDirection::MemoryToMemory","value":"DmaDirection::MemoryToMemory","parent":{"krate":0,"index":5012},"children":[],"decl_id":null,"docs":" Memory to Memory transfer.\n","sig":null,"attributes":[{"value":"/ Memory to Memory transfer.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":158435,"byte_end":158465,"line_start":56,"line_end":56,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5015},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":158529,"byte_end":158547,"line_start":59,"line_end":59,"column_start":5,"column_end":23},"name":"PeripheralToMemory","qualname":"::dma::DmaDirection::PeripheralToMemory","value":"DmaDirection::PeripheralToMemory","parent":{"krate":0,"index":5012},"children":[],"decl_id":null,"docs":" Peripheral to Memory transfer.\n","sig":null,"attributes":[{"value":"/ Peripheral to Memory transfer.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":158490,"byte_end":158524,"line_start":58,"line_end":58,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5017},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":158592,"byte_end":158610,"line_start":61,"line_end":61,"column_start":5,"column_end":23},"name":"MemoryToPeripheral","qualname":"::dma::DmaDirection::MemoryToPeripheral","value":"DmaDirection::MemoryToPeripheral","parent":{"krate":0,"index":5012},"children":[],"decl_id":null,"docs":" Memory to Peripheral transfer.\n","sig":null,"attributes":[{"value":"/ Memory to Peripheral transfer.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":158553,"byte_end":158587,"line_start":60,"line_end":60,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":5012},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":158416,"byte_end":158428,"line_start":55,"line_end":55,"column_start":10,"column_end":22},"name":"DmaDirection","qualname":"::dma::DmaDirection","value":"pub enum DmaDirection {\n    MemoryToMemory,\n    PeripheralToMemory,\n    MemoryToPeripheral,\n}","parent":null,"children":[{"krate":0,"index":5013},{"krate":0,"index":5015},{"krate":0,"index":5017}],"decl_id":null,"docs":" Possible DMA's directions.\n","sig":null,"attributes":[{"value":"/ Possible DMA's directions.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":158335,"byte_end":158365,"line_start":53,"line_end":53,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":5027},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":158704,"byte_end":158722,"line_start":66,"line_end":66,"column_start":12,"column_end":30},"name":"PeripheralToMemory","qualname":"::dma::PeripheralToMemory","value":"","parent":null,"children":[],"decl_id":null,"docs":" DMA from a peripheral to a memory location.\n","sig":null,"attributes":[{"value":"/ DMA from a peripheral to a memory location.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":158615,"byte_end":158662,"line_start":64,"line_end":64,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":5034},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":159138,"byte_end":159152,"line_start":87,"line_end":87,"column_start":12,"column_end":26},"name":"MemoryToMemory","qualname":"::dma::MemoryToMemory","value":"MemoryToMemory {  }","parent":null,"children":[{"krate":0,"index":5036}],"decl_id":null,"docs":" DMA from one memory location to another memory location.\n","sig":null,"attributes":[{"value":"/ DMA from one memory location to another memory location.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":159036,"byte_end":159096,"line_start":85,"line_end":85,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":5045},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":159597,"byte_end":159615,"line_start":110,"line_end":110,"column_start":12,"column_end":30},"name":"MemoryToPeripheral","qualname":"::dma::MemoryToPeripheral","value":"","parent":null,"children":[],"decl_id":null,"docs":" DMA from a memory location to a peripheral.\n","sig":null,"attributes":[{"value":"/ DMA from a memory location to a peripheral.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":159508,"byte_end":159555,"line_start":108,"line_end":108,"column_start":1,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5053},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":160446,"byte_end":160461,"line_start":153,"line_end":153,"column_start":5,"column_end":20},"name":"GtZeroLtQuarter","qualname":"::dma::FifoLevel::GtZeroLtQuarter","value":"FifoLevel::GtZeroLtQuarter","parent":{"krate":0,"index":5052},"children":[],"decl_id":null,"docs":" 0 < fifo_level < 1/4.\n","sig":null,"attributes":[{"value":"/ 0 < fifo_level < 1/4.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":160416,"byte_end":160441,"line_start":152,"line_end":152,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5055},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":160500,"byte_end":160516,"line_start":155,"line_end":155,"column_start":5,"column_end":21},"name":"GteQuarterLtHalf","qualname":"::dma::FifoLevel::GteQuarterLtHalf","value":"FifoLevel::GteQuarterLtHalf","parent":{"krate":0,"index":5052},"children":[],"decl_id":null,"docs":" 1/4 <= fifo_level < 1/2.\n","sig":null,"attributes":[{"value":"/ 1/4 <= fifo_level < 1/2.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":160467,"byte_end":160495,"line_start":154,"line_end":154,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5057},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":160555,"byte_end":160576,"line_start":157,"line_end":157,"column_start":5,"column_end":26},"name":"GteHalfLtThreeQuarter","qualname":"::dma::FifoLevel::GteHalfLtThreeQuarter","value":"FifoLevel::GteHalfLtThreeQuarter","parent":{"krate":0,"index":5052},"children":[],"decl_id":null,"docs":" 1/2 <= fifo_level < 3/4.\n","sig":null,"attributes":[{"value":"/ 1/2 <= fifo_level < 3/4.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":160522,"byte_end":160550,"line_start":156,"line_end":156,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5059},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":160616,"byte_end":160637,"line_start":159,"line_end":159,"column_start":5,"column_end":26},"name":"GteThreeQuarterLtFull","qualname":"::dma::FifoLevel::GteThreeQuarterLtFull","value":"FifoLevel::GteThreeQuarterLtFull","parent":{"krate":0,"index":5052},"children":[],"decl_id":null,"docs":" 3/4 <= fifo_level < full.\n","sig":null,"attributes":[{"value":"/ 3/4 <= fifo_level < full.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":160582,"byte_end":160611,"line_start":158,"line_end":158,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5061},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":160666,"byte_end":160671,"line_start":161,"line_end":161,"column_start":5,"column_end":10},"name":"Empty","qualname":"::dma::FifoLevel::Empty","value":"FifoLevel::Empty","parent":{"krate":0,"index":5052},"children":[],"decl_id":null,"docs":" Fifo is empty.\n","sig":null,"attributes":[{"value":"/ Fifo is empty.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":160643,"byte_end":160661,"line_start":160,"line_end":160,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5063},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":160699,"byte_end":160703,"line_start":163,"line_end":163,"column_start":5,"column_end":9},"name":"Full","qualname":"::dma::FifoLevel::Full","value":"FifoLevel::Full","parent":{"krate":0,"index":5052},"children":[],"decl_id":null,"docs":" Fifo is full.\n","sig":null,"attributes":[{"value":"/ Fifo is full.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":160677,"byte_end":160694,"line_start":162,"line_end":162,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5065},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":160732,"byte_end":160739,"line_start":165,"line_end":165,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::dma::FifoLevel::Invalid","value":"FifoLevel::Invalid","parent":{"krate":0,"index":5052},"children":[],"decl_id":null,"docs":" Invalid value.\n","sig":null,"attributes":[{"value":"/ Invalid value.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":160709,"byte_end":160727,"line_start":164,"line_end":164,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":5052},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":160400,"byte_end":160409,"line_start":151,"line_end":151,"column_start":10,"column_end":19},"name":"FifoLevel","qualname":"::dma::FifoLevel","value":"pub enum FifoLevel {\n    GtZeroLtQuarter,\n    GteQuarterLtHalf,\n    GteHalfLtThreeQuarter,\n    GteThreeQuarterLtFull,\n    Empty,\n    Full,\n    Invalid,\n}","parent":null,"children":[{"krate":0,"index":5053},{"krate":0,"index":5055},{"krate":0,"index":5057},{"krate":0,"index":5059},{"krate":0,"index":5061},{"krate":0,"index":5063},{"krate":0,"index":5065}],"decl_id":null,"docs":" How full the DMA stream's fifo is.\n","sig":null,"attributes":[{"value":"/ How full the DMA stream's fifo is.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":160322,"byte_end":160360,"line_start":149,"line_end":149,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5073},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":161292,"byte_end":161303,"line_start":186,"line_end":186,"column_start":5,"column_end":16},"name":"FirstBuffer","qualname":"::dma::CurrentBuffer::FirstBuffer","value":"CurrentBuffer::FirstBuffer","parent":{"krate":0,"index":5072},"children":[],"decl_id":null,"docs":" The first buffer (m0ar) is in use.\n","sig":null,"attributes":[{"value":"/ The first buffer (m0ar) is in use.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":161249,"byte_end":161287,"line_start":185,"line_end":185,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5075},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":161353,"byte_end":161365,"line_start":188,"line_end":188,"column_start":5,"column_end":17},"name":"DoubleBuffer","qualname":"::dma::CurrentBuffer::DoubleBuffer","value":"CurrentBuffer::DoubleBuffer","parent":{"krate":0,"index":5072},"children":[],"decl_id":null,"docs":" The second buffer (m1ar) is in use.\n","sig":null,"attributes":[{"value":"/ The second buffer (m1ar) is in use.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":161309,"byte_end":161348,"line_start":187,"line_end":187,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":5072},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":161229,"byte_end":161242,"line_start":184,"line_end":184,"column_start":10,"column_end":23},"name":"CurrentBuffer","qualname":"::dma::CurrentBuffer","value":"pub enum CurrentBuffer { FirstBuffer, DoubleBuffer, }","parent":null,"children":[{"krate":0,"index":5073},{"krate":0,"index":5075}],"decl_id":null,"docs":" Which DMA buffer is in use.\n","sig":null,"attributes":[{"value":"/ Which DMA buffer is in use.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":161147,"byte_end":161178,"line_start":182,"line_end":182,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1467},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":161676,"byte_end":161683,"line_start":204,"line_end":204,"column_start":12,"column_end":19},"name":"StreamX","qualname":"::dma::StreamX","value":"StreamX {  }","parent":null,"children":[{"krate":0,"index":1470}],"decl_id":null,"docs":" Stream on the DMA controller.\n","sig":null,"attributes":[{"value":"/ Stream on the DMA controller.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":161631,"byte_end":161664,"line_start":203,"line_end":203,"column_start":1,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":1479},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":162465,"byte_end":162472,"line_start":238,"line_end":238,"column_start":10,"column_end":17},"name":"Stream0","qualname":"::dma::Stream0","value":"StreamX<DMA, >","parent":null,"children":[],"decl_id":null,"docs":" Stream 0 on the DMA controller.\n","sig":null,"attributes":[{"value":"/ Stream 0 on the DMA controller.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":162420,"byte_end":162455,"line_start":237,"line_end":237,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":1482},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":162542,"byte_end":162549,"line_start":240,"line_end":240,"column_start":10,"column_end":17},"name":"Stream1","qualname":"::dma::Stream1","value":"StreamX<DMA, >","parent":null,"children":[],"decl_id":null,"docs":" Stream 1 on the DMA controller.\n","sig":null,"attributes":[{"value":"/ Stream 1 on the DMA controller.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":162497,"byte_end":162532,"line_start":239,"line_end":239,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":1485},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":162619,"byte_end":162626,"line_start":242,"line_end":242,"column_start":10,"column_end":17},"name":"Stream2","qualname":"::dma::Stream2","value":"StreamX<DMA, >","parent":null,"children":[],"decl_id":null,"docs":" Stream 2 on the DMA controller.\n","sig":null,"attributes":[{"value":"/ Stream 2 on the DMA controller.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":162574,"byte_end":162609,"line_start":241,"line_end":241,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":1488},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":162696,"byte_end":162703,"line_start":244,"line_end":244,"column_start":10,"column_end":17},"name":"Stream3","qualname":"::dma::Stream3","value":"StreamX<DMA, >","parent":null,"children":[],"decl_id":null,"docs":" Stream 3 on the DMA controller.\n","sig":null,"attributes":[{"value":"/ Stream 3 on the DMA controller.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":162651,"byte_end":162686,"line_start":243,"line_end":243,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":1491},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":162773,"byte_end":162780,"line_start":246,"line_end":246,"column_start":10,"column_end":17},"name":"Stream4","qualname":"::dma::Stream4","value":"StreamX<DMA, >","parent":null,"children":[],"decl_id":null,"docs":" Stream 4 on the DMA controller.\n","sig":null,"attributes":[{"value":"/ Stream 4 on the DMA controller.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":162728,"byte_end":162763,"line_start":245,"line_end":245,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":1494},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":162850,"byte_end":162857,"line_start":248,"line_end":248,"column_start":10,"column_end":17},"name":"Stream5","qualname":"::dma::Stream5","value":"StreamX<DMA, >","parent":null,"children":[],"decl_id":null,"docs":" Stream 5 on the DMA controller.\n","sig":null,"attributes":[{"value":"/ Stream 5 on the DMA controller.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":162805,"byte_end":162840,"line_start":247,"line_end":247,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":1497},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":162927,"byte_end":162934,"line_start":250,"line_end":250,"column_start":10,"column_end":17},"name":"Stream6","qualname":"::dma::Stream6","value":"StreamX<DMA, >","parent":null,"children":[],"decl_id":null,"docs":" Stream 6 on the DMA controller.\n","sig":null,"attributes":[{"value":"/ Stream 6 on the DMA controller.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":162882,"byte_end":162917,"line_start":249,"line_end":249,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":1500},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":163004,"byte_end":163011,"line_start":252,"line_end":252,"column_start":10,"column_end":17},"name":"Stream7","qualname":"::dma::Stream7","value":"StreamX<DMA, >","parent":null,"children":[],"decl_id":null,"docs":" Stream 7 on the DMA controller.\n","sig":null,"attributes":[{"value":"/ Stream 7 on the DMA controller.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":162959,"byte_end":162994,"line_start":251,"line_end":251,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":1527},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":163413,"byte_end":163425,"line_start":264,"line_end":264,"column_start":12,"column_end":24},"name":"StreamsTuple","qualname":"::dma::StreamsTuple","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alias for a tuple with all DMA streams.\n","sig":null,"attributes":[{"value":"/ Alias for a tuple with all DMA streams.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":163358,"byte_end":163401,"line_start":263,"line_end":263,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1530},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":163436,"byte_end":163455,"line_start":265,"line_end":265,"column_start":5,"column_end":24},"name":"0","qualname":"::dma::StreamsTuple::0","value":"dma::StreamX<DMA, 0_u8>","parent":{"krate":0,"index":1527},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1532},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":163461,"byte_end":163480,"line_start":266,"line_end":266,"column_start":5,"column_end":24},"name":"1","qualname":"::dma::StreamsTuple::1","value":"dma::StreamX<DMA, 1_u8>","parent":{"krate":0,"index":1527},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1534},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":163486,"byte_end":163505,"line_start":267,"line_end":267,"column_start":5,"column_end":24},"name":"2","qualname":"::dma::StreamsTuple::2","value":"dma::StreamX<DMA, 2_u8>","parent":{"krate":0,"index":1527},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1536},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":163511,"byte_end":163530,"line_start":268,"line_end":268,"column_start":5,"column_end":24},"name":"3","qualname":"::dma::StreamsTuple::3","value":"dma::StreamX<DMA, 3_u8>","parent":{"krate":0,"index":1527},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1538},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":163536,"byte_end":163555,"line_start":269,"line_end":269,"column_start":5,"column_end":24},"name":"4","qualname":"::dma::StreamsTuple::4","value":"dma::StreamX<DMA, 4_u8>","parent":{"krate":0,"index":1527},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1540},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":163561,"byte_end":163580,"line_start":270,"line_end":270,"column_start":5,"column_end":24},"name":"5","qualname":"::dma::StreamsTuple::5","value":"dma::StreamX<DMA, 5_u8>","parent":{"krate":0,"index":1527},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1542},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":163586,"byte_end":163605,"line_start":271,"line_end":271,"column_start":5,"column_end":24},"name":"6","qualname":"::dma::StreamsTuple::6","value":"dma::StreamX<DMA, 6_u8>","parent":{"krate":0,"index":1527},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1544},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":163611,"byte_end":163630,"line_start":272,"line_end":272,"column_start":5,"column_end":24},"name":"7","qualname":"::dma::StreamsTuple::7","value":"dma::StreamX<DMA, 7_u8>","parent":{"krate":0,"index":1527},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":163751,"byte_end":163754,"line_start":277,"line_end":277,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamsTuple<DMA>>::new","value":"pub fn new(DMA) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Splits the DMA peripheral into streams.\n","sig":null,"attributes":[{"value":"/ Splits the DMA peripheral into streams.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":163696,"byte_end":163739,"line_start":276,"line_end":276,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":5245},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":176497,"byte_end":176505,"line_start":647,"line_end":647,"column_start":12,"column_end":20},"name":"ChannelX","qualname":"::dma::ChannelX","value":"","parent":null,"children":[],"decl_id":null,"docs":" A Channel that can be configured on a DMA stream.\n","sig":null,"attributes":[{"value":"/ A Channel that can be configured on a DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":176402,"byte_end":176455,"line_start":645,"line_end":645,"column_start":1,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":5262},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":176747,"byte_end":176755,"line_start":659,"line_end":659,"column_start":6,"column_end":14},"name":"Channel0","qualname":"::dma::Channel0","value":"ChannelX<>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5266},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":176766,"byte_end":176774,"line_start":660,"line_end":660,"column_start":6,"column_end":14},"name":"Channel1","qualname":"::dma::Channel1","value":"ChannelX<>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5270},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":176785,"byte_end":176793,"line_start":661,"line_end":661,"column_start":6,"column_end":14},"name":"Channel2","qualname":"::dma::Channel2","value":"ChannelX<>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5274},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":176804,"byte_end":176812,"line_start":662,"line_end":662,"column_start":6,"column_end":14},"name":"Channel3","qualname":"::dma::Channel3","value":"ChannelX<>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5278},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":176823,"byte_end":176831,"line_start":663,"line_end":663,"column_start":6,"column_end":14},"name":"Channel4","qualname":"::dma::Channel4","value":"ChannelX<>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5282},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":176842,"byte_end":176850,"line_start":664,"line_end":664,"column_start":6,"column_end":14},"name":"Channel5","qualname":"::dma::Channel5","value":"ChannelX<>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5286},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":176861,"byte_end":176869,"line_start":665,"line_end":665,"column_start":6,"column_end":14},"name":"Channel6","qualname":"::dma::Channel6","value":"ChannelX<>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5290},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":176880,"byte_end":176888,"line_start":666,"line_end":666,"column_start":6,"column_end":14},"name":"Channel7","qualname":"::dma::Channel7","value":"ChannelX<>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1612},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":177059,"byte_end":177065,"line_start":673,"line_end":673,"column_start":9,"column_end":15},"name":"config","qualname":"::dma::config","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","parent":null,"children":[{"krate":0,"index":1613},{"krate":0,"index":5292},{"krate":0,"index":5301},{"krate":0,"index":5303},{"krate":0,"index":5305},{"krate":0,"index":1616},{"krate":0,"index":5306},{"krate":0,"index":5315},{"krate":0,"index":5317},{"krate":0,"index":5319},{"krate":0,"index":1618},{"krate":0,"index":5320},{"krate":0,"index":5329},{"krate":0,"index":5331},{"krate":0,"index":5333},{"krate":0,"index":1620},{"krate":0,"index":5334},{"krate":0,"index":5348},{"krate":0,"index":5350},{"krate":0,"index":5352},{"krate":0,"index":1622},{"krate":0,"index":1624}],"decl_id":null,"docs":" Contains types related to DMA configuration.\n","sig":null,"attributes":[{"value":"/ Contains types related to DMA configuration.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":177002,"byte_end":177050,"line_start":672,"line_end":672,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5293},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":177451,"byte_end":177454,"line_start":682,"line_end":682,"column_start":9,"column_end":12},"name":"Low","qualname":"::dma::config::Priority::Low","value":"Priority::Low","parent":{"krate":0,"index":5292},"children":[],"decl_id":null,"docs":" Low priority.\n","sig":null,"attributes":[{"value":"/ Low priority.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":177425,"byte_end":177442,"line_start":681,"line_end":681,"column_start":9,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5295},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":177493,"byte_end":177499,"line_start":684,"line_end":684,"column_start":9,"column_end":15},"name":"Medium","qualname":"::dma::config::Priority::Medium","value":"Priority::Medium","parent":{"krate":0,"index":5292},"children":[],"decl_id":null,"docs":" Medium priority.\n","sig":null,"attributes":[{"value":"/ Medium priority.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":177464,"byte_end":177484,"line_start":683,"line_end":683,"column_start":9,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5297},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":177536,"byte_end":177540,"line_start":686,"line_end":686,"column_start":9,"column_end":13},"name":"High","qualname":"::dma::config::Priority::High","value":"Priority::High","parent":{"krate":0,"index":5292},"children":[],"decl_id":null,"docs":" High priority.\n","sig":null,"attributes":[{"value":"/ High priority.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":177509,"byte_end":177527,"line_start":685,"line_end":685,"column_start":9,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5299},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":177582,"byte_end":177590,"line_start":688,"line_end":688,"column_start":9,"column_end":17},"name":"VeryHigh","qualname":"::dma::config::Priority::VeryHigh","value":"Priority::VeryHigh","parent":{"krate":0,"index":5292},"children":[],"decl_id":null,"docs":" Very high priority.\n","sig":null,"attributes":[{"value":"/ Very high priority.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":177550,"byte_end":177573,"line_start":687,"line_end":687,"column_start":9,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":5292},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":177406,"byte_end":177414,"line_start":680,"line_end":680,"column_start":14,"column_end":22},"name":"Priority","qualname":"::dma::config::Priority","value":"pub enum Priority { Low, Medium, High, VeryHigh, }","parent":null,"children":[{"krate":0,"index":5293},{"krate":0,"index":5295},{"krate":0,"index":5297},{"krate":0,"index":5299}],"decl_id":null,"docs":" Priority of the DMA stream, defaults to `Medium`. If two requests have the same software\n priority level, the stream with the lower number takes priority over the stream with the\n higher number. For example, Stream 2 takes priority over Stream 4.\n","sig":null,"attributes":[{"value":"/ Priority of the DMA stream, defaults to `Medium`. If two requests have the same software","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":177094,"byte_end":177186,"line_start":676,"line_end":676,"column_start":5,"column_end":97}},{"value":"/ priority level, the stream with the lower number takes priority over the stream with the","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":177191,"byte_end":177283,"line_start":677,"line_end":677,"column_start":5,"column_end":97}},{"value":"/ higher number. For example, Stream 2 takes priority over Stream 4.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":177288,"byte_end":177358,"line_start":678,"line_end":678,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5307},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":178037,"byte_end":178048,"line_start":706,"line_end":706,"column_start":9,"column_end":20},"name":"QuarterFull","qualname":"::dma::config::FifoThreshold::QuarterFull","value":"FifoThreshold::QuarterFull","parent":{"krate":0,"index":5306},"children":[],"decl_id":null,"docs":" 1/4 full.\n","sig":null,"attributes":[{"value":"/ 1/4 full.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":178015,"byte_end":178028,"line_start":705,"line_end":705,"column_start":9,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5309},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":178080,"byte_end":178088,"line_start":708,"line_end":708,"column_start":9,"column_end":17},"name":"HalfFull","qualname":"::dma::config::FifoThreshold::HalfFull","value":"FifoThreshold::HalfFull","parent":{"krate":0,"index":5306},"children":[],"decl_id":null,"docs":" 1/2 full.\n","sig":null,"attributes":[{"value":"/ 1/2 full.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":178058,"byte_end":178071,"line_start":707,"line_end":707,"column_start":9,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5311},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":178120,"byte_end":178136,"line_start":710,"line_end":710,"column_start":9,"column_end":25},"name":"ThreeQuarterFull","qualname":"::dma::config::FifoThreshold::ThreeQuarterFull","value":"FifoThreshold::ThreeQuarterFull","parent":{"krate":0,"index":5306},"children":[],"decl_id":null,"docs":" 3/4 full.\n","sig":null,"attributes":[{"value":"/ 3/4 full.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":178098,"byte_end":178111,"line_start":709,"line_end":709,"column_start":9,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5313},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":178164,"byte_end":178168,"line_start":712,"line_end":712,"column_start":9,"column_end":13},"name":"Full","qualname":"::dma::config::FifoThreshold::Full","value":"FifoThreshold::Full","parent":{"krate":0,"index":5306},"children":[],"decl_id":null,"docs":" Full.\n","sig":null,"attributes":[{"value":"/ Full.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":178146,"byte_end":178155,"line_start":711,"line_end":711,"column_start":9,"column_end":18}}]},{"kind":"Enum","id":{"krate":0,"index":5306},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":177991,"byte_end":178004,"line_start":704,"line_end":704,"column_start":14,"column_end":27},"name":"FifoThreshold","qualname":"::dma::config::FifoThreshold","value":"pub enum FifoThreshold { QuarterFull, HalfFull, ThreeQuarterFull, Full, }","parent":null,"children":[{"krate":0,"index":5307},{"krate":0,"index":5309},{"krate":0,"index":5311},{"krate":0,"index":5313}],"decl_id":null,"docs":" The level to fill the fifo to before performing the transaction.\n","sig":null,"attributes":[{"value":"/ The level to fill the fifo to before performing the transaction.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":177875,"byte_end":177943,"line_start":702,"line_end":702,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5321},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":178699,"byte_end":178706,"line_start":730,"line_end":730,"column_start":9,"column_end":16},"name":"NoBurst","qualname":"::dma::config::BurstMode::NoBurst","value":"BurstMode::NoBurst","parent":{"krate":0,"index":5320},"children":[],"decl_id":null,"docs":" Single transfer, no burst.\n","sig":null,"attributes":[{"value":"/ Single transfer, no burst.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":178660,"byte_end":178690,"line_start":729,"line_end":729,"column_start":9,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5323},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":178755,"byte_end":178761,"line_start":732,"line_end":732,"column_start":9,"column_end":15},"name":"Burst4","qualname":"::dma::config::BurstMode::Burst4","value":"BurstMode::Burst4","parent":{"krate":0,"index":5320},"children":[],"decl_id":null,"docs":" Burst transfer of 4 beats.\n","sig":null,"attributes":[{"value":"/ Burst transfer of 4 beats.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":178716,"byte_end":178746,"line_start":731,"line_end":731,"column_start":9,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5325},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":178810,"byte_end":178816,"line_start":734,"line_end":734,"column_start":9,"column_end":15},"name":"Burst8","qualname":"::dma::config::BurstMode::Burst8","value":"BurstMode::Burst8","parent":{"krate":0,"index":5320},"children":[],"decl_id":null,"docs":" Burst transfer of 8 beats.\n","sig":null,"attributes":[{"value":"/ Burst transfer of 8 beats.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":178771,"byte_end":178801,"line_start":733,"line_end":733,"column_start":9,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5327},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":178866,"byte_end":178873,"line_start":736,"line_end":736,"column_start":9,"column_end":16},"name":"Burst16","qualname":"::dma::config::BurstMode::Burst16","value":"BurstMode::Burst16","parent":{"krate":0,"index":5320},"children":[],"decl_id":null,"docs":" Burst transfer of 16 beats.\n","sig":null,"attributes":[{"value":"/ Burst transfer of 16 beats.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":178826,"byte_end":178857,"line_start":735,"line_end":735,"column_start":9,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":5320},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":178640,"byte_end":178649,"line_start":728,"line_end":728,"column_start":14,"column_end":23},"name":"BurstMode","qualname":"::dma::config::BurstMode","value":"pub enum BurstMode { NoBurst, Burst4, Burst8, Burst16, }","parent":null,"children":[{"krate":0,"index":5321},{"krate":0,"index":5323},{"krate":0,"index":5325},{"krate":0,"index":5327}],"decl_id":null,"docs":" How burst transfers are done, requires fifo enabled. Check datasheet for valid combinations.\n","sig":null,"attributes":[{"value":"/ How burst transfers are done, requires fifo enabled. Check datasheet for valid combinations.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":178496,"byte_end":178592,"line_start":726,"line_end":726,"column_start":5,"column_end":101}}]},{"kind":"Struct","id":{"krate":0,"index":5334},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":179282,"byte_end":179291,"line_start":752,"line_end":752,"column_start":16,"column_end":25},"name":"DmaConfig","qualname":"::dma::config::DmaConfig","value":"DmaConfig {  }","parent":null,"children":[{"krate":0,"index":5335},{"krate":0,"index":5336},{"krate":0,"index":5337},{"krate":0,"index":5338},{"krate":0,"index":5339},{"krate":0,"index":5340},{"krate":0,"index":5341},{"krate":0,"index":5342},{"krate":0,"index":5343},{"krate":0,"index":5344},{"krate":0,"index":5345},{"krate":0,"index":5346},{"krate":0,"index":5347}],"decl_id":null,"docs":" Contains the complete set of configuration for a DMA stream.\n","sig":null,"attributes":[{"value":"/ Contains the complete set of configuration for a DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":179168,"byte_end":179232,"line_start":750,"line_end":750,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1625},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":180726,"byte_end":180734,"line_start":791,"line_end":791,"column_start":16,"column_end":24},"name":"priority","qualname":"<DmaConfig>::priority","value":"pub fn priority(Self, Priority) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the priority.\n","sig":null,"attributes":[{"value":"/ Set the priority.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":180663,"byte_end":180684,"line_start":789,"line_end":789,"column_start":9,"column_end":30}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":180693,"byte_end":180710,"line_start":790,"line_end":790,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1626},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":180920,"byte_end":180936,"line_start":798,"line_end":798,"column_start":16,"column_end":32},"name":"memory_increment","qualname":"<DmaConfig>::memory_increment","value":"pub fn memory_increment(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the memory_increment.\n","sig":null,"attributes":[{"value":"/ Set the memory_increment.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":180849,"byte_end":180878,"line_start":796,"line_end":796,"column_start":9,"column_end":38}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":180887,"byte_end":180904,"line_start":797,"line_end":797,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1627},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":181145,"byte_end":181165,"line_start":804,"line_end":804,"column_start":16,"column_end":36},"name":"peripheral_increment","qualname":"<DmaConfig>::peripheral_increment","value":"pub fn peripheral_increment(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the peripheral_increment.\n","sig":null,"attributes":[{"value":"/ Set the peripheral_increment.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":181070,"byte_end":181103,"line_start":802,"line_end":802,"column_start":9,"column_end":42}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":181112,"byte_end":181129,"line_start":803,"line_end":803,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1628},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":181393,"byte_end":181420,"line_start":810,"line_end":810,"column_start":16,"column_end":43},"name":"transfer_complete_interrupt","qualname":"<DmaConfig>::transfer_complete_interrupt","value":"pub fn transfer_complete_interrupt(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the transfer_complete_interrupt.\n","sig":null,"attributes":[{"value":"/ Set the transfer_complete_interrupt.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":181311,"byte_end":181351,"line_start":808,"line_end":808,"column_start":9,"column_end":49}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":181360,"byte_end":181377,"line_start":809,"line_end":809,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1629},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":181665,"byte_end":181688,"line_start":816,"line_end":816,"column_start":16,"column_end":39},"name":"half_transfer_interrupt","qualname":"<DmaConfig>::half_transfer_interrupt","value":"pub fn half_transfer_interrupt(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the half_transfer_interrupt.\n","sig":null,"attributes":[{"value":"/ Set the half_transfer_interrupt.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":181587,"byte_end":181623,"line_start":814,"line_end":814,"column_start":9,"column_end":45}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":181632,"byte_end":181649,"line_start":815,"line_end":815,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1630},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":181922,"byte_end":181946,"line_start":822,"line_end":822,"column_start":16,"column_end":40},"name":"transfer_error_interrupt","qualname":"<DmaConfig>::transfer_error_interrupt","value":"pub fn transfer_error_interrupt(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the transfer_error_interrupt.\n","sig":null,"attributes":[{"value":"/ Set the transfer_error_interrupt.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":181843,"byte_end":181880,"line_start":820,"line_end":820,"column_start":9,"column_end":46}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":181889,"byte_end":181906,"line_start":821,"line_end":821,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1631},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":182186,"byte_end":182213,"line_start":828,"line_end":828,"column_start":16,"column_end":43},"name":"direct_mode_error_interrupt","qualname":"<DmaConfig>::direct_mode_error_interrupt","value":"pub fn direct_mode_error_interrupt(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the direct_mode_error_interrupt.\n","sig":null,"attributes":[{"value":"/ Set the direct_mode_error_interrupt.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":182104,"byte_end":182144,"line_start":826,"line_end":826,"column_start":9,"column_end":49}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":182153,"byte_end":182170,"line_start":827,"line_end":827,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1632},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":182455,"byte_end":182475,"line_start":834,"line_end":834,"column_start":16,"column_end":36},"name":"fifo_error_interrupt","qualname":"<DmaConfig>::fifo_error_interrupt","value":"pub fn fifo_error_interrupt(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the fifo_error_interrupt.\n","sig":null,"attributes":[{"value":"/ Set the fifo_error_interrupt.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":182380,"byte_end":182413,"line_start":832,"line_end":832,"column_start":9,"column_end":42}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":182422,"byte_end":182439,"line_start":833,"line_end":833,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1633},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":182689,"byte_end":182702,"line_start":840,"line_end":840,"column_start":16,"column_end":29},"name":"double_buffer","qualname":"<DmaConfig>::double_buffer","value":"pub fn double_buffer(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the double_buffer.\n","sig":null,"attributes":[{"value":"/ Set the double_buffer.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":182621,"byte_end":182647,"line_start":838,"line_end":838,"column_start":9,"column_end":35}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":182656,"byte_end":182673,"line_start":839,"line_end":839,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1634},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":182896,"byte_end":182910,"line_start":846,"line_end":846,"column_start":16,"column_end":30},"name":"fifo_threshold","qualname":"<DmaConfig>::fifo_threshold","value":"pub fn fifo_threshold(Self, FifoThreshold) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the fifo_threshold.\n","sig":null,"attributes":[{"value":"/ Set the fifo_threshold.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":182827,"byte_end":182854,"line_start":844,"line_end":844,"column_start":9,"column_end":36}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":182863,"byte_end":182880,"line_start":845,"line_end":845,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1635},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":183113,"byte_end":183124,"line_start":852,"line_end":852,"column_start":16,"column_end":27},"name":"fifo_enable","qualname":"<DmaConfig>::fifo_enable","value":"pub fn fifo_enable(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the fifo_enable.\n","sig":null,"attributes":[{"value":"/ Set the fifo_enable.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":183047,"byte_end":183071,"line_start":850,"line_end":850,"column_start":9,"column_end":33}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":183080,"byte_end":183097,"line_start":851,"line_end":851,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1636},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":183310,"byte_end":183322,"line_start":858,"line_end":858,"column_start":16,"column_end":28},"name":"memory_burst","qualname":"<DmaConfig>::memory_burst","value":"pub fn memory_burst(Self, BurstMode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the memory_burst.\n","sig":null,"attributes":[{"value":"/ Set the memory_burst.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":183243,"byte_end":183268,"line_start":856,"line_end":856,"column_start":9,"column_end":34}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":183277,"byte_end":183294,"line_start":857,"line_end":857,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1637},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":183520,"byte_end":183536,"line_start":864,"line_end":864,"column_start":16,"column_end":32},"name":"peripheral_burst","qualname":"<DmaConfig>::peripheral_burst","value":"pub fn peripheral_burst(Self, BurstMode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the peripheral_burst.\n","sig":null,"attributes":[{"value":"/ Set the peripheral_burst.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":183449,"byte_end":183478,"line_start":862,"line_end":862,"column_start":9,"column_end":38}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":183487,"byte_end":183504,"line_start":863,"line_end":863,"column_start":9,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1638},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":183705,"byte_end":183713,"line_start":872,"line_end":872,"column_start":12,"column_end":20},"name":"Transfer","qualname":"::dma::Transfer","value":"Transfer {  }","parent":null,"children":[{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1647},{"krate":0,"index":1648},{"krate":0,"index":1649}],"decl_id":null,"docs":" DMA Transfer.\n","sig":null,"attributes":[{"value":"/ DMA Transfer.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":183676,"byte_end":183693,"line_start":871,"line_end":871,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1655},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":184755,"byte_end":184780,"line_start":901,"line_end":901,"column_start":12,"column_end":37},"name":"init_memory_to_peripheral","qualname":"<Transfer<STREAM, PERIPHERAL, MemoryToPeripheral, BUF, CHANNEL>>::init_memory_to_peripheral","value":"pub fn init_memory_to_peripheral(STREAM, PERIPHERAL, BUF, Option<BUF>,\nconfig::DmaConfig) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the DMA stream to the correct channel for the peripheral, configures source and\n destination and applies supplied configuration. If double buffering is enabled, the\n number of transfers will be the minimum length of `memory` and `double_buf`.","sig":null,"attributes":[{"value":"/ Configures the DMA stream to the correct channel for the peripheral, configures source and","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":184355,"byte_end":184449,"line_start":894,"line_end":894,"column_start":5,"column_end":99}},{"value":"/ destination and applies supplied configuration. If double buffering is enabled, the","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":184454,"byte_end":184541,"line_start":895,"line_end":895,"column_start":5,"column_end":92}},{"value":"/ number of transfers will be the minimum length of `memory` and `double_buf`.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":184546,"byte_end":184626,"line_start":896,"line_end":896,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":184631,"byte_end":184634,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":184639,"byte_end":184651,"line_start":898,"line_end":898,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":184656,"byte_end":184659,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ * When double buffering is enabled but the `double_buf` argument is `None`.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":184664,"byte_end":184743,"line_start":900,"line_end":900,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1657},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":186658,"byte_end":186671,"line_start":942,"line_end":942,"column_start":12,"column_end":25},"name":"next_transfer","qualname":"<Transfer<STREAM, PERIPHERAL, MemoryToPeripheral, BUF, CHANNEL>>::next_transfer","value":"pub fn next_transfer(&mut Self, BUF)\n-> Result<(BUF, CurrentBuffer), DMAError<BUF>>","parent":null,"children":[],"decl_id":null,"docs":" Changes the buffer and restarts or continues a double buffer transfer. This must be called\n immediately after a transfer complete event if using double buffering, otherwise you might\n lose data. Returns the old buffer together with its `CurrentBuffer`. If an error occurs,\n this method will return the new buffer with the error.","sig":null,"attributes":[{"value":"/ Changes the buffer and restarts or continues a double buffer transfer. This must be called","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":185708,"byte_end":185802,"line_start":931,"line_end":931,"column_start":5,"column_end":99}},{"value":"/ immediately after a transfer complete event if using double buffering, otherwise you might","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":185807,"byte_end":185901,"line_start":932,"line_end":932,"column_start":5,"column_end":99}},{"value":"/ lose data. Returns the old buffer together with its `CurrentBuffer`. If an error occurs,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":185906,"byte_end":185998,"line_start":933,"line_end":933,"column_start":5,"column_end":97}},{"value":"/ this method will return the new buffer with the error.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":186003,"byte_end":186061,"line_start":934,"line_end":934,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":186066,"byte_end":186069,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ This method will clear the transfer complete flag on entry, it will also clear it again if","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":186074,"byte_end":186168,"line_start":936,"line_end":936,"column_start":5,"column_end":99}},{"value":"/ an overrun occurs during its execution. Moreover, if an overrun occurs, the stream will be","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":186173,"byte_end":186267,"line_start":937,"line_end":937,"column_start":5,"column_end":99}},{"value":"/ disabled and the transfer error flag will be set. This method can be called before the end","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":186272,"byte_end":186366,"line_start":938,"line_end":938,"column_start":5,"column_end":99}},{"value":"/ of an ongoing transfer only if not using double buffering, in that case, the current","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":186371,"byte_end":186459,"line_start":939,"line_end":939,"column_start":5,"column_end":93}},{"value":"/ transfer will be canceled and a new one will be started. A `NotReady` error will be returned","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":186464,"byte_end":186560,"line_start":940,"line_end":940,"column_start":5,"column_end":101}},{"value":"/ if this method is called before the end of a transfer while double buffering.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":186565,"byte_end":186646,"line_start":941,"line_end":941,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1658},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":188298,"byte_end":188316,"line_start":971,"line_end":971,"column_start":19,"column_end":37},"name":"next_transfer_with","qualname":"<Transfer<STREAM, PERIPHERAL, MemoryToPeripheral, BUF, CHANNEL>>::next_transfer_with","value":"pub unsafe fn next_transfer_with<F, T>(&mut Self, F)\n-> Result<T, DMAError<()>> where F: FnOnce(BUF, CurrentBuffer) -> (BUF, T)","parent":null,"children":[],"decl_id":null,"docs":" Changes the buffer and restarts or continues a double buffer transfer. This must be called\n immediately after a transfer complete event if using double buffering, otherwise you might\n lose data. The closure must return `(BUF, T)` where `BUF` is the new buffer to be used. This\n method can be called before the end of an ongoing transfer only if not using double\n buffering, in that case, the current transfer will be canceled and a new one will be\n started. A `NotReady` error will be returned if this method is called before the end of a\n transfer while double buffering and the closure won't be executed.","sig":null,"attributes":[{"value":"/ Changes the buffer and restarts or continues a double buffer transfer. This must be called","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":187136,"byte_end":187230,"line_start":952,"line_end":952,"column_start":5,"column_end":99}},{"value":"/ immediately after a transfer complete event if using double buffering, otherwise you might","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":187235,"byte_end":187329,"line_start":953,"line_end":953,"column_start":5,"column_end":99}},{"value":"/ lose data. The closure must return `(BUF, T)` where `BUF` is the new buffer to be used. This","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":187334,"byte_end":187430,"line_start":954,"line_end":954,"column_start":5,"column_end":101}},{"value":"/ method can be called before the end of an ongoing transfer only if not using double","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":187435,"byte_end":187522,"line_start":955,"line_end":955,"column_start":5,"column_end":92}},{"value":"/ buffering, in that case, the current transfer will be canceled and a new one will be","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":187527,"byte_end":187615,"line_start":956,"line_end":956,"column_start":5,"column_end":93}},{"value":"/ started. A `NotReady` error will be returned if this method is called before the end of a","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":187620,"byte_end":187713,"line_start":957,"line_end":957,"column_start":5,"column_end":98}},{"value":"/ transfer while double buffering and the closure won't be executed.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":187718,"byte_end":187788,"line_start":958,"line_end":958,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":187793,"byte_end":187796,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":187801,"byte_end":187813,"line_start":960,"line_end":960,"column_start":5,"column_end":17}},{"value":"/ This method will panic when double buffering if one or both of the following conditions","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":187818,"byte_end":187909,"line_start":961,"line_end":961,"column_start":5,"column_end":96}},{"value":"/ happen:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":187914,"byte_end":187925,"line_start":962,"line_end":962,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":187930,"byte_end":187933,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ * The new buffer's length is smaller than the one used in the `init` method.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":187938,"byte_end":188018,"line_start":964,"line_end":964,"column_start":5,"column_end":85}},{"value":"/ * The closure `f` takes too long to return and a buffer overrun occurs.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":188023,"byte_end":188098,"line_start":965,"line_end":965,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":188103,"byte_end":188106,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":188111,"byte_end":188123,"line_start":967,"line_end":967,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":188128,"byte_end":188131,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ Memory corruption might occur in the previous buffer, the one passed to the closure, if an","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":188136,"byte_end":188230,"line_start":969,"line_end":969,"column_start":5,"column_end":99}},{"value":"/ overrun occurs in double buffering mode.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":188235,"byte_end":188279,"line_start":970,"line_end":970,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1666},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":190765,"byte_end":190790,"line_start":1032,"line_end":1032,"column_start":12,"column_end":37},"name":"init_peripheral_to_memory","qualname":"<Transfer<STREAM, PERIPHERAL, PeripheralToMemory, BUF, CHANNEL>>::init_peripheral_to_memory","value":"pub fn init_peripheral_to_memory(STREAM, PERIPHERAL, BUF, Option<BUF>,\nconfig::DmaConfig) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the DMA stream to the correct channel for the peripheral, configures source and\n destination and applies supplied configuration. If double buffering is enabled, the\n number of transfers will be the minimum length of `memory` and `double_buf`.","sig":null,"attributes":[{"value":"/ Configures the DMA stream to the correct channel for the peripheral, configures source and","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":190365,"byte_end":190459,"line_start":1025,"line_end":1025,"column_start":5,"column_end":99}},{"value":"/ destination and applies supplied configuration. If double buffering is enabled, the","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":190464,"byte_end":190551,"line_start":1026,"line_end":1026,"column_start":5,"column_end":92}},{"value":"/ number of transfers will be the minimum length of `memory` and `double_buf`.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":190556,"byte_end":190636,"line_start":1027,"line_end":1027,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":190641,"byte_end":190644,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":190649,"byte_end":190661,"line_start":1029,"line_end":1029,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":190666,"byte_end":190669,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ * When double buffering is enabled but the `double_buf` argument is `None`.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":190674,"byte_end":190753,"line_start":1031,"line_end":1031,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1668},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":192678,"byte_end":192691,"line_start":1073,"line_end":1073,"column_start":12,"column_end":25},"name":"next_transfer","qualname":"<Transfer<STREAM, PERIPHERAL, PeripheralToMemory, BUF, CHANNEL>>::next_transfer","value":"pub fn next_transfer(&mut Self, BUF)\n-> Result<(BUF, CurrentBuffer), DMAError<BUF>>","parent":null,"children":[],"decl_id":null,"docs":" Changes the buffer and restarts or continues a double buffer transfer. This must be called\n immediately after a transfer complete event if using double buffering, otherwise you might\n lose data. Returns the old buffer together with its `CurrentBuffer`. If an error occurs,\n this method will return the new buffer with the error.","sig":null,"attributes":[{"value":"/ Changes the buffer and restarts or continues a double buffer transfer. This must be called","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":191728,"byte_end":191822,"line_start":1062,"line_end":1062,"column_start":5,"column_end":99}},{"value":"/ immediately after a transfer complete event if using double buffering, otherwise you might","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":191827,"byte_end":191921,"line_start":1063,"line_end":1063,"column_start":5,"column_end":99}},{"value":"/ lose data. Returns the old buffer together with its `CurrentBuffer`. If an error occurs,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":191926,"byte_end":192018,"line_start":1064,"line_end":1064,"column_start":5,"column_end":97}},{"value":"/ this method will return the new buffer with the error.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":192023,"byte_end":192081,"line_start":1065,"line_end":1065,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":192086,"byte_end":192089,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ This method will clear the transfer complete flag on entry, it will also clear it again if","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":192094,"byte_end":192188,"line_start":1067,"line_end":1067,"column_start":5,"column_end":99}},{"value":"/ an overrun occurs during its execution. Moreover, if an overrun occurs, the stream will be","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":192193,"byte_end":192287,"line_start":1068,"line_end":1068,"column_start":5,"column_end":99}},{"value":"/ disabled and the transfer error flag will be set. This method can be called before the end","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":192292,"byte_end":192386,"line_start":1069,"line_end":1069,"column_start":5,"column_end":99}},{"value":"/ of an ongoing transfer only if not using double buffering, in that case, the current","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":192391,"byte_end":192479,"line_start":1070,"line_end":1070,"column_start":5,"column_end":93}},{"value":"/ transfer will be canceled and a new one will be started. A `NotReady` error will be returned","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":192484,"byte_end":192580,"line_start":1071,"line_end":1071,"column_start":5,"column_end":101}},{"value":"/ if this method is called before the end of a transfer while double buffering.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":192585,"byte_end":192666,"line_start":1072,"line_end":1072,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1669},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":194346,"byte_end":194364,"line_start":1105,"line_end":1105,"column_start":19,"column_end":37},"name":"next_transfer_with","qualname":"<Transfer<STREAM, PERIPHERAL, PeripheralToMemory, BUF, CHANNEL>>::next_transfer_with","value":"pub unsafe fn next_transfer_with<F, T>(&mut Self, F)\n-> Result<T, DMAError<()>> where F: FnOnce(BUF, CurrentBuffer) -> (BUF, T)","parent":null,"children":[],"decl_id":null,"docs":" Changes the buffer and restarts or continues a double buffer transfer. This must be called\n immediately after a transfer complete event if using double buffering, otherwise you might\n lose data. The closure must return `(BUF, T)` where `BUF` is the new buffer to be used. This\n method can be called before the end of an ongoing transfer only if not using double\n buffering, in that case, the current transfer will be canceled and a new one will be\n started. A `NotReady` error will be returned if this method is called before the end of a\n transfer while double buffering and the closure won't be executed.","sig":null,"attributes":[{"value":"/ Changes the buffer and restarts or continues a double buffer transfer. This must be called","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":193184,"byte_end":193278,"line_start":1086,"line_end":1086,"column_start":5,"column_end":99}},{"value":"/ immediately after a transfer complete event if using double buffering, otherwise you might","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":193283,"byte_end":193377,"line_start":1087,"line_end":1087,"column_start":5,"column_end":99}},{"value":"/ lose data. The closure must return `(BUF, T)` where `BUF` is the new buffer to be used. This","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":193382,"byte_end":193478,"line_start":1088,"line_end":1088,"column_start":5,"column_end":101}},{"value":"/ method can be called before the end of an ongoing transfer only if not using double","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":193483,"byte_end":193570,"line_start":1089,"line_end":1089,"column_start":5,"column_end":92}},{"value":"/ buffering, in that case, the current transfer will be canceled and a new one will be","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":193575,"byte_end":193663,"line_start":1090,"line_end":1090,"column_start":5,"column_end":93}},{"value":"/ started. A `NotReady` error will be returned if this method is called before the end of a","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":193668,"byte_end":193761,"line_start":1091,"line_end":1091,"column_start":5,"column_end":98}},{"value":"/ transfer while double buffering and the closure won't be executed.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":193766,"byte_end":193836,"line_start":1092,"line_end":1092,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":193841,"byte_end":193844,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":193849,"byte_end":193861,"line_start":1094,"line_end":1094,"column_start":5,"column_end":17}},{"value":"/ This method will panic when double buffering if one or both of the following conditions","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":193866,"byte_end":193957,"line_start":1095,"line_end":1095,"column_start":5,"column_end":96}},{"value":"/ happen:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":193962,"byte_end":193973,"line_start":1096,"line_end":1096,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":193978,"byte_end":193981,"line_start":1097,"line_end":1097,"column_start":5,"column_end":8}},{"value":"/ * The new buffer's length is smaller than the one used in the `init` method.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":193986,"byte_end":194066,"line_start":1098,"line_end":1098,"column_start":5,"column_end":85}},{"value":"/ * The closure `f` takes too long to return and a buffer overrun occurs.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":194071,"byte_end":194146,"line_start":1099,"line_end":1099,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":194151,"byte_end":194154,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":194159,"byte_end":194171,"line_start":1101,"line_end":1101,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":194176,"byte_end":194179,"line_start":1102,"line_end":1102,"column_start":5,"column_end":8}},{"value":"/ Memory corruption might occur in the previous buffer, the one passed to the closure, if an","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":194184,"byte_end":194278,"line_start":1103,"line_end":1103,"column_start":5,"column_end":99}},{"value":"/ overrun occurs in double buffering mode.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":194283,"byte_end":194327,"line_start":1104,"line_end":1104,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1678},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":197007,"byte_end":197028,"line_start":1169,"line_end":1169,"column_start":12,"column_end":33},"name":"init_memory_to_memory","qualname":"<Transfer<STREAM, PERIPHERAL, MemoryToMemory<S>, BUF, CHANNEL>>::init_memory_to_memory","value":"pub fn init_memory_to_memory(STREAM, PERIPHERAL, BUF, BUF, config::DmaConfig)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the DMA stream to the correct channel for the peripheral, configures source and\n destination and applies supplied configuration. In a memory to memory transfer,\n the `double_buf` argument is the source of the data. If double buffering is enabled, the\n number of transfers will be the minimum length of `memory` and `double_buf`.","sig":null,"attributes":[{"value":"/ Configures the DMA stream to the correct channel for the peripheral, configures source and","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":196460,"byte_end":196554,"line_start":1160,"line_end":1160,"column_start":5,"column_end":99}},{"value":"/ destination and applies supplied configuration. In a memory to memory transfer,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":196559,"byte_end":196642,"line_start":1161,"line_end":1161,"column_start":5,"column_end":88}},{"value":"/ the `double_buf` argument is the source of the data. If double buffering is enabled, the","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":196647,"byte_end":196739,"line_start":1162,"line_end":1162,"column_start":5,"column_end":97}},{"value":"/ number of transfers will be the minimum length of `memory` and `double_buf`.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":196744,"byte_end":196824,"line_start":1163,"line_end":1163,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":196829,"byte_end":196832,"line_start":1164,"line_end":1164,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":196837,"byte_end":196849,"line_start":1165,"line_end":1165,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":196854,"byte_end":196857,"line_start":1166,"line_end":1166,"column_start":5,"column_end":8}},{"value":"/ * When the FIFO is disabled or double buffering is enabled in `DmaConfig` while initializing","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":196862,"byte_end":196958,"line_start":1167,"line_end":1167,"column_start":5,"column_end":101}},{"value":"/ a memory to memory transfer.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":196963,"byte_end":196995,"line_start":1168,"line_end":1168,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1679},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":198388,"byte_end":198401,"line_start":1205,"line_end":1205,"column_start":12,"column_end":25},"name":"next_transfer","qualname":"<Transfer<STREAM, PERIPHERAL, MemoryToMemory<S>, BUF, CHANNEL>>::next_transfer","value":"pub fn next_transfer(&mut Self, BUF)\n-> Result<(BUF, CurrentBuffer), DMAError<BUF>>","parent":null,"children":[],"decl_id":null,"docs":" Changes the buffer and restarts.Returns the old buffer together with its `CurrentBuffer`. If\n an error occurs, this method will return the new buffer with the error.","sig":null,"attributes":[{"value":"/ Changes the buffer and restarts.Returns the old buffer together with its `CurrentBuffer`. If","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":197960,"byte_end":198056,"line_start":1199,"line_end":1199,"column_start":5,"column_end":101}},{"value":"/ an error occurs, this method will return the new buffer with the error.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":198061,"byte_end":198136,"line_start":1200,"line_end":1200,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":198141,"byte_end":198144,"line_start":1201,"line_end":1201,"column_start":5,"column_end":8}},{"value":"/ This method will clear the transfer complete flag on entry. This method can be called before","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":198149,"byte_end":198245,"line_start":1202,"line_end":1202,"column_start":5,"column_end":101}},{"value":"/ the end of an ongoing transfer, in that case, the current transfer will be canceled and a","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":198250,"byte_end":198343,"line_start":1203,"line_end":1203,"column_start":5,"column_end":98}},{"value":"/ new one will be started.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":198348,"byte_end":198376,"line_start":1204,"line_end":1204,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1680},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":199210,"byte_end":199228,"line_start":1223,"line_end":1223,"column_start":12,"column_end":30},"name":"next_transfer_with","qualname":"<Transfer<STREAM, PERIPHERAL, MemoryToMemory<S>, BUF, CHANNEL>>::next_transfer_with","value":"pub fn next_transfer_with<F, T>(&mut Self, F) -> T where\nF: FnOnce(BUF, CurrentBuffer) -> (BUF, T)","parent":null,"children":[],"decl_id":null,"docs":" Changes the buffer and restarts a transfer. This must be called\n The closure must return `(BUF, T)` where `BUF` is the new buffer to be used. This\n method can be called before the end of an ongoing transfer,\n in that case, the current transfer will be canceled and a new one will be\n started.\n","sig":null,"attributes":[{"value":"/ Changes the buffer and restarts a transfer. This must be called","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":198874,"byte_end":198941,"line_start":1218,"line_end":1218,"column_start":5,"column_end":72}},{"value":"/ The closure must return `(BUF, T)` where `BUF` is the new buffer to be used. This","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":198946,"byte_end":199031,"line_start":1219,"line_end":1219,"column_start":5,"column_end":90}},{"value":"/ method can be called before the end of an ongoing transfer,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":199036,"byte_end":199099,"line_start":1220,"line_end":1220,"column_start":5,"column_end":68}},{"value":"/ in that case, the current transfer will be canceled and a new one will be","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":199104,"byte_end":199181,"line_start":1221,"line_end":1221,"column_start":5,"column_end":82}},{"value":"/ started.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":199186,"byte_end":199198,"line_start":1222,"line_end":1222,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1689},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":200476,"byte_end":200481,"line_start":1259,"line_end":1259,"column_start":12,"column_end":17},"name":"start","qualname":"<Transfer<STREAM, PERIPHERAL, DIR, BUF, CHANNEL>>::start","value":"pub fn start<F>(&mut Self, F) where F: FnOnce(&mut PERIPHERAL) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Starts the transfer, the closure will be executed right after enabling the stream.\n","sig":null,"attributes":[{"value":"/ Starts the transfer, the closure will be executed right after enabling the stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":200378,"byte_end":200464,"line_start":1258,"line_end":1258,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":1691},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":200884,"byte_end":200889,"line_start":1273,"line_end":1273,"column_start":12,"column_end":17},"name":"pause","qualname":"<Transfer<STREAM, PERIPHERAL, DIR, BUF, CHANNEL>>::pause","value":"pub fn pause<F>(&mut Self, F) where F: FnOnce(&mut PERIPHERAL) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Pauses the dma stream, the closure will be executed right before disabling the stream.\n","sig":null,"attributes":[{"value":"/ Pauses the dma stream, the closure will be executed right before disabling the stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":200782,"byte_end":200872,"line_start":1272,"line_end":1272,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":1693},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":201116,"byte_end":201120,"line_start":1282,"line_end":1282,"column_start":12,"column_end":16},"name":"free","qualname":"<Transfer<STREAM, PERIPHERAL, DIR, BUF, CHANNEL>>::free","value":"pub fn free(Self) -> (STREAM, PERIPHERAL, BUF, Option<BUF>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.10.0\", note = \"Please use release instead\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":201036,"byte_end":201104,"line_start":1281,"line_end":1281,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":201274,"byte_end":201281,"line_start":1286,"line_end":1286,"column_start":12,"column_end":19},"name":"release","qualname":"<Transfer<STREAM, PERIPHERAL, DIR, BUF, CHANNEL>>::release","value":"pub fn release(Self) -> (STREAM, PERIPHERAL, BUF, Option<BUF>)","parent":null,"children":[],"decl_id":null,"docs":" Stops the stream and returns the underlying resources.\n","sig":null,"attributes":[{"value":"/ Stops the stream and returns the underlying resources.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":201204,"byte_end":201262,"line_start":1285,"line_end":1285,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1695},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":201866,"byte_end":201882,"line_start":1303,"line_end":1303,"column_start":12,"column_end":28},"name":"clear_interrupts","qualname":"<Transfer<STREAM, PERIPHERAL, DIR, BUF, CHANNEL>>::clear_interrupts","value":"pub fn clear_interrupts(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear all interrupts for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Clear all interrupts for the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":201788,"byte_end":201832,"line_start":1301,"line_end":1301,"column_start":5,"column_end":49}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":201837,"byte_end":201854,"line_start":1302,"line_end":1302,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1696},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":202045,"byte_end":202078,"line_start":1309,"line_end":1309,"column_start":12,"column_end":45},"name":"clear_transfer_complete_interrupt","qualname":"<Transfer<STREAM, PERIPHERAL, DIR, BUF, CHANNEL>>::clear_transfer_complete_interrupt","value":"pub fn clear_transfer_complete_interrupt(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear transfer complete interrupt (tcif) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Clear transfer complete interrupt (tcif) for the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":201947,"byte_end":202011,"line_start":1307,"line_end":1307,"column_start":5,"column_end":69}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":202016,"byte_end":202033,"line_start":1308,"line_end":1308,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":202254,"byte_end":202283,"line_start":1315,"line_end":1315,"column_start":12,"column_end":41},"name":"clear_half_transfer_interrupt","qualname":"<Transfer<STREAM, PERIPHERAL, DIR, BUF, CHANNEL>>::clear_half_transfer_interrupt","value":"pub fn clear_half_transfer_interrupt(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear half transfer interrupt (htif) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Clear half transfer interrupt (htif) for the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":202160,"byte_end":202220,"line_start":1313,"line_end":1313,"column_start":5,"column_end":65}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":202225,"byte_end":202242,"line_start":1314,"line_end":1314,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":202456,"byte_end":202486,"line_start":1321,"line_end":1321,"column_start":12,"column_end":42},"name":"clear_transfer_error_interrupt","qualname":"<Transfer<STREAM, PERIPHERAL, DIR, BUF, CHANNEL>>::clear_transfer_error_interrupt","value":"pub fn clear_transfer_error_interrupt(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear transfer error interrupt (teif) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Clear transfer error interrupt (teif) for the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":202361,"byte_end":202422,"line_start":1319,"line_end":1319,"column_start":5,"column_end":66}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":202427,"byte_end":202444,"line_start":1320,"line_end":1320,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1699},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":202664,"byte_end":202697,"line_start":1327,"line_end":1327,"column_start":12,"column_end":45},"name":"clear_direct_mode_error_interrupt","qualname":"<Transfer<STREAM, PERIPHERAL, DIR, BUF, CHANNEL>>::clear_direct_mode_error_interrupt","value":"pub fn clear_direct_mode_error_interrupt(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear direct mode error interrupt (dmeif) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Clear direct mode error interrupt (dmeif) for the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":202565,"byte_end":202630,"line_start":1325,"line_end":1325,"column_start":5,"column_end":70}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":202635,"byte_end":202652,"line_start":1326,"line_end":1326,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1700},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":202870,"byte_end":202896,"line_start":1333,"line_end":1333,"column_start":12,"column_end":38},"name":"clear_fifo_error_interrupt","qualname":"<Transfer<STREAM, PERIPHERAL, DIR, BUF, CHANNEL>>::clear_fifo_error_interrupt","value":"pub fn clear_fifo_error_interrupt(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear fifo error interrupt (feif) for the DMA stream.\n","sig":null,"attributes":[{"value":"/ Clear fifo error interrupt (feif) for the DMA stream.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":202779,"byte_end":202836,"line_start":1331,"line_end":1331,"column_start":5,"column_end":62}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":202841,"byte_end":202858,"line_start":1332,"line_end":1332,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1701},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":203319,"byte_end":203329,"line_start":1344,"line_end":1344,"column_start":19,"column_end":29},"name":"get_stream","qualname":"<Transfer<STREAM, PERIPHERAL, DIR, BUF, CHANNEL>>::get_stream","value":"pub unsafe fn get_stream(&mut Self) -> &mut STREAM","parent":null,"children":[],"decl_id":null,"docs":" Get the underlying stream of the transfer.","sig":null,"attributes":[{"value":"/ Get the underlying stream of the transfer.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":202971,"byte_end":203017,"line_start":1337,"line_end":1337,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":203022,"byte_end":203025,"line_start":1338,"line_end":1338,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":203030,"byte_end":203042,"line_start":1339,"line_end":1339,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":203047,"byte_end":203050,"line_start":1340,"line_end":1340,"column_start":5,"column_end":8}},{"value":"/ This implementation relies on several configurations points in order to be sound, this","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":203055,"byte_end":203145,"line_start":1341,"line_end":1341,"column_start":5,"column_end":95}},{"value":"/ method can void that. The use of this method is completely discouraged, only use it if you","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":203150,"byte_end":203244,"line_start":1342,"line_end":1342,"column_start":5,"column_end":99}},{"value":"/ know the internals of this API in its entirety.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":203249,"byte_end":203300,"line_start":1343,"line_end":1343,"column_start":5,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":1713},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dwt","qualname":"::dwt","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","parent":null,"children":[{"krate":0,"index":1714},{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1724},{"krate":0,"index":1727},{"krate":0,"index":1728},{"krate":0,"index":1731},{"krate":0,"index":1734},{"krate":0,"index":1736},{"krate":0,"index":1738},{"krate":0,"index":1742},{"krate":0,"index":5353},{"krate":0,"index":5355},{"krate":0,"index":5357},{"krate":0,"index":1751},{"krate":0,"index":1754},{"krate":0,"index":1757},{"krate":0,"index":1760},{"krate":0,"index":1765},{"krate":0,"index":5358},{"krate":0,"index":5361},{"krate":0,"index":5363},{"krate":0,"index":1772}],"decl_id":null,"docs":" Debug and trace and stuff\n","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":4967,"byte_end":5002,"line_start":149,"line_end":149,"column_start":1,"column_end":36}},{"value":"/ Debug and trace and stuff","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":255637,"byte_end":255666,"line_start":1,"line_end":1,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":1734},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":255820,"byte_end":255826,"line_start":8,"line_end":8,"column_start":11,"column_end":17},"name":"DwtExt","qualname":"::dwt::DwtExt","value":"DwtExt","parent":null,"children":[{"krate":0,"index":1735}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1735},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":255836,"byte_end":255845,"line_start":9,"line_end":9,"column_start":8,"column_end":17},"name":"constrain","qualname":"::dwt::DwtExt::constrain","value":"pub fn constrain(Self, DCB, Clocks) -> Dwt","parent":{"krate":0,"index":1734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1738},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":256230,"byte_end":256233,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"Dwt","qualname":"::dwt::Dwt","value":"Dwt {  }","parent":null,"children":[{"krate":0,"index":1739},{"krate":0,"index":1740},{"krate":0,"index":1741}],"decl_id":null,"docs":" DWT (Data Watchpoint and Trace) unit\n","sig":null,"attributes":[{"value":"/ DWT (Data Watchpoint and Trace) unit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":256178,"byte_end":256218,"line_start":24,"line_end":24,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1743},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":256443,"byte_end":256450,"line_start":34,"line_end":34,"column_start":19,"column_end":26},"name":"release","qualname":"<Dwt>::release","value":"pub unsafe fn release(Self) -> (DWT, DCB)","parent":null,"children":[],"decl_id":null,"docs":" Release the dwt and dcb control\n # Safety\n All instances of Delay and StopWatch become invalid after this\n","sig":null,"attributes":[{"value":"/ Release the dwt and dcb control","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":256301,"byte_end":256336,"line_start":31,"line_end":31,"column_start":5,"column_end":40}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":256341,"byte_end":256353,"line_start":32,"line_end":32,"column_start":5,"column_end":17}},{"value":"/ All instances of Delay and StopWatch become invalid after this","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":256358,"byte_end":256424,"line_start":33,"line_end":33,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1744},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":256551,"byte_end":256556,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"delay","qualname":"<Dwt>::delay","value":"pub fn delay(&Self) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Create a delay instance\n","sig":null,"attributes":[{"value":"/ Create a delay instance","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":256512,"byte_end":256539,"line_start":37,"line_end":37,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1745},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":256810,"byte_end":256819,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"stopwatch","qualname":"<Dwt>::stopwatch","value":"pub fn stopwatch<'i>(&Self, &'i mut [u32]) -> StopWatch","parent":null,"children":[],"decl_id":null,"docs":" Create a stopwatch instance\n # Arguments\n * `times` - Array which will be holding the timings in ticks (max laps == times.len()-1)\n","sig":null,"attributes":[{"value":"/ Create a stopwatch instance","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":256650,"byte_end":256681,"line_start":43,"line_end":43,"column_start":5,"column_end":36}},{"value":"/ # Arguments","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":256686,"byte_end":256701,"line_start":44,"line_end":44,"column_start":5,"column_end":20}},{"value":"/ * `times` - Array which will be holding the timings in ticks (max laps == times.len()-1)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":256706,"byte_end":256798,"line_start":45,"line_end":45,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":1747},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":257240,"byte_end":257247,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"measure","qualname":"<Dwt>::measure","value":"pub fn measure<F: FnOnce() -> ()>(&Self, F) -> ClockDuration","parent":null,"children":[],"decl_id":null,"docs":" Measure cycles it takes to execute closure `f`.","sig":null,"attributes":[{"value":"/ Measure cycles it takes to execute closure `f`.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":256932,"byte_end":256983,"line_start":49,"line_end":49,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":256988,"byte_end":256991,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Since DWT Cycle Counter is a 32-bit counter that wraps around to 0 on overflow,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":256996,"byte_end":257079,"line_start":51,"line_end":51,"column_start":5,"column_end":88}},{"value":"/ users should be aware that `Dwt::measure` cannot correctly measure running time of","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":257084,"byte_end":257170,"line_start":52,"line_end":52,"column_start":5,"column_end":91}},{"value":"/ closures which take longer than `u32::MAX` cycles","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":257175,"byte_end":257228,"line_start":53,"line_end":53,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":5353},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":257478,"byte_end":257483,"line_start":63,"line_end":63,"column_start":12,"column_end":17},"name":"Delay","qualname":"::dwt::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":5354}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1752},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":257571,"byte_end":257576,"line_start":68,"line_end":68,"column_start":12,"column_end":17},"name":"delay","qualname":"<Delay>::delay","value":"pub fn delay(ClockDuration)","parent":null,"children":[],"decl_id":null,"docs":" Delay for `ClockDuration::ticks`\n","sig":null,"attributes":[{"value":"/ Delay for `ClockDuration::ticks`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":257523,"byte_end":257559,"line_start":67,"line_end":67,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1760},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":259854,"byte_end":259863,"line_start":125,"line_end":125,"column_start":12,"column_end":21},"name":"StopWatch","qualname":"::dwt::StopWatch","value":"StopWatch {  }","parent":null,"children":[{"krate":0,"index":1762},{"krate":0,"index":1763},{"krate":0,"index":1764}],"decl_id":null,"docs":" Very simple stopwatch which reads from DWT Cycle Counter to record timing.","sig":null,"attributes":[{"value":"/ Very simple stopwatch which reads from DWT Cycle Counter to record timing.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":259558,"byte_end":259636,"line_start":120,"line_end":120,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":259637,"byte_end":259640,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Since DWT Cycle Counter is a 32-bit counter that wraps around to 0 on overflow,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":259641,"byte_end":259724,"line_start":122,"line_end":122,"column_start":1,"column_end":84}},{"value":"/ users should be aware that `StopWatch` cannot correctly measure laps","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":259725,"byte_end":259797,"line_start":123,"line_end":123,"column_start":1,"column_end":73}},{"value":"/ which take longer than `u32::MAX` cycles","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":259798,"byte_end":259842,"line_start":124,"line_end":124,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1768},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":260478,"byte_end":260487,"line_start":146,"line_end":146,"column_start":12,"column_end":21},"name":"lap_count","qualname":"<StopWatch>::lap_count","value":"pub fn lap_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the numbers of laps recorded\n","sig":null,"attributes":[{"value":"/ Returns the numbers of laps recorded","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":260426,"byte_end":260466,"line_start":145,"line_end":145,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1769},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":260594,"byte_end":260599,"line_start":150,"line_end":150,"column_start":12,"column_end":17},"name":"reset","qualname":"<StopWatch>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets recorded laps to 0 and sets 0 offset\n","sig":null,"attributes":[{"value":"/ Resets recorded laps to 0 and sets 0 offset","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":260535,"byte_end":260582,"line_start":149,"line_end":149,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1770},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":260798,"byte_end":260801,"line_start":157,"line_end":157,"column_start":12,"column_end":15},"name":"lap","qualname":"<StopWatch>::lap","value":"pub fn lap(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Record a new lap.","sig":null,"attributes":[{"value":"/ Record a new lap.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":260695,"byte_end":260716,"line_start":154,"line_end":154,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":260721,"byte_end":260724,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ If lap count exceeds maximum, the last lap is updated","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":260729,"byte_end":260786,"line_start":156,"line_end":156,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1771},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":261125,"byte_end":261133,"line_start":168,"line_end":168,"column_start":12,"column_end":20},"name":"lap_time","qualname":"<StopWatch>::lap_time","value":"pub fn lap_time(&Self, usize) -> Option<ClockDuration>","parent":null,"children":[],"decl_id":null,"docs":" Calculate the time of lap n (n starting with 1).","sig":null,"attributes":[{"value":"/ Calculate the time of lap n (n starting with 1).","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":261009,"byte_end":261061,"line_start":165,"line_end":165,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":261066,"byte_end":261069,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Returns None if `n` is out of range","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":261074,"byte_end":261113,"line_start":167,"line_end":167,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":5358},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":261522,"byte_end":261535,"line_start":182,"line_end":182,"column_start":12,"column_end":25},"name":"ClockDuration","qualname":"::dwt::ClockDuration","value":"ClockDuration {  }","parent":null,"children":[{"krate":0,"index":5359},{"krate":0,"index":5360}],"decl_id":null,"docs":" Clock difference with capability to calculate SI units (s)\n","sig":null,"attributes":[{"value":"/ Clock difference with capability to calculate SI units (s)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":261425,"byte_end":261487,"line_start":180,"line_end":180,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1773},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":261628,"byte_end":261636,"line_start":188,"line_end":188,"column_start":12,"column_end":20},"name":"as_ticks","qualname":"<ClockDuration>::as_ticks","value":"pub fn as_ticks(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns ticks\n","sig":null,"attributes":[{"value":"/ Returns ticks","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":261599,"byte_end":261616,"line_start":187,"line_end":187,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1774},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":261739,"byte_end":261748,"line_start":192,"line_end":192,"column_start":12,"column_end":21},"name":"as_millis","qualname":"<ClockDuration>::as_millis","value":"pub fn as_millis(Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns calculated milliseconds as integer\n","sig":null,"attributes":[{"value":"/ Returns calculated milliseconds as integer","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":261681,"byte_end":261727,"line_start":191,"line_end":191,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1775},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":261888,"byte_end":261897,"line_start":196,"line_end":196,"column_start":12,"column_end":21},"name":"as_micros","qualname":"<ClockDuration>::as_micros","value":"pub fn as_micros(Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns calculated microseconds as integer\n","sig":null,"attributes":[{"value":"/ Returns calculated microseconds as integer","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":261830,"byte_end":261876,"line_start":195,"line_end":195,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1776},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":262040,"byte_end":262048,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"as_nanos","qualname":"<ClockDuration>::as_nanos","value":"pub fn as_nanos(Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns calculated nanoseconds as integer\n","sig":null,"attributes":[{"value":"/ Returns calculated nanoseconds as integer","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":261983,"byte_end":262028,"line_start":199,"line_end":199,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1777},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":262195,"byte_end":262206,"line_start":204,"line_end":204,"column_start":12,"column_end":23},"name":"as_secs_f32","qualname":"<ClockDuration>::as_secs_f32","value":"pub fn as_secs_f32(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Return calculated seconds as 32-bit float\n","sig":null,"attributes":[{"value":"/ Return calculated seconds as 32-bit float","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":262138,"byte_end":262183,"line_start":203,"line_end":203,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1778},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":262337,"byte_end":262348,"line_start":208,"line_end":208,"column_start":12,"column_end":23},"name":"as_secs_f64","qualname":"<ClockDuration>::as_secs_f64","value":"pub fn as_secs_f64(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Return calculated seconds as 64-bit float\n","sig":null,"attributes":[{"value":"/ Return calculated seconds as 64-bit float","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":262280,"byte_end":262325,"line_start":207,"line_end":207,"column_start":5,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":1779},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"flash","qualname":"::flash","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","parent":null,"children":[{"krate":0,"index":1780},{"krate":0,"index":1783},{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1790},{"krate":0,"index":5364},{"krate":0,"index":5375},{"krate":0,"index":5377},{"krate":0,"index":5379},{"krate":0,"index":1793},{"krate":0,"index":1795},{"krate":0,"index":1800},{"krate":0,"index":1804},{"krate":0,"index":1805},{"krate":0,"index":1808},{"krate":0,"index":1810},{"krate":0,"index":1818},{"krate":0,"index":1819},{"krate":0,"index":1820},{"krate":0,"index":1823}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":5016,"byte_end":5051,"line_start":151,"line_end":151,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5365},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":262583,"byte_end":262602,"line_start":8,"line_end":8,"column_start":5,"column_end":24},"name":"ProgrammingSequence","qualname":"::flash::Error::ProgrammingSequence","value":"Error::ProgrammingSequence","parent":{"krate":0,"index":5364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5367},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":262608,"byte_end":262630,"line_start":9,"line_end":9,"column_start":5,"column_end":27},"name":"ProgrammingParallelism","qualname":"::flash::Error::ProgrammingParallelism","value":"Error::ProgrammingParallelism","parent":{"krate":0,"index":5364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5369},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":262636,"byte_end":262656,"line_start":10,"line_end":10,"column_start":5,"column_end":25},"name":"ProgrammingAlignment","qualname":"::flash::Error::ProgrammingAlignment","value":"Error::ProgrammingAlignment","parent":{"krate":0,"index":5364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5371},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":262662,"byte_end":262677,"line_start":11,"line_end":11,"column_start":5,"column_end":20},"name":"WriteProtection","qualname":"::flash::Error::WriteProtection","value":"Error::WriteProtection","parent":{"krate":0,"index":5364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5373},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":262683,"byte_end":262692,"line_start":12,"line_end":12,"column_start":5,"column_end":14},"name":"Operation","qualname":"::flash::Error::Operation","value":"Error::Operation","parent":{"krate":0,"index":5364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5364},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":262571,"byte_end":262576,"line_start":7,"line_end":7,"column_start":10,"column_end":15},"name":"Error","qualname":"::flash::Error","value":"pub enum Error {\n    ProgrammingSequence,\n    ProgrammingParallelism,\n    ProgrammingAlignment,\n    WriteProtection,\n    Operation,\n}","parent":null,"children":[{"krate":0,"index":5365},{"krate":0,"index":5367},{"krate":0,"index":5369},{"krate":0,"index":5371},{"krate":0,"index":5373}],"decl_id":null,"docs":" Flash erase/program error\n","sig":null,"attributes":[{"value":"/ Flash erase/program error","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":262502,"byte_end":262531,"line_start":5,"line_end":5,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":1795},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":263335,"byte_end":263343,"line_start":36,"line_end":36,"column_start":11,"column_end":19},"name":"FlashExt","qualname":"::flash::FlashExt","value":"FlashExt","parent":null,"children":[{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1799}],"decl_id":null,"docs":" Flash methods implemented for `pac::FLASH`\n","sig":null,"attributes":[{"value":"/ Flash methods implemented for `pac::FLASH`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":263239,"byte_end":263285,"line_start":34,"line_end":34,"column_start":1,"column_end":47}},{"value":"allow(clippy :: len_without_is_empty)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":263286,"byte_end":263324,"line_start":35,"line_end":35,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1796},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":263383,"byte_end":263390,"line_start":38,"line_end":38,"column_start":8,"column_end":15},"name":"address","qualname":"::flash::FlashExt::address","value":"pub fn address(&Self) -> usize","parent":{"krate":0,"index":1795},"children":[],"decl_id":null,"docs":" Memory-mapped address\n","sig":null,"attributes":[{"value":"/ Memory-mapped address","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":263350,"byte_end":263375,"line_start":37,"line_end":37,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1797},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":263437,"byte_end":263440,"line_start":40,"line_end":40,"column_start":8,"column_end":11},"name":"len","qualname":"::flash::FlashExt::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":1795},"children":[],"decl_id":null,"docs":" Size in bytes\n","sig":null,"attributes":[{"value":"/ Size in bytes","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":263412,"byte_end":263429,"line_start":39,"line_end":39,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1798},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":263514,"byte_end":263518,"line_start":42,"line_end":42,"column_start":8,"column_end":12},"name":"read","qualname":"::flash::FlashExt::read","value":"pub fn read(&Self) -> &[u8]","parent":{"krate":0,"index":1795},"children":[],"decl_id":null,"docs":" Returns a read-only view of flash memory\n","sig":null,"attributes":[{"value":"/ Returns a read-only view of flash memory","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":263462,"byte_end":263506,"line_start":41,"line_end":41,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1799},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":263745,"byte_end":263753,"line_start":48,"line_end":48,"column_start":8,"column_end":16},"name":"unlocked","qualname":"::flash::FlashExt::unlocked","value":"pub fn unlocked(&mut Self) -> UnlockedFlash","parent":{"krate":0,"index":1795},"children":[],"decl_id":null,"docs":" Unlock flash for erasing/programming until this method's\n result is dropped\n","sig":null,"attributes":[{"value":"/ Unlock flash for erasing/programming until this method's","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":263651,"byte_end":263711,"line_start":46,"line_end":46,"column_start":5,"column_end":65}},{"value":"/ result is dropped","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":263716,"byte_end":263737,"line_start":47,"line_end":47,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1805},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":264132,"byte_end":264145,"line_start":69,"line_end":69,"column_start":12,"column_end":25},"name":"UnlockedFlash","qualname":"::flash::UnlockedFlash","value":"UnlockedFlash {  }","parent":null,"children":[{"krate":0,"index":1807}],"decl_id":null,"docs":" Result of `FlashExt::unlocked()`\n","sig":null,"attributes":[{"value":"/ Result of `FlashExt::unlocked()`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":264084,"byte_end":264120,"line_start":68,"line_end":68,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1811},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":264513,"byte_end":264518,"line_start":85,"line_end":85,"column_start":12,"column_end":17},"name":"erase","qualname":"<UnlockedFlash>::erase","value":"pub fn erase(&mut Self, u8) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Erase a flash sector","sig":null,"attributes":[{"value":"/ Erase a flash sector","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":264366,"byte_end":264390,"line_start":81,"line_end":81,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":264395,"byte_end":264398,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Refer to the reference manual to see which sector corresponds","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":264403,"byte_end":264468,"line_start":83,"line_end":83,"column_start":5,"column_end":70}},{"value":"/ to which memory address.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":264473,"byte_end":264501,"line_start":84,"line_end":84,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1812},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":265174,"byte_end":265181,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"program","qualname":"<UnlockedFlash>::program","value":"pub fn program<'a, I>(&mut Self, usize, I) -> Result<(), Error> where\nI: Iterator<Item = &'a u8>","parent":null,"children":[],"decl_id":null,"docs":" Program bytes with offset into flash memory,\n aligned to 128-bit rows\n","sig":null,"attributes":[{"value":"/ Program bytes with offset into flash memory,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":265082,"byte_end":265130,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/ aligned to 128-bit rows","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":265135,"byte_end":265162,"line_start":106,"line_end":106,"column_start":5,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":1825},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","parent":null,"children":[{"krate":0,"index":1826},{"krate":0,"index":1829},{"krate":0,"index":1832},{"krate":0,"index":1835},{"krate":0,"index":1836},{"krate":0,"index":1839},{"krate":0,"index":1842},{"krate":0,"index":1845},{"krate":0,"index":1848},{"krate":0,"index":1849},{"krate":0,"index":1852},{"krate":0,"index":1855},{"krate":0,"index":1858},{"krate":0,"index":1861},{"krate":0,"index":1864},{"krate":0,"index":1867},{"krate":0,"index":1870},{"krate":0,"index":1873},{"krate":0,"index":1876},{"krate":0,"index":1879},{"krate":0,"index":1882},{"krate":0,"index":1885},{"krate":0,"index":1888},{"krate":0,"index":1891},{"krate":0,"index":1894},{"krate":0,"index":1897},{"krate":0,"index":1900}],"decl_id":null,"docs":" Convenience re-export of multiple traits.","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":5202,"byte_end":5237,"line_start":159,"line_end":159,"column_start":1,"column_end":36}},{"value":"/ Convenience re-export of multiple traits.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":266965,"byte_end":267010,"line_start":1,"line_end":1,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":267011,"byte_end":267014,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This allows a HAL user to conveniently import this module and have all the","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":267015,"byte_end":267093,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ helper traits already imported.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":267094,"byte_end":267129,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/ Otherwise the use of peripherals would require the import of the","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":267130,"byte_end":267198,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/ corresponding module and the import of the trait, which connects this HAL","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":267199,"byte_end":267276,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ to the autogenerated svd2rust API in [crate::pac].","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":267277,"byte_end":267331,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":267332,"byte_end":267335,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":267336,"byte_end":267349,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":267350,"byte_end":267353,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Consider the following code.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":267354,"byte_end":267386,"line_start":11,"line_end":11,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":267387,"byte_end":267390,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":267391,"byte_end":267398,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ #[entry]","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":267399,"byte_end":267411,"line_start":14,"line_end":14,"column_start":1,"column_end":13}},{"value":"/ fn main() -> ! {","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":267412,"byte_end":267432,"line_start":15,"line_end":15,"column_start":1,"column_end":21}},{"value":"/     let dp = pac::Peripherals::take().unwrap();","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":267433,"byte_end":267484,"line_start":16,"line_end":16,"column_start":1,"column_end":52}},{"value":"/     let gpiog = dp.GPIOG.split();","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":267485,"byte_end":267522,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/     let mut led1 = gpiog.pg13.into_push_pull_output();","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":267523,"byte_end":267581,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/     led1.set_high().unwrap();","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":267582,"byte_end":267615,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":267616,"byte_end":267621,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":267622,"byte_end":267629,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":267630,"byte_end":267633,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Without the prelude we would have to import the following traits:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":267634,"byte_end":267703,"line_start":23,"line_end":23,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":267704,"byte_end":267707,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":267708,"byte_end":267715,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ use stm32f4xx_hal::gpio::GpioExt; // for the split method.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":267716,"byte_end":267778,"line_start":26,"line_end":26,"column_start":1,"column_end":63}},{"value":"/ use embedded_hal::digital::v2::OutputPin; // for the set_high() function.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":267779,"byte_end":267856,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ // And more use-statements with more complex code.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":267857,"byte_end":267911,"line_start":28,"line_end":28,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":267912,"byte_end":267919,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":267920,"byte_end":267923,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ These imports are a bit unintuitive, because we can create the objects","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":267924,"byte_end":267998,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ without the import. But we need these traits to access most of their","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":267999,"byte_end":268071,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/ functions.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":268072,"byte_end":268086,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":268087,"byte_end":268090,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ The prelude module keeps the import section cleaner:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":268091,"byte_end":268147,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":268148,"byte_end":268155,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ use stm32f4xx_hal::prelude::*;","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":268156,"byte_end":268190,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\prelude.rs","byte_start":268191,"byte_end":268198,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":1903},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pwm","qualname":"::pwm","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm.rs","parent":null,"children":[{"krate":0,"index":1904},{"krate":0,"index":1905},{"krate":0,"index":1908},{"krate":0,"index":1911},{"krate":0,"index":1912},{"krate":0,"index":1914},{"krate":0,"index":1917},{"krate":0,"index":1918},{"krate":0,"index":1921},{"krate":0,"index":1924},{"krate":0,"index":1925},{"krate":0,"index":1926},{"krate":0,"index":1928},{"krate":0,"index":1931},{"krate":0,"index":1932},{"krate":0,"index":1935},{"krate":0,"index":1938},{"krate":0,"index":1941},{"krate":0,"index":1944},{"krate":0,"index":1945},{"krate":0,"index":1948},{"krate":0,"index":1951},{"krate":0,"index":1954},{"krate":0,"index":1957},{"krate":0,"index":1965},{"krate":0,"index":1968},{"krate":0,"index":1971},{"krate":0,"index":1974},{"krate":0,"index":1977},{"krate":0,"index":1979},{"krate":0,"index":1981},{"krate":0,"index":1983},{"krate":0,"index":1985},{"krate":0,"index":1990},{"krate":0,"index":5382},{"krate":0,"index":5393},{"krate":0,"index":5402},{"krate":0,"index":5411},{"krate":0,"index":5420},{"krate":0,"index":5429},{"krate":0,"index":5436},{"krate":0,"index":5443},{"krate":0,"index":5450},{"krate":0,"index":5457},{"krate":0,"index":5464},{"krate":0,"index":5471},{"krate":0,"index":5476},{"krate":0,"index":5481},{"krate":0,"index":5486},{"krate":0,"index":1991},{"krate":0,"index":1995},{"krate":0,"index":1999},{"krate":0,"index":2003},{"krate":0,"index":2007},{"krate":0,"index":2012},{"krate":0,"index":2017},{"krate":0,"index":2022},{"krate":0,"index":2027},{"krate":0,"index":2033},{"krate":0,"index":2039},{"krate":0,"index":2045},{"krate":0,"index":2051},{"krate":0,"index":2052},{"krate":0,"index":2053},{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":5491},{"krate":0,"index":5508},{"krate":0,"index":5515},{"krate":0,"index":5522},{"krate":0,"index":5529},{"krate":0,"index":5536},{"krate":0,"index":5543},{"krate":0,"index":5550},{"krate":0,"index":5557},{"krate":0,"index":5564},{"krate":0,"index":5578},{"krate":0,"index":5585},{"krate":0,"index":5592},{"krate":0,"index":5599},{"krate":0,"index":5606},{"krate":0,"index":5619},{"krate":0,"index":5626},{"krate":0,"index":5633},{"krate":0,"index":5697},{"krate":0,"index":5704},{"krate":0,"index":5711},{"krate":0,"index":5718},{"krate":0,"index":5725},{"krate":0,"index":5732},{"krate":0,"index":5739},{"krate":0,"index":5746},{"krate":0,"index":5649},{"krate":0,"index":5753},{"krate":0,"index":5760},{"krate":0,"index":5767},{"krate":0,"index":5774},{"krate":0,"index":5781},{"krate":0,"index":5788},{"krate":0,"index":5795},{"krate":0,"index":5802},{"krate":0,"index":5665},{"krate":0,"index":5809},{"krate":0,"index":5816},{"krate":0,"index":5823},{"krate":0,"index":5830},{"krate":0,"index":5837},{"krate":0,"index":5844},{"krate":0,"index":5851},{"krate":0,"index":5858},{"krate":0,"index":5681},{"krate":0,"index":5865},{"krate":0,"index":5872},{"krate":0,"index":5879},{"krate":0,"index":5886},{"krate":0,"index":5893},{"krate":0,"index":5900},{"krate":0,"index":5907},{"krate":0,"index":5914},{"krate":0,"index":5921},{"krate":0,"index":5934},{"krate":0,"index":5941}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":5255,"byte_end":5290,"line_start":161,"line_end":161,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":1957},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm.rs","byte_start":271238,"byte_end":271242,"line_start":45,"line_end":45,"column_start":11,"column_end":15},"name":"Pins","qualname":"::pwm::Pins","value":"Pins<TIM, P>","parent":null,"children":[{"krate":0,"index":1960},{"krate":0,"index":1961},{"krate":0,"index":1962},{"krate":0,"index":1963},{"krate":0,"index":1964}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1960},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm.rs","byte_start":271263,"byte_end":271265,"line_start":46,"line_end":46,"column_start":11,"column_end":13},"name":"C1","qualname":"::pwm::Pins::C1","value":"bool","parent":{"krate":0,"index":1957},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1961},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm.rs","byte_start":271291,"byte_end":271293,"line_start":47,"line_end":47,"column_start":11,"column_end":13},"name":"C2","qualname":"::pwm::Pins::C2","value":"bool","parent":{"krate":0,"index":1957},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1962},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm.rs","byte_start":271319,"byte_end":271321,"line_start":48,"line_end":48,"column_start":11,"column_end":13},"name":"C3","qualname":"::pwm::Pins::C3","value":"bool","parent":{"krate":0,"index":1957},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1963},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm.rs","byte_start":271347,"byte_end":271349,"line_start":49,"line_end":49,"column_start":11,"column_end":13},"name":"C4","qualname":"::pwm::Pins::C4","value":"bool","parent":{"krate":0,"index":1957},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1964},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm.rs","byte_start":271374,"byte_end":271382,"line_start":50,"line_end":50,"column_start":10,"column_end":18},"name":"Channels","qualname":"::pwm::Pins::Channels","value":"type Channels;","parent":{"krate":0,"index":1957},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1977},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm.rs","byte_start":271498,"byte_end":271500,"line_start":57,"line_end":57,"column_start":12,"column_end":14},"name":"C1","qualname":"::pwm::C1","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1979},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm.rs","byte_start":271513,"byte_end":271515,"line_start":58,"line_end":58,"column_start":12,"column_end":14},"name":"C2","qualname":"::pwm::C2","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1981},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm.rs","byte_start":271528,"byte_end":271530,"line_start":59,"line_end":59,"column_start":12,"column_end":14},"name":"C3","qualname":"::pwm::C3","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1983},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm.rs","byte_start":271543,"byte_end":271545,"line_start":60,"line_end":60,"column_start":12,"column_end":14},"name":"C4","qualname":"::pwm::C4","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1985},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm.rs","byte_start":271559,"byte_end":271570,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"PwmChannels","qualname":"::pwm::PwmChannels","value":"PwmChannels {  }","parent":null,"children":[{"krate":0,"index":1988},{"krate":0,"index":1989}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2056},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm_input.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pwm_input","qualname":"::pwm_input","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm_input.rs","parent":null,"children":[{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2065},{"krate":0,"index":2068},{"krate":0,"index":2071},{"krate":0,"index":2073},{"krate":0,"index":2076},{"krate":0,"index":2082},{"krate":0,"index":5948},{"krate":0,"index":5951},{"krate":0,"index":5966},{"krate":0,"index":5974},{"krate":0,"index":5977},{"krate":0,"index":5992},{"krate":0,"index":6000},{"krate":0,"index":6003},{"krate":0,"index":6018},{"krate":0,"index":6026},{"krate":0,"index":6029},{"krate":0,"index":6044},{"krate":0,"index":6052},{"krate":0,"index":6055},{"krate":0,"index":6070},{"krate":0,"index":6078},{"krate":0,"index":6081},{"krate":0,"index":6096}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":5304,"byte_end":5339,"line_start":163,"line_end":163,"column_start":1,"column_end":36}},{"value":"cfg(not(feature = \"stm32f410\"))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":5340,"byte_end":5374,"line_start":164,"line_end":164,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":2071},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm_input.rs","byte_start":290158,"byte_end":290162,"line_start":7,"line_end":7,"column_start":11,"column_end":15},"name":"Pins","qualname":"::pwm_input::Pins","value":"Pins<TIM>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2076},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm_input.rs","byte_start":291365,"byte_end":291373,"line_start":37,"line_end":37,"column_start":12,"column_end":20},"name":"PwmInput","qualname":"::pwm_input::PwmInput","value":"PwmInput {  }","parent":null,"children":[{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2081}],"decl_id":null,"docs":" Represents a TIMer configured as a PWM input.\n This peripheral will emit an interrupt on CC2 events, which occurs at two times in this mode:\n 1. When a new cycle is started: the duty cycle will be `1.00`\n 2. When the period is captured. the duty cycle will be an observable value.\n An example interrupt handler is provided:\n ```\n use stm32f4xx_hal::pac::TIM8;\n use stm32f4xx_hal::timer::Timer;\n use stm32f4xx_hal::pwm_input::PwmInput;\n use stm32f4xx_hal::gpio::gpioc::PC6;\n use stm32f4xx_hal::gpio::Alternate;","sig":null,"attributes":[{"value":"/ Represents a TIMer configured as a PWM input.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm_input.rs","byte_start":290291,"byte_end":290340,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"/ This peripheral will emit an interrupt on CC2 events, which occurs at two times in this mode:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm_input.rs","byte_start":290341,"byte_end":290438,"line_start":13,"line_end":13,"column_start":1,"column_end":98}},{"value":"/ 1. When a new cycle is started: the duty cycle will be `1.00`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm_input.rs","byte_start":290439,"byte_end":290504,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/ 2. When the period is captured. the duty cycle will be an observable value.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm_input.rs","byte_start":290505,"byte_end":290584,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ An example interrupt handler is provided:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm_input.rs","byte_start":290585,"byte_end":290630,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm_input.rs","byte_start":290631,"byte_end":290638,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use stm32f4xx_hal::pac::TIM8;","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm_input.rs","byte_start":290639,"byte_end":290672,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/ use stm32f4xx_hal::timer::Timer;","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm_input.rs","byte_start":290673,"byte_end":290709,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ use stm32f4xx_hal::pwm_input::PwmInput;","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm_input.rs","byte_start":290710,"byte_end":290753,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/ use stm32f4xx_hal::gpio::gpioc::PC6;","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm_input.rs","byte_start":290754,"byte_end":290794,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/ use stm32f4xx_hal::gpio::Alternate;","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm_input.rs","byte_start":290795,"byte_end":290834,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm_input.rs","byte_start":290835,"byte_end":290838,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ type Monitor = PwmInput<TIM8, PC6<Alternate<3>>>;","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm_input.rs","byte_start":290839,"byte_end":290892,"line_start":24,"line_end":24,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm_input.rs","byte_start":290893,"byte_end":290896,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ fn tim8_cc2(monitor: &Monitor) {","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm_input.rs","byte_start":290897,"byte_end":290933,"line_start":26,"line_end":26,"column_start":1,"column_end":37}},{"value":"/             let duty_clocks = monitor.get_duty_cycle_clocks();","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm_input.rs","byte_start":290934,"byte_end":291000,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/             let period_clocks = monitor.get_period_clocks();","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm_input.rs","byte_start":291001,"byte_end":291065,"line_start":28,"line_end":28,"column_start":1,"column_end":65}},{"value":"/             // check if this interrupt was caused by a capture at the wrong CC2,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm_input.rs","byte_start":291066,"byte_end":291150,"line_start":29,"line_end":29,"column_start":1,"column_end":85}},{"value":"/             // peripheral limitation.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm_input.rs","byte_start":291151,"byte_end":291192,"line_start":30,"line_end":30,"column_start":1,"column_end":42}},{"value":"/             if !monitor.is_valid_capture(){","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm_input.rs","byte_start":291193,"byte_end":291240,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"/                 return;","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm_input.rs","byte_start":291241,"byte_end":291268,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/             }","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm_input.rs","byte_start":291269,"byte_end":291286,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/             let duty = monitor.get_duty_cycle();","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm_input.rs","byte_start":291287,"byte_end":291339,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm_input.rs","byte_start":291340,"byte_end":291345,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm_input.rs","byte_start":291346,"byte_end":291353,"line_start":36,"line_end":36,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":2083},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\qei.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"qei","qualname":"::qei","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\qei.rs","parent":null,"children":[{"krate":0,"index":2084},{"krate":0,"index":2085},{"krate":0,"index":2086},{"krate":0,"index":2089},{"krate":0,"index":2092},{"krate":0,"index":2095},{"krate":0,"index":2098},{"krate":0,"index":2100},{"krate":0,"index":2103},{"krate":0,"index":2106},{"krate":0,"index":2110},{"krate":0,"index":2115},{"krate":0,"index":2120},{"krate":0,"index":2124},{"krate":0,"index":2130},{"krate":0,"index":2135},{"krate":0,"index":6104},{"krate":0,"index":6114},{"krate":0,"index":6124},{"krate":0,"index":6134},{"krate":0,"index":6144}],"decl_id":null,"docs":" # Quadrature Encoder Interface\n","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":5394,"byte_end":5429,"line_start":166,"line_end":166,"column_start":1,"column_end":36}},{"value":"/ # Quadrature Encoder Interface","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\qei.rs","byte_start":299109,"byte_end":299143,"line_start":1,"line_end":1,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":2098},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\qei.rs","byte_start":299222,"byte_end":299226,"line_start":8,"line_end":8,"column_start":11,"column_end":15},"name":"Pins","qualname":"::qei::Pins","value":"Pins<TIM>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2110},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\qei.rs","byte_start":299448,"byte_end":299451,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"Qei","qualname":"::qei::Qei","value":"Qei {  }","parent":null,"children":[{"krate":0,"index":2113},{"krate":0,"index":2114}],"decl_id":null,"docs":" Hardware quadrature encoder interface peripheral\n","sig":null,"attributes":[{"value":"/ Hardware quadrature encoder interface peripheral","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\qei.rs","byte_start":299384,"byte_end":299436,"line_start":19,"line_end":19,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2119},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\qei.rs","byte_start":299686,"byte_end":299689,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<Qei<TIM, (PC1, PC2)>>::new","value":"pub fn new(TIM, (PC1, PC2)) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures a TIM peripheral as a quadrature encoder interface input\n","sig":null,"attributes":[{"value":"/ Configures a TIM peripheral as a quadrature encoder interface input","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\qei.rs","byte_start":299603,"byte_end":299674,"line_start":30,"line_end":30,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2123},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\qei.rs","byte_start":300125,"byte_end":300132,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"release","qualname":"<Qei<TIM, PINS>>::release","value":"pub fn release(Self) -> (TIM, PINS)","parent":null,"children":[],"decl_id":null,"docs":" Releases the TIM peripheral and QEI pins\n","sig":null,"attributes":[{"value":"/ Releases the TIM peripheral and QEI pins","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\qei.rs","byte_start":300069,"byte_end":300113,"line_start":45,"line_end":45,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":2130},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\qei.rs","byte_start":300574,"byte_end":300582,"line_start":67,"line_end":67,"column_start":11,"column_end":19},"name":"Instance","qualname":"::qei::Instance","value":"Instance: crate::Sealed + rcc::Enable + rcc::Reset","parent":null,"children":[{"krate":0,"index":2131},{"krate":0,"index":2132},{"krate":0,"index":2133},{"krate":0,"index":2134}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2131},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\qei.rs","byte_start":300636,"byte_end":300641,"line_start":68,"line_end":68,"column_start":10,"column_end":15},"name":"Count","qualname":"::qei::Instance::Count","value":"type Count;","parent":{"krate":0,"index":2130},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2132},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\qei.rs","byte_start":300651,"byte_end":300660,"line_start":70,"line_end":70,"column_start":8,"column_end":17},"name":"setup_qei","qualname":"::qei::Instance::setup_qei","value":"pub fn setup_qei(&mut Self)","parent":{"krate":0,"index":2130},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2133},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\qei.rs","byte_start":300680,"byte_end":300690,"line_start":71,"line_end":71,"column_start":8,"column_end":18},"name":"read_count","qualname":"::qei::Instance::read_count","value":"pub fn read_count(&Self) -> Self::Count","parent":{"krate":0,"index":2130},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2134},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\qei.rs","byte_start":300721,"byte_end":300735,"line_start":72,"line_end":72,"column_start":8,"column_end":22},"name":"read_direction","qualname":"::qei::Instance::read_direction","value":"pub fn read_direction(&Self) -> bool","parent":{"krate":0,"index":2130},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2136},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rcc","qualname":"::rcc","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","parent":null,"children":[{"krate":0,"index":2137},{"krate":0,"index":2138},{"krate":0,"index":2141},{"krate":0,"index":2144},{"krate":0,"index":2145},{"krate":0,"index":2148},{"krate":0,"index":2151},{"krate":0,"index":2152},{"krate":0,"index":2154},{"krate":0,"index":2157},{"krate":0,"index":2160},{"krate":0,"index":2196},{"krate":0,"index":2205},{"krate":0,"index":2208},{"krate":0,"index":2210},{"krate":0,"index":2213},{"krate":0,"index":2216},{"krate":0,"index":2218},{"krate":0,"index":2220},{"krate":0,"index":2223},{"krate":0,"index":2227},{"krate":0,"index":2229},{"krate":0,"index":2233},{"krate":0,"index":2235},{"krate":0,"index":2239},{"krate":0,"index":2241},{"krate":0,"index":2245},{"krate":0,"index":2247},{"krate":0,"index":2251},{"krate":0,"index":2253},{"krate":0,"index":2255},{"krate":0,"index":2258},{"krate":0,"index":2261},{"krate":0,"index":2263},{"krate":0,"index":2265},{"krate":0,"index":2266},{"krate":0,"index":2267},{"krate":0,"index":2268},{"krate":0,"index":2269},{"krate":0,"index":2270},{"krate":0,"index":2280},{"krate":0,"index":2314},{"krate":0,"index":2320},{"krate":0,"index":2323},{"krate":0,"index":2325},{"krate":0,"index":2328},{"krate":0,"index":6517},{"krate":0,"index":6526},{"krate":0,"index":6528},{"krate":0,"index":2332}],"decl_id":null,"docs":" Clock configuration.","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":5443,"byte_end":5478,"line_start":168,"line_end":168,"column_start":1,"column_end":36}},{"value":"/ Clock configuration.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":302558,"byte_end":302582,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":302583,"byte_end":302586,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides functionality to configure the RCC to generate the requested clocks.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":302587,"byte_end":302680,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":302681,"byte_end":302684,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":302685,"byte_end":302698,"line_start":5,"line_end":5,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":302699,"byte_end":302702,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":302703,"byte_end":302710,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ let dp = pac::Peripherals::take().unwrap();","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":302711,"byte_end":302758,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/ let clocks = rcc","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":302759,"byte_end":302779,"line_start":9,"line_end":9,"column_start":1,"column_end":21}},{"value":"/     .cfgr","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":302780,"byte_end":302793,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"/     .use_hse(8.mhz())","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":302794,"byte_end":302819,"line_start":11,"line_end":11,"column_start":1,"column_end":26}},{"value":"/     .sysclk(168.mhz())","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":302820,"byte_end":302846,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/     .pclk1(24.mhz())","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":302847,"byte_end":302871,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/     .i2s_clk(86.mhz())","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":302872,"byte_end":302898,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/     .require_pll48clk()","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":302899,"byte_end":302926,"line_start":15,"line_end":15,"column_start":1,"column_end":28}},{"value":"/     .freeze();","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":302927,"byte_end":302945,"line_start":16,"line_end":16,"column_start":1,"column_end":19}},{"value":"/     // Test that the I2S clock is suitable for 48000KHz audio.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":302946,"byte_end":303012,"line_start":17,"line_end":17,"column_start":1,"column_end":67}},{"value":"/     assert!(clocks.i2s_clk().unwrap() == 48.mhz().into());","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":303013,"byte_end":303075,"line_start":18,"line_end":18,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":303076,"byte_end":303083,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":303084,"byte_end":303087,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Limitations","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":303088,"byte_end":303105,"line_start":21,"line_end":21,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":303106,"byte_end":303109,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Unlike the clock configuration tool provided by ST, the code does not extensively search all","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":303110,"byte_end":303206,"line_start":23,"line_end":23,"column_start":1,"column_end":97}},{"value":"/ possible configurations. Instead, it often relies on an iterative approach to reduce","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":303207,"byte_end":303295,"line_start":24,"line_end":24,"column_start":1,"column_end":89}},{"value":"/ compitational complexity. On most MCUs the code will first generate a configuration for the 48","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":303296,"byte_end":303394,"line_start":25,"line_end":25,"column_start":1,"column_end":99}},{"value":"/ MHz clock and the system clock without taking other requested clocks into account, even if the","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":303395,"byte_end":303493,"line_start":26,"line_end":26,"column_start":1,"column_end":99}},{"value":"/ accuracy of these clocks is affected. **If you specific accuracy requirements, you should","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":303494,"byte_end":303587,"line_start":27,"line_end":27,"column_start":1,"column_end":94}},{"value":"/ always check the resulting frequencies!**","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":303588,"byte_end":303633,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":303634,"byte_end":303637,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Whereas the hardware often supports flexible clock source selection and many clocks can be","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":303638,"byte_end":303732,"line_start":30,"line_end":30,"column_start":1,"column_end":95}},{"value":"/ sourced from multiple PLLs, the code implements a fixed mapping between PLLs and clocks. The 48","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":303733,"byte_end":303832,"line_start":31,"line_end":31,"column_start":1,"column_end":100}},{"value":"/ MHz clock is always generated by the main PLL, the I2S clocks are always generated by the I2S","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":303833,"byte_end":303930,"line_start":32,"line_end":32,"column_start":1,"column_end":98}},{"value":"/ PLL (unless a matching external clock input is provided), and similarly the SAI clocks are","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":303931,"byte_end":304025,"line_start":33,"line_end":33,"column_start":1,"column_end":95}},{"value":"/ always generated by the SAI PLL. It is therefore not possible to, for example, specify two","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":304026,"byte_end":304120,"line_start":34,"line_end":34,"column_start":1,"column_end":95}},{"value":"/ different I2S frequencies unless you also provide a matching I2S_CKIN signal for one of them.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":304121,"byte_end":304218,"line_start":35,"line_end":35,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":304219,"byte_end":304222,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Some MCUs have limited clock generation hardware and do not provide either I2S or SAI PLLs even","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":304223,"byte_end":304322,"line_start":37,"line_end":37,"column_start":1,"column_end":100}},{"value":"/ though I2S or SAI are available. On the STM32F410, the I2S clock is generated by the main PLL,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":304323,"byte_end":304421,"line_start":38,"line_end":38,"column_start":1,"column_end":99}},{"value":"/ and on the STM32F413/423 SAI clocks are generated by the I2S PLL. On these MCUs, the actual","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":304422,"byte_end":304517,"line_start":39,"line_end":39,"column_start":1,"column_end":96}},{"value":"/ frequencies may substantially deviate from the requested frequencies.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":304518,"byte_end":304591,"line_start":40,"line_end":40,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":2208},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":305093,"byte_end":305099,"line_start":67,"line_end":67,"column_start":11,"column_end":17},"name":"RccBus","qualname":"::rcc::RccBus","value":"RccBus: crate::Sealed","parent":null,"children":[{"krate":0,"index":2209}],"decl_id":null,"docs":" Bus associated to peripheral\n","sig":null,"attributes":[{"value":"/ Bus associated to peripheral","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":305050,"byte_end":305082,"line_start":66,"line_end":66,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":2209},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":305144,"byte_end":305147,"line_start":69,"line_end":69,"column_start":10,"column_end":13},"name":"Bus","qualname":"::rcc::RccBus::Bus","value":"type Bus;","parent":{"krate":0,"index":2208},"children":[],"decl_id":null,"docs":" Bus type;\n","sig":null,"attributes":[{"value":"/ Bus type;","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":305121,"byte_end":305134,"line_start":68,"line_end":68,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":2210},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":305192,"byte_end":305198,"line_start":73,"line_end":73,"column_start":11,"column_end":17},"name":"Enable","qualname":"::rcc::Enable","value":"Enable: RccBus","parent":null,"children":[{"krate":0,"index":2211},{"krate":0,"index":2212}],"decl_id":null,"docs":" Enable/disable peripheral\n","sig":null,"attributes":[{"value":"/ Enable/disable peripheral","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":305152,"byte_end":305181,"line_start":72,"line_end":72,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2211},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":305216,"byte_end":305222,"line_start":74,"line_end":74,"column_start":8,"column_end":14},"name":"enable","qualname":"::rcc::Enable::enable","value":"pub fn enable(&RccRB)","parent":{"krate":0,"index":2210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2212},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":305244,"byte_end":305251,"line_start":75,"line_end":75,"column_start":8,"column_end":15},"name":"disable","qualname":"::rcc::Enable::disable","value":"pub fn disable(&RccRB)","parent":{"krate":0,"index":2210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2213},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":305319,"byte_end":305327,"line_start":79,"line_end":79,"column_start":11,"column_end":19},"name":"LPEnable","qualname":"::rcc::LPEnable","value":"LPEnable: RccBus","parent":null,"children":[{"krate":0,"index":2214},{"krate":0,"index":2215}],"decl_id":null,"docs":" Low power enable/disable peripheral\n","sig":null,"attributes":[{"value":"/ Low power enable/disable peripheral","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":305269,"byte_end":305308,"line_start":78,"line_end":78,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2214},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":305345,"byte_end":305361,"line_start":80,"line_end":80,"column_start":8,"column_end":24},"name":"low_power_enable","qualname":"::rcc::LPEnable::low_power_enable","value":"pub fn low_power_enable(&RccRB)","parent":{"krate":0,"index":2213},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2215},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":305383,"byte_end":305400,"line_start":81,"line_end":81,"column_start":8,"column_end":25},"name":"low_power_disable","qualname":"::rcc::LPEnable::low_power_disable","value":"pub fn low_power_disable(&RccRB)","parent":{"krate":0,"index":2213},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2216},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":305449,"byte_end":305454,"line_start":85,"line_end":85,"column_start":11,"column_end":16},"name":"Reset","qualname":"::rcc::Reset","value":"Reset: RccBus","parent":null,"children":[{"krate":0,"index":2217}],"decl_id":null,"docs":" Reset peripheral\n","sig":null,"attributes":[{"value":"/ Reset peripheral","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":305418,"byte_end":305438,"line_start":84,"line_end":84,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2217},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":305472,"byte_end":305477,"line_start":86,"line_end":86,"column_start":8,"column_end":13},"name":"reset","qualname":"::rcc::Reset::reset","value":"pub fn reset(&RccRB)","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2218},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":305562,"byte_end":305568,"line_start":90,"line_end":90,"column_start":11,"column_end":17},"name":"RccExt","qualname":"::rcc::RccExt","value":"RccExt","parent":null,"children":[{"krate":0,"index":2219}],"decl_id":null,"docs":" Extension trait that constrains the `RCC` peripheral\n","sig":null,"attributes":[{"value":"/ Extension trait that constrains the `RCC` peripheral","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":305495,"byte_end":305551,"line_start":89,"line_end":89,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2219},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":305665,"byte_end":305674,"line_start":92,"line_end":92,"column_start":8,"column_end":17},"name":"constrain","qualname":"::rcc::RccExt::constrain","value":"pub fn constrain(Self) -> Rcc","parent":{"krate":0,"index":2218},"children":[],"decl_id":null,"docs":" Constrains the `RCC` peripheral so it plays nicely with the other abstractions\n","sig":null,"attributes":[{"value":"/ Constrains the `RCC` peripheral so it plays nicely with the other abstractions","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":305575,"byte_end":305657,"line_start":91,"line_end":91,"column_start":5,"column_end":87}}]},{"kind":"Trait","id":{"krate":0,"index":2220},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":305702,"byte_end":305712,"line_start":95,"line_end":95,"column_start":11,"column_end":21},"name":"GetBusFreq","qualname":"::rcc::GetBusFreq","value":"GetBusFreq","parent":null,"children":[{"krate":0,"index":2221},{"krate":0,"index":2222}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2221},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":305722,"byte_end":305735,"line_start":96,"line_end":96,"column_start":8,"column_end":21},"name":"get_frequency","qualname":"::rcc::GetBusFreq::get_frequency","value":"pub fn get_frequency(&Clocks) -> Hertz","parent":{"krate":0,"index":2220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2222},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":305770,"byte_end":305789,"line_start":97,"line_end":97,"column_start":8,"column_end":27},"name":"get_timer_frequency","qualname":"::rcc::GetBusFreq::get_timer_frequency","value":"pub fn get_timer_frequency(&Clocks) -> Hertz","parent":{"krate":0,"index":2220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2227},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":306196,"byte_end":306200,"line_start":116,"line_end":116,"column_start":12,"column_end":16},"name":"AHB1","qualname":"::rcc::AHB1","value":"AHB1 {  }","parent":null,"children":[{"krate":0,"index":2228}],"decl_id":null,"docs":" AMBA High-performance Bus 1 (AHB1) registers\n","sig":null,"attributes":[{"value":"/ AMBA High-performance Bus 1 (AHB1) registers","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":306136,"byte_end":306184,"line_start":115,"line_end":115,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2233},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":306613,"byte_end":306617,"line_start":137,"line_end":137,"column_start":12,"column_end":16},"name":"AHB2","qualname":"::rcc::AHB2","value":"AHB2 {  }","parent":null,"children":[{"krate":0,"index":2234}],"decl_id":null,"docs":" AMBA High-performance Bus 2 (AHB2) registers\n","sig":null,"attributes":[{"value":"/ AMBA High-performance Bus 2 (AHB2) registers","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":306518,"byte_end":306566,"line_start":135,"line_end":135,"column_start":1,"column_end":49}},{"value":"cfg(not(feature = \"stm32f410\"))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":306567,"byte_end":306601,"line_start":136,"line_end":136,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2239},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":307532,"byte_end":307536,"line_start":181,"line_end":181,"column_start":12,"column_end":16},"name":"APB1","qualname":"::rcc::APB1","value":"APB1 {  }","parent":null,"children":[{"krate":0,"index":2240}],"decl_id":null,"docs":" Advanced Peripheral Bus 1 (APB1) registers\n","sig":null,"attributes":[{"value":"/ Advanced Peripheral Bus 1 (APB1) registers","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":307474,"byte_end":307520,"line_start":180,"line_end":180,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":2245},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":307912,"byte_end":307916,"line_start":201,"line_end":201,"column_start":12,"column_end":16},"name":"APB2","qualname":"::rcc::APB2","value":"APB2 {  }","parent":null,"children":[{"krate":0,"index":2246}],"decl_id":null,"docs":" Advanced Peripheral Bus 2 (APB2) registers\n","sig":null,"attributes":[{"value":"/ Advanced Peripheral Bus 2 (APB2) registers","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":307854,"byte_end":307900,"line_start":200,"line_end":200,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":2263},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":311661,"byte_end":311664,"line_start":332,"line_end":332,"column_start":12,"column_end":15},"name":"Rcc","qualname":"::rcc::Rcc","value":"Rcc { cfgr }","parent":null,"children":[{"krate":0,"index":2264}],"decl_id":null,"docs":" Constrained RCC peripheral\n","sig":null,"attributes":[{"value":"/ Constrained RCC peripheral","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":311619,"byte_end":311649,"line_start":331,"line_end":331,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":2264},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":311675,"byte_end":311679,"line_start":333,"line_end":333,"column_start":9,"column_end":13},"name":"cfgr","qualname":"::rcc::Rcc::cfgr","value":"rcc::CFGR","parent":{"krate":0,"index":2263},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2265},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":311740,"byte_end":311743,"line_start":337,"line_end":337,"column_start":11,"column_end":14},"name":"HSI","qualname":"::rcc::HSI","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Built-in high speed clock frequency\n","sig":null,"attributes":[{"value":"/ Built-in high speed clock frequency","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":311690,"byte_end":311729,"line_start":336,"line_end":336,"column_start":1,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":2266},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":312261,"byte_end":312271,"line_start":358,"line_end":358,"column_start":11,"column_end":21},"name":"SYSCLK_MIN","qualname":"::rcc::SYSCLK_MIN","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Minimum system clock frequency\n","sig":null,"attributes":[{"value":"cfg(any(feature = \"stm32f401\", feature = \"stm32f405\", feature = \"stm32f407\",\nfeature = \"stm32f410\", feature = \"stm32f411\", feature = \"stm32f412\", feature =\n\"stm32f413\", feature = \"stm32f415\", feature = \"stm32f417\", feature =\n\"stm32f423\", feature = \"stm32f427\", feature = \"stm32f429\", feature =\n\"stm32f437\", feature = \"stm32f439\", feature = \"stm32f469\", feature =\n\"stm32f479\"))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":311770,"byte_end":312215,"line_start":339,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ Minimum system clock frequency","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":312216,"byte_end":312250,"line_start":357,"line_end":357,"column_start":1,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":2267},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":312902,"byte_end":312912,"line_start":385,"line_end":385,"column_start":11,"column_end":21},"name":"SYSCLK_MAX","qualname":"::rcc::SYSCLK_MAX","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Maximum system clock frequency\n","sig":null,"attributes":[{"value":"cfg(any(feature = \"stm32f410\", feature = \"stm32f411\", feature = \"stm32f412\",\nfeature = \"stm32f413\", feature = \"stm32f423\"))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":312708,"byte_end":312856,"line_start":377,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ Maximum system clock frequency","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":312857,"byte_end":312891,"line_start":384,"line_end":384,"column_start":1,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":2268},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":313444,"byte_end":313453,"line_start":408,"line_end":408,"column_start":11,"column_end":20},"name":"PCLK2_MAX","qualname":"::rcc::PCLK2_MAX","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Maximum APB2 peripheral clock frequency\n","sig":null,"attributes":[{"value":"cfg(any(feature = \"stm32f401\", feature = \"stm32f410\", feature = \"stm32f411\",\nfeature = \"stm32f412\", feature = \"stm32f413\", feature = \"stm32f423\"))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":313214,"byte_end":313389,"line_start":399,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ Maximum APB2 peripheral clock frequency","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":313390,"byte_end":313433,"line_start":407,"line_end":407,"column_start":1,"column_end":44}}]},{"kind":"Const","id":{"krate":0,"index":2269},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":313797,"byte_end":313806,"line_start":422,"line_end":422,"column_start":11,"column_end":20},"name":"PCLK1_MAX","qualname":"::rcc::PCLK1_MAX","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Maximum APB1 peripheral clock frequency\n","sig":null,"attributes":[{"value":"/ Maximum APB1 peripheral clock frequency","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":313743,"byte_end":313786,"line_start":421,"line_end":421,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":2270},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":313841,"byte_end":313845,"line_start":424,"line_end":424,"column_start":12,"column_end":16},"name":"CFGR","qualname":"::rcc::CFGR","value":"CFGR {  }","parent":null,"children":[{"krate":0,"index":2271},{"krate":0,"index":2272},{"krate":0,"index":2273},{"krate":0,"index":2274},{"krate":0,"index":2275},{"krate":0,"index":2276},{"krate":0,"index":2277},{"krate":0,"index":2278},{"krate":0,"index":2279}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2281},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":315722,"byte_end":315729,"line_start":493,"line_end":493,"column_start":12,"column_end":19},"name":"use_hse","qualname":"<CFGR>::use_hse","value":"pub fn use_hse<F>(Self, F) -> Self where F: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":" Uses HSE (external oscillator) instead of HSI (internal RC oscillator) as the clock source.\n Will result in a hang if an external oscillator is not connected or it fails to start.\n","sig":null,"attributes":[{"value":"/ Uses HSE (external oscillator) instead of HSI (internal RC oscillator) as the clock source.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":315520,"byte_end":315615,"line_start":491,"line_end":491,"column_start":5,"column_end":100}},{"value":"/ Will result in a hang if an external oscillator is not connected or it fails to start.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":315620,"byte_end":315710,"line_start":492,"line_end":492,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":2283},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":316259,"byte_end":316280,"line_start":508,"line_end":508,"column_start":12,"column_end":33},"name":"bypass_hse_oscillator","qualname":"<CFGR>::bypass_hse_oscillator","value":"pub fn bypass_hse_oscillator(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bypasses the high-speed external oscillator and uses an external clock input on the OSC_IN\n pin.","sig":null,"attributes":[{"value":"/ Bypasses the high-speed external oscillator and uses an external clock input on the OSC_IN","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":315864,"byte_end":315958,"line_start":501,"line_end":501,"column_start":5,"column_end":99}},{"value":"/ pin.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":315963,"byte_end":315971,"line_start":502,"line_end":502,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":315976,"byte_end":315979,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ For this configuration, the OSC_IN pin should be connected to a clock source with a","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":315984,"byte_end":316071,"line_start":504,"line_end":504,"column_start":5,"column_end":92}},{"value":"/ frequency specified in the call to use_hse(), and the OSC_OUT pin should not be connected.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":316076,"byte_end":316170,"line_start":505,"line_end":505,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":316175,"byte_end":316178,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ This function has no effect unless use_hse() is also called.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":316183,"byte_end":316247,"line_start":507,"line_end":507,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2284},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":316389,"byte_end":316393,"line_start":515,"line_end":515,"column_start":12,"column_end":16},"name":"hclk","qualname":"<CFGR>::hclk","value":"pub fn hclk<F>(Self, F) -> Self where F: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2286},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":316536,"byte_end":316541,"line_start":523,"line_end":523,"column_start":12,"column_end":17},"name":"pclk1","qualname":"<CFGR>::pclk1","value":"pub fn pclk1<F>(Self, F) -> Self where F: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2288},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":316685,"byte_end":316690,"line_start":531,"line_end":531,"column_start":12,"column_end":17},"name":"pclk2","qualname":"<CFGR>::pclk2","value":"pub fn pclk2<F>(Self, F) -> Self where F: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2290},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":316834,"byte_end":316840,"line_start":539,"line_end":539,"column_start":12,"column_end":18},"name":"sysclk","qualname":"<CFGR>::sysclk","value":"pub fn sysclk<F>(Self, F) -> Self where F: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2292},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":316985,"byte_end":317001,"line_start":547,"line_end":547,"column_start":12,"column_end":28},"name":"require_pll48clk","qualname":"<CFGR>::require_pll48clk","value":"pub fn require_pll48clk(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2293},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":317323,"byte_end":317331,"line_start":556,"line_end":556,"column_start":12,"column_end":20},"name":"i2s_ckin","qualname":"<CFGR>::i2s_ckin","value":"pub fn i2s_ckin<F>(Self, F) -> Self where F: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":" Declares that the selected frequency is available at the I2S clock input pin (I2S_CKIN).","sig":null,"attributes":[{"value":"/ Declares that the selected frequency is available at the I2S clock input pin (I2S_CKIN).","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":317076,"byte_end":317168,"line_start":552,"line_end":552,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":317173,"byte_end":317176,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ If this frequency matches the requested SAI or I2S frequencies, the external I2S clock is","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":317181,"byte_end":317274,"line_start":554,"line_end":554,"column_start":5,"column_end":98}},{"value":"/ used to generate the clocks.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":317279,"byte_end":317311,"line_start":555,"line_end":555,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2295},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":317969,"byte_end":317976,"line_start":580,"line_end":580,"column_start":12,"column_end":19},"name":"i2s_clk","qualname":"<CFGR>::i2s_clk","value":"pub fn i2s_clk<F>(Self, F) -> Self where F: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":" Selects an I2S clock frequency and enables the I2S clock.\n","sig":null,"attributes":[{"value":"/ Selects an I2S clock frequency and enables the I2S clock.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":317471,"byte_end":317532,"line_start":564,"line_end":564,"column_start":5,"column_end":66}},{"value":"cfg(any(feature = \"stm32f401\", feature = \"stm32f405\", feature = \"stm32f407\",\nfeature = \"stm32f410\", feature = \"stm32f411\", feature = \"stm32f415\", feature =\n\"stm32f417\", feature = \"stm32f427\", feature = \"stm32f429\", feature =\n\"stm32f437\", feature = \"stm32f439\", feature = \"stm32f469\", feature =\n\"stm32f479\"))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":317537,"byte_end":317957,"line_start":565,"line_end":579,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2304},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":331258,"byte_end":331264,"line_start":966,"line_end":966,"column_start":12,"column_end":18},"name":"freeze","qualname":"<CFGR>::freeze","value":"pub fn freeze(Self) -> Clocks","parent":null,"children":[],"decl_id":null,"docs":" Initialises the hardware according to CFGR state returning a Clocks instance.\n Panics if overclocking is attempted.\n","sig":null,"attributes":[{"value":"/ Initialises the hardware according to CFGR state returning a Clocks instance.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":331120,"byte_end":331201,"line_start":964,"line_end":964,"column_start":5,"column_end":86}},{"value":"/ Panics if overclocking is attempted.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":331206,"byte_end":331246,"line_start":965,"line_end":965,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2305},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":331604,"byte_end":331620,"line_start":977,"line_end":977,"column_start":19,"column_end":35},"name":"freeze_unchecked","qualname":"<CFGR>::freeze_unchecked","value":"pub unsafe fn freeze_unchecked(Self) -> Clocks","parent":null,"children":[],"decl_id":null,"docs":" Initialises the hardware according to CFGR state returning a Clocks instance.\n Allows overclocking.","sig":null,"attributes":[{"value":"/ Initialises the hardware according to CFGR state returning a Clocks instance.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":331330,"byte_end":331411,"line_start":970,"line_end":970,"column_start":5,"column_end":86}},{"value":"/ Allows overclocking.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":331416,"byte_end":331440,"line_start":971,"line_end":971,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":331445,"byte_end":331448,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":331453,"byte_end":331465,"line_start":973,"line_end":973,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":331470,"byte_end":331473,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ This method does not check if the clocks are bigger or smaller than the officially","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":331478,"byte_end":331564,"line_start":975,"line_end":975,"column_start":5,"column_end":91}},{"value":"/ recommended.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":331569,"byte_end":331585,"line_start":976,"line_end":976,"column_start":5,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":6517},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":347102,"byte_end":347108,"line_start":1505,"line_end":1505,"column_start":12,"column_end":18},"name":"Clocks","qualname":"::rcc::Clocks","value":"Clocks {  }","parent":null,"children":[{"krate":0,"index":6518},{"krate":0,"index":6519},{"krate":0,"index":6520},{"krate":0,"index":6521},{"krate":0,"index":6522},{"krate":0,"index":6523},{"krate":0,"index":6524},{"krate":0,"index":6525}],"decl_id":null,"docs":" Frozen clock frequencies","sig":null,"attributes":[{"value":"/ Frozen clock frequencies","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":346939,"byte_end":346967,"line_start":1501,"line_end":1501,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":346968,"byte_end":346971,"line_start":1502,"line_end":1502,"column_start":1,"column_end":4}},{"value":"/ The existence of this value indicates that the clock configuration can no longer be changed","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":346972,"byte_end":347067,"line_start":1503,"line_end":1503,"column_start":1,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":2333},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":348580,"byte_end":348584,"line_start":1566,"line_end":1566,"column_start":12,"column_end":16},"name":"hclk","qualname":"<Clocks>::hclk","value":"pub fn hclk(&Self) -> Hertz","parent":null,"children":[],"decl_id":null,"docs":" Returns the frequency of the AHB1\n","sig":null,"attributes":[{"value":"/ Returns the frequency of the AHB1","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":348531,"byte_end":348568,"line_start":1565,"line_end":1565,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2334},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":348681,"byte_end":348686,"line_start":1571,"line_end":1571,"column_start":12,"column_end":17},"name":"pclk1","qualname":"<Clocks>::pclk1","value":"pub fn pclk1(&Self) -> Hertz","parent":null,"children":[],"decl_id":null,"docs":" Returns the frequency of the APB1\n","sig":null,"attributes":[{"value":"/ Returns the frequency of the APB1","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":348632,"byte_end":348669,"line_start":1570,"line_end":1570,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2335},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":348784,"byte_end":348789,"line_start":1576,"line_end":1576,"column_start":12,"column_end":17},"name":"pclk2","qualname":"<Clocks>::pclk2","value":"pub fn pclk2(&Self) -> Hertz","parent":null,"children":[],"decl_id":null,"docs":" Returns the frequency of the APB2\n","sig":null,"attributes":[{"value":"/ Returns the frequency of the APB2","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":348735,"byte_end":348772,"line_start":1575,"line_end":1575,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2336},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":348887,"byte_end":348892,"line_start":1581,"line_end":1581,"column_start":12,"column_end":17},"name":"ppre1","qualname":"<Clocks>::ppre1","value":"pub fn ppre1(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the prescaler of the APB1\n","sig":null,"attributes":[{"value":"/ Returns the prescaler of the APB1","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":348838,"byte_end":348875,"line_start":1580,"line_end":1580,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2337},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":348987,"byte_end":348992,"line_start":1586,"line_end":1586,"column_start":12,"column_end":17},"name":"ppre2","qualname":"<Clocks>::ppre2","value":"pub fn ppre2(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the prescaler of the APB2\n","sig":null,"attributes":[{"value":"/ Returns the prescaler of the APB2","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":348938,"byte_end":348975,"line_start":1585,"line_end":1585,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2338},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":349089,"byte_end":349095,"line_start":1591,"line_end":1591,"column_start":12,"column_end":18},"name":"sysclk","qualname":"<Clocks>::sysclk","value":"pub fn sysclk(&Self) -> Hertz","parent":null,"children":[],"decl_id":null,"docs":" Returns the system (core) frequency\n","sig":null,"attributes":[{"value":"/ Returns the system (core) frequency","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":349038,"byte_end":349077,"line_start":1590,"line_end":1590,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2339},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":349206,"byte_end":349214,"line_start":1596,"line_end":1596,"column_start":12,"column_end":20},"name":"pll48clk","qualname":"<Clocks>::pll48clk","value":"pub fn pll48clk(&Self) -> Option<Hertz>","parent":null,"children":[],"decl_id":null,"docs":" Returns the frequency of the PLL48 clock line\n","sig":null,"attributes":[{"value":"/ Returns the frequency of the PLL48 clock line","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":349145,"byte_end":349194,"line_start":1595,"line_end":1595,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2340},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":349404,"byte_end":349421,"line_start":1602,"line_end":1602,"column_start":12,"column_end":29},"name":"is_pll48clk_valid","qualname":"<Clocks>::is_pll48clk_valid","value":"pub fn is_pll48clk_valid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the PLL48 clock is within USB\n specifications. It is required to use the USB functionality.\n","sig":null,"attributes":[{"value":"/ Returns true if the PLL48 clock is within USB","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":349274,"byte_end":349323,"line_start":1600,"line_end":1600,"column_start":5,"column_end":54}},{"value":"/ specifications. It is required to use the USB functionality.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":349328,"byte_end":349392,"line_start":1601,"line_end":1601,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2342},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":349824,"byte_end":349831,"line_start":1616,"line_end":1616,"column_start":12,"column_end":19},"name":"i2s_clk","qualname":"<Clocks>::i2s_clk","value":"pub fn i2s_clk(&Self) -> Option<Hertz>","parent":null,"children":[],"decl_id":null,"docs":" Returns the frequency of the I2S clock.\n","sig":null,"attributes":[{"value":"/ Returns the frequency of the I2S clock.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":349617,"byte_end":349660,"line_start":1609,"line_end":1609,"column_start":5,"column_end":48}},{"value":"cfg(not(any(feature = \"stm32f412\", feature = \"stm32f413\", feature =\n\"stm32f423\", feature = \"stm32f446\",)))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":349665,"byte_end":349812,"line_start":1610,"line_end":1615,"column_start":5,"column_end":9}}]},{"kind":"Mod","id":{"krate":0,"index":2343},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rtc.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rtc","qualname":"::rtc","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rtc.rs","parent":null,"children":[{"krate":0,"index":2344},{"krate":0,"index":2347},{"krate":0,"index":2348},{"krate":0,"index":2351},{"krate":0,"index":2354},{"krate":0,"index":2357},{"krate":0,"index":2360},{"krate":0,"index":2363},{"krate":0,"index":2366},{"krate":0,"index":2367},{"krate":0,"index":2370},{"krate":0,"index":2373},{"krate":0,"index":2376},{"krate":0,"index":2379},{"krate":0,"index":2382},{"krate":0,"index":2385},{"krate":0,"index":6529},{"krate":0,"index":6532},{"krate":0,"index":6534},{"krate":0,"index":6535},{"krate":0,"index":6537},{"krate":0,"index":6538},{"krate":0,"index":6540},{"krate":0,"index":6541},{"krate":0,"index":2388},{"krate":0,"index":2389},{"krate":0,"index":2391},{"krate":0,"index":2408},{"krate":0,"index":2451},{"krate":0,"index":2452},{"krate":0,"index":2453},{"krate":0,"index":2454},{"krate":0,"index":2455},{"krate":0,"index":2456},{"krate":0,"index":2458}],"decl_id":null,"docs":" Interface to the real time clock. See STM32F303 reference manual, section 27.\n For more details, see\n [ST AN4759](https:/www.st.com%2Fresource%2Fen%2Fapplication_note%2Fdm00226326-using-the-hardware-realtime-clock-rtc-and-the-tamper-management-unit-tamp-with-stm32-microcontrollers-stmicroelectronics.pdf&usg=AOvVaw3PzvL2TfYtwS32fw-Uv37h)\n","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":5492,"byte_end":5527,"line_start":170,"line_end":170,"column_start":1,"column_end":36}},{"value":"/ Interface to the real time clock. See STM32F303 reference manual, section 27.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rtc.rs","byte_start":375745,"byte_end":375826,"line_start":1,"line_end":1,"column_start":1,"column_end":82}},{"value":"/ For more details, see","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rtc.rs","byte_start":375827,"byte_end":375852,"line_start":2,"line_end":2,"column_start":1,"column_end":26}},{"value":"/ [ST AN4759](https:/www.st.com%2Fresource%2Fen%2Fapplication_note%2Fdm00226326-using-the-hardware-realtime-clock-rtc-and-the-tamper-management-unit-tamp-with-stm32-microcontrollers-stmicroelectronics.pdf&usg=AOvVaw3PzvL2TfYtwS32fw-Uv37h)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rtc.rs","byte_start":375853,"byte_end":376093,"line_start":3,"line_end":3,"column_start":1,"column_end":241}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6530},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rtc.rs","byte_start":376388,"byte_end":376404,"line_start":14,"line_end":14,"column_start":5,"column_end":21},"name":"InvalidInputData","qualname":"::rtc::Error::InvalidInputData","value":"Error::InvalidInputData","parent":{"krate":0,"index":6529},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6529},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rtc.rs","byte_start":376376,"byte_end":376381,"line_start":13,"line_end":13,"column_start":10,"column_end":15},"name":"Error","qualname":"::rtc::Error","value":"pub enum Error { InvalidInputData, }","parent":null,"children":[{"krate":0,"index":6530}],"decl_id":null,"docs":" Invalid input error\n","sig":null,"attributes":[{"value":"/ Invalid input error","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rtc.rs","byte_start":376298,"byte_end":376321,"line_start":11,"line_end":11,"column_start":1,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":2388},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rtc.rs","byte_start":376419,"byte_end":376427,"line_start":17,"line_end":17,"column_start":11,"column_end":19},"name":"LSE_BITS","qualname":"::rtc::LSE_BITS","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2389},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rtc.rs","byte_start":376452,"byte_end":376455,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"Rtc","qualname":"::rtc::Rtc","value":"Rtc { regs }","parent":null,"children":[{"krate":0,"index":2390}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2390},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rtc.rs","byte_start":376466,"byte_end":376470,"line_start":20,"line_end":20,"column_start":9,"column_end":13},"name":"regs","qualname":"::rtc::Rtc::regs","value":"stm32f4::stm32f411::RTC","parent":{"krate":0,"index":2389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2392},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rtc.rs","byte_start":376933,"byte_end":376936,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<Rtc>::new","value":"pub fn new(RTC, u16, u8, bool, &mut PWR) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create and enable a new RTC, and configure its clock source and prescalers.\n From AN4759, Table 7, when using the LSE (The only clock source this module\n supports currently), set `prediv_s` to 255, and `prediv_a` to 127 to get a\n calendar clock of 1Hz.\n The `bypass` argument is `true` if you're using an external oscillator that\n doesn't connect to `OSC32_IN`, such as a MEMS resonator.\n","sig":null,"attributes":[{"value":"/ Create and enable a new RTC, and configure its clock source and prescalers.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rtc.rs","byte_start":376495,"byte_end":376574,"line_start":24,"line_end":24,"column_start":5,"column_end":84}},{"value":"/ From AN4759, Table 7, when using the LSE (The only clock source this module","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rtc.rs","byte_start":376579,"byte_end":376658,"line_start":25,"line_end":25,"column_start":5,"column_end":84}},{"value":"/ supports currently), set `prediv_s` to 255, and `prediv_a` to 127 to get a","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rtc.rs","byte_start":376663,"byte_end":376741,"line_start":26,"line_end":26,"column_start":5,"column_end":83}},{"value":"/ calendar clock of 1Hz.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rtc.rs","byte_start":376746,"byte_end":376772,"line_start":27,"line_end":27,"column_start":5,"column_end":31}},{"value":"/ The `bypass` argument is `true` if you're using an external oscillator that","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rtc.rs","byte_start":376777,"byte_end":376856,"line_start":28,"line_end":28,"column_start":5,"column_end":84}},{"value":"/ doesn't connect to `OSC32_IN`, such as a MEMS resonator.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rtc.rs","byte_start":376861,"byte_end":376921,"line_start":29,"line_end":29,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2396},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rtc.rs","byte_start":378072,"byte_end":378083,"line_start":69,"line_end":69,"column_start":12,"column_end":23},"name":"set_24h_fmt","qualname":"<Rtc>::set_24h_fmt","value":"pub fn set_24h_fmt(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Sets calendar clock to 24 hr format\n","sig":null,"attributes":[{"value":"/ Sets calendar clock to 24 hr format","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rtc.rs","byte_start":378021,"byte_end":378060,"line_start":68,"line_end":68,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2398},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rtc.rs","byte_start":378215,"byte_end":378226,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"set_12h_fmt","qualname":"<Rtc>::set_12h_fmt","value":"pub fn set_12h_fmt(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Sets calendar clock to 12 hr format\n","sig":null,"attributes":[{"value":"/ Sets calendar clock to 12 hr format","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rtc.rs","byte_start":378164,"byte_end":378203,"line_start":72,"line_end":72,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2400},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rtc.rs","byte_start":378357,"byte_end":378367,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"is_24h_fmt","qualname":"<Rtc>::is_24h_fmt","value":"pub fn is_24h_fmt(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Reads current hour format selection\n","sig":null,"attributes":[{"value":"/ Reads current hour format selection","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rtc.rs","byte_start":378306,"byte_end":378345,"line_start":77,"line_end":77,"column_start":5,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":2459},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"serial","qualname":"::serial","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","parent":null,"children":[{"krate":0,"index":2460},{"krate":0,"index":2463},{"krate":0,"index":2464},{"krate":0,"index":2466},{"krate":0,"index":2469},{"krate":0,"index":2472},{"krate":0,"index":2473},{"krate":0,"index":2476},{"krate":0,"index":2479},{"krate":0,"index":2480},{"krate":0,"index":2481},{"krate":0,"index":2483},{"krate":0,"index":2486},{"krate":0,"index":2489},{"krate":0,"index":2492},{"krate":0,"index":2493},{"krate":0,"index":2496},{"krate":0,"index":2499},{"krate":0,"index":2502},{"krate":0,"index":2503},{"krate":0,"index":2506},{"krate":0,"index":2509},{"krate":0,"index":2512},{"krate":0,"index":2515},{"krate":0,"index":2516},{"krate":0,"index":2518},{"krate":0,"index":2521},{"krate":0,"index":6543},{"krate":0,"index":6552},{"krate":0,"index":6554},{"krate":0,"index":6555},{"krate":0,"index":6557},{"krate":0,"index":6558},{"krate":0,"index":6560},{"krate":0,"index":6561},{"krate":0,"index":2524},{"krate":0,"index":2531},{"krate":0,"index":2584},{"krate":0,"index":2586},{"krate":0,"index":2589},{"krate":0,"index":2592},{"krate":0,"index":2596},{"krate":0,"index":2597},{"krate":0,"index":2598},{"krate":0,"index":2602},{"krate":0,"index":2606},{"krate":0,"index":6567},{"krate":0,"index":6571},{"krate":0,"index":6575},{"krate":0,"index":6579},{"krate":0,"index":6583},{"krate":0,"index":6587},{"krate":0,"index":6591},{"krate":0,"index":6595},{"krate":0,"index":6599},{"krate":0,"index":6603},{"krate":0,"index":6607},{"krate":0,"index":6611},{"krate":0,"index":6615},{"krate":0,"index":6619},{"krate":0,"index":2607},{"krate":0,"index":2615},{"krate":0,"index":2620},{"krate":0,"index":2625},{"krate":0,"index":2640},{"krate":0,"index":2649},{"krate":0,"index":2654},{"krate":0,"index":2659},{"krate":0,"index":2664},{"krate":0,"index":2669},{"krate":0,"index":2684},{"krate":0,"index":2691},{"krate":0,"index":2698},{"krate":0,"index":2717},{"krate":0,"index":2721},{"krate":0,"index":2725},{"krate":0,"index":2731},{"krate":0,"index":2736},{"krate":0,"index":2740},{"krate":0,"index":2744},{"krate":0,"index":2751},{"krate":0,"index":2755},{"krate":0,"index":2760},{"krate":0,"index":2766},{"krate":0,"index":2771},{"krate":0,"index":2776},{"krate":0,"index":2782},{"krate":0,"index":2788},{"krate":0,"index":2793},{"krate":0,"index":2796},{"krate":0,"index":2799},{"krate":0,"index":6623},{"krate":0,"index":6633},{"krate":0,"index":6640},{"krate":0,"index":6650},{"krate":0,"index":6657},{"krate":0,"index":6667},{"krate":0,"index":2800},{"krate":0,"index":2804}],"decl_id":null,"docs":"\n Asynchronous serial communication using UART/USART peripherals","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":5637,"byte_end":5672,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":390254,"byte_end":390257,"line_start":1,"line_end":1,"column_start":1,"column_end":4}},{"value":"/ Asynchronous serial communication using UART/USART peripherals","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":390258,"byte_end":390324,"line_start":2,"line_end":2,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":390325,"byte_end":390328,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ # Word length","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":390329,"byte_end":390346,"line_start":4,"line_end":4,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":390347,"byte_end":390350,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ By default, the UART/USART uses 8 data bits. The `Serial`, `Rx`, and `Tx` structs implement","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":390351,"byte_end":390446,"line_start":6,"line_end":6,"column_start":1,"column_end":96}},{"value":"/ the embedded-hal read and write traits with `u8` as the word type.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":390447,"byte_end":390517,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":390518,"byte_end":390521,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ You can also configure the hardware to use 9 data bits with the `Config` `wordlength_9()`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":390522,"byte_end":390615,"line_start":9,"line_end":9,"column_start":1,"column_end":94}},{"value":"/ function. After creating a `Serial` with this option, use the `with_u16_data()` function to","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":390616,"byte_end":390711,"line_start":10,"line_end":10,"column_start":1,"column_end":96}},{"value":"/ convert the `Serial<_, _, u8>` object into a `Serial<_, _, u16>` that can send and receive","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":390712,"byte_end":390806,"line_start":11,"line_end":11,"column_start":1,"column_end":95}},{"value":"/ `u16`s.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":390807,"byte_end":390818,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":390819,"byte_end":390822,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ In this mode, the `Serial<_, _, u16>`, `Rx<_, u16>`, and `Tx<_, u16>` structs instead implement","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":390823,"byte_end":390922,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ the embedded-hal read and write traits with `u16` as the word type. You can use these","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":390923,"byte_end":391012,"line_start":15,"line_end":15,"column_start":1,"column_end":90}},{"value":"/ implementations for 9-bit words.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":391013,"byte_end":391049,"line_start":16,"line_end":16,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":391050,"byte_end":391053,"line_start":17,"line_end":17,"column_start":1,"column_end":4}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6544},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392158,"byte_end":392165,"line_start":71,"line_end":71,"column_start":5,"column_end":12},"name":"Framing","qualname":"::serial::Error::Framing","value":"Error::Framing","parent":{"krate":0,"index":6543},"children":[],"decl_id":null,"docs":" Framing error\n","sig":null,"attributes":[{"value":"/ Framing error","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392136,"byte_end":392153,"line_start":70,"line_end":70,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6546},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392191,"byte_end":392196,"line_start":73,"line_end":73,"column_start":5,"column_end":10},"name":"Noise","qualname":"::serial::Error::Noise","value":"Error::Noise","parent":{"krate":0,"index":6543},"children":[],"decl_id":null,"docs":" Noise error\n","sig":null,"attributes":[{"value":"/ Noise error","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392171,"byte_end":392186,"line_start":72,"line_end":72,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6548},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392228,"byte_end":392235,"line_start":75,"line_end":75,"column_start":5,"column_end":12},"name":"Overrun","qualname":"::serial::Error::Overrun","value":"Error::Overrun","parent":{"krate":0,"index":6543},"children":[],"decl_id":null,"docs":" RX buffer overrun\n","sig":null,"attributes":[{"value":"/ RX buffer overrun","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392202,"byte_end":392223,"line_start":74,"line_end":74,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6550},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392268,"byte_end":392274,"line_start":77,"line_end":77,"column_start":5,"column_end":11},"name":"Parity","qualname":"::serial::Error::Parity","value":"Error::Parity","parent":{"krate":0,"index":6543},"children":[],"decl_id":null,"docs":" Parity check error\n","sig":null,"attributes":[{"value":"/ Parity check error","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392241,"byte_end":392263,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Enum","id":{"krate":0,"index":6543},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392124,"byte_end":392129,"line_start":69,"line_end":69,"column_start":10,"column_end":15},"name":"Error","qualname":"::serial::Error","value":"pub enum Error { Framing, Noise, Overrun, Parity, }","parent":null,"children":[{"krate":0,"index":6544},{"krate":0,"index":6546},{"krate":0,"index":6548},{"krate":0,"index":6550}],"decl_id":null,"docs":" Serial error\n","sig":null,"attributes":[{"value":"/ Serial error","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392035,"byte_end":392051,"line_start":66,"line_end":66,"column_start":1,"column_end":17}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392052,"byte_end":392069,"line_start":67,"line_end":67,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2525},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392355,"byte_end":392359,"line_start":83,"line_end":83,"column_start":5,"column_end":9},"name":"Rxne","qualname":"::serial::Event::Rxne","value":"Event::Rxne","parent":{"krate":0,"index":2524},"children":[],"decl_id":null,"docs":" New data has been received\n","sig":null,"attributes":[{"value":"/ New data has been received","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392320,"byte_end":392350,"line_start":82,"line_end":82,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2527},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392394,"byte_end":392397,"line_start":85,"line_end":85,"column_start":5,"column_end":8},"name":"Txe","qualname":"::serial::Event::Txe","value":"Event::Txe","parent":{"krate":0,"index":2524},"children":[],"decl_id":null,"docs":" New data can be sent\n","sig":null,"attributes":[{"value":"/ New data can be sent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392365,"byte_end":392389,"line_start":84,"line_end":84,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2529},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392436,"byte_end":392440,"line_start":87,"line_end":87,"column_start":5,"column_end":9},"name":"Idle","qualname":"::serial::Event::Idle","value":"Event::Idle","parent":{"krate":0,"index":2524},"children":[],"decl_id":null,"docs":" Idle line state detected\n","sig":null,"attributes":[{"value":"/ Idle line state detected","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392403,"byte_end":392431,"line_start":86,"line_end":86,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":2524},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392308,"byte_end":392313,"line_start":81,"line_end":81,"column_start":10,"column_end":15},"name":"Event","qualname":"::serial::Event","value":"pub enum Event { Rxne, Txe, Idle, }","parent":null,"children":[{"krate":0,"index":2525},{"krate":0,"index":2527},{"krate":0,"index":2529}],"decl_id":null,"docs":" Interrupt event\n","sig":null,"attributes":[{"value":"/ Interrupt event","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392279,"byte_end":392298,"line_start":80,"line_end":80,"column_start":1,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":2531},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392453,"byte_end":392459,"line_start":90,"line_end":90,"column_start":9,"column_end":15},"name":"config","qualname":"::serial::config","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","parent":null,"children":[{"krate":0,"index":2532},{"krate":0,"index":2533},{"krate":0,"index":2535},{"krate":0,"index":2538},{"krate":0,"index":2543},{"krate":0,"index":2550},{"krate":0,"index":2559},{"krate":0,"index":2568},{"krate":0,"index":2574},{"krate":0,"index":6563},{"krate":0,"index":6565},{"krate":0,"index":2582}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2539},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392552,"byte_end":392561,"line_start":95,"line_end":95,"column_start":9,"column_end":18},"name":"DataBits8","qualname":"::serial::config::WordLength::DataBits8","value":"WordLength::DataBits8","parent":{"krate":0,"index":2538},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2541},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392571,"byte_end":392580,"line_start":96,"line_end":96,"column_start":9,"column_end":18},"name":"DataBits9","qualname":"::serial::config::WordLength::DataBits9","value":"WordLength::DataBits9","parent":{"krate":0,"index":2538},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2538},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392531,"byte_end":392541,"line_start":94,"line_end":94,"column_start":14,"column_end":24},"name":"WordLength","qualname":"::serial::config::WordLength","value":"pub enum WordLength { DataBits8, DataBits9, }","parent":null,"children":[{"krate":0,"index":2539},{"krate":0,"index":2541}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2544},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392619,"byte_end":392629,"line_start":100,"line_end":100,"column_start":9,"column_end":19},"name":"ParityNone","qualname":"::serial::config::Parity::ParityNone","value":"Parity::ParityNone","parent":{"krate":0,"index":2543},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2546},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392639,"byte_end":392649,"line_start":101,"line_end":101,"column_start":9,"column_end":19},"name":"ParityEven","qualname":"::serial::config::Parity::ParityEven","value":"Parity::ParityEven","parent":{"krate":0,"index":2543},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2548},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392659,"byte_end":392668,"line_start":102,"line_end":102,"column_start":9,"column_end":18},"name":"ParityOdd","qualname":"::serial::config::Parity::ParityOdd","value":"Parity::ParityOdd","parent":{"krate":0,"index":2543},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2543},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392602,"byte_end":392608,"line_start":99,"line_end":99,"column_start":14,"column_end":20},"name":"Parity","qualname":"::serial::config::Parity","value":"pub enum Parity { ParityNone, ParityEven, ParityOdd, }","parent":null,"children":[{"krate":0,"index":2544},{"krate":0,"index":2546},{"krate":0,"index":2548}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2551},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392739,"byte_end":392744,"line_start":107,"line_end":107,"column_start":9,"column_end":14},"name":"STOP1","qualname":"::serial::config::StopBits::STOP1","value":"StopBits::STOP1","parent":{"krate":0,"index":2550},"children":[],"decl_id":null,"docs":"1 stop bit\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2553},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392787,"byte_end":392794,"line_start":109,"line_end":109,"column_start":9,"column_end":16},"name":"STOP0P5","qualname":"::serial::config::StopBits::STOP0P5","value":"StopBits::STOP0P5","parent":{"krate":0,"index":2550},"children":[],"decl_id":null,"docs":"0.5 stop bits\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2555},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392835,"byte_end":392840,"line_start":111,"line_end":111,"column_start":9,"column_end":14},"name":"STOP2","qualname":"::serial::config::StopBits::STOP2","value":"StopBits::STOP2","parent":{"krate":0,"index":2550},"children":[],"decl_id":null,"docs":"2 stop bits\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2557},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392883,"byte_end":392890,"line_start":113,"line_end":113,"column_start":9,"column_end":16},"name":"STOP1P5","qualname":"::serial::config::StopBits::STOP1P5","value":"StopBits::STOP1P5","parent":{"krate":0,"index":2550},"children":[],"decl_id":null,"docs":"1.5 stop bits\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2550},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392690,"byte_end":392698,"line_start":105,"line_end":105,"column_start":14,"column_end":22},"name":"StopBits","qualname":"::serial::config::StopBits","value":"pub enum StopBits { STOP1, STOP0P5, STOP2, STOP1P5, }","parent":null,"children":[{"krate":0,"index":2551},{"krate":0,"index":2553},{"krate":0,"index":2555},{"krate":0,"index":2557}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2560},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392932,"byte_end":392936,"line_start":117,"line_end":117,"column_start":9,"column_end":13},"name":"None","qualname":"::serial::config::DmaConfig::None","value":"DmaConfig::None","parent":{"krate":0,"index":2559},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2562},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392946,"byte_end":392948,"line_start":118,"line_end":118,"column_start":9,"column_end":11},"name":"Tx","qualname":"::serial::config::DmaConfig::Tx","value":"DmaConfig::Tx","parent":{"krate":0,"index":2559},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2564},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392958,"byte_end":392960,"line_start":119,"line_end":119,"column_start":9,"column_end":11},"name":"Rx","qualname":"::serial::config::DmaConfig::Rx","value":"DmaConfig::Rx","parent":{"krate":0,"index":2559},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2566},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392970,"byte_end":392974,"line_start":120,"line_end":120,"column_start":9,"column_end":13},"name":"TxRx","qualname":"::serial::config::DmaConfig::TxRx","value":"DmaConfig::TxRx","parent":{"krate":0,"index":2559},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2559},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392912,"byte_end":392921,"line_start":116,"line_end":116,"column_start":14,"column_end":23},"name":"DmaConfig","qualname":"::serial::config::DmaConfig","value":"pub enum DmaConfig { None, Tx, Rx, TxRx, }","parent":null,"children":[{"krate":0,"index":2560},{"krate":0,"index":2562},{"krate":0,"index":2564},{"krate":0,"index":2566}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2568},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":392998,"byte_end":393004,"line_start":123,"line_end":123,"column_start":16,"column_end":22},"name":"Config","qualname":"::serial::config::Config","value":"Config { baudrate, wordlength, parity, stopbits, dma }","parent":null,"children":[{"krate":0,"index":2569},{"krate":0,"index":2570},{"krate":0,"index":2571},{"krate":0,"index":2572},{"krate":0,"index":2573}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2569},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":393019,"byte_end":393027,"line_start":124,"line_end":124,"column_start":13,"column_end":21},"name":"baudrate","qualname":"::serial::config::Config::baudrate","value":"time::Bps","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2570},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":393046,"byte_end":393056,"line_start":125,"line_end":125,"column_start":13,"column_end":23},"name":"wordlength","qualname":"::serial::config::Config::wordlength","value":"serial::config::WordLength","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2571},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":393082,"byte_end":393088,"line_start":126,"line_end":126,"column_start":13,"column_end":19},"name":"parity","qualname":"::serial::config::Config::parity","value":"serial::config::Parity","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2572},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":393110,"byte_end":393118,"line_start":127,"line_end":127,"column_start":13,"column_end":21},"name":"stopbits","qualname":"::serial::config::Config::stopbits","value":"serial::config::StopBits","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2573},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":393142,"byte_end":393145,"line_start":128,"line_end":128,"column_start":13,"column_end":16},"name":"dma","qualname":"::serial::config::Config::dma","value":"serial::config::DmaConfig","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2575},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":393198,"byte_end":393206,"line_start":132,"line_end":132,"column_start":16,"column_end":24},"name":"baudrate","qualname":"<Config>::baudrate","value":"pub fn baudrate(Self, Bps) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2576},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":393323,"byte_end":393334,"line_start":137,"line_end":137,"column_start":16,"column_end":27},"name":"parity_none","qualname":"<Config>::parity_none","value":"pub fn parity_none(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2577},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":393444,"byte_end":393455,"line_start":142,"line_end":142,"column_start":16,"column_end":27},"name":"parity_even","qualname":"<Config>::parity_even","value":"pub fn parity_even(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2578},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":393565,"byte_end":393575,"line_start":147,"line_end":147,"column_start":16,"column_end":26},"name":"parity_odd","qualname":"<Config>::parity_odd","value":"pub fn parity_odd(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2579},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":393684,"byte_end":393696,"line_start":152,"line_end":152,"column_start":16,"column_end":28},"name":"wordlength_8","qualname":"<Config>::wordlength_8","value":"pub fn wordlength_8(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2580},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":393813,"byte_end":393825,"line_start":157,"line_end":157,"column_start":16,"column_end":28},"name":"wordlength_9","qualname":"<Config>::wordlength_9","value":"pub fn wordlength_9(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2581},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":393942,"byte_end":393950,"line_start":162,"line_end":162,"column_start":16,"column_end":24},"name":"stopbits","qualname":"<Config>::stopbits","value":"pub fn stopbits(Self, StopBits) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6563},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":394099,"byte_end":394112,"line_start":169,"line_end":169,"column_start":16,"column_end":29},"name":"InvalidConfig","qualname":"::serial::config::InvalidConfig","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2584},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":394490,"byte_end":394494,"line_start":185,"line_end":185,"column_start":11,"column_end":15},"name":"Pins","qualname":"::serial::Pins","value":"Pins<USART>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2586},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":394515,"byte_end":394520,"line_start":186,"line_end":186,"column_start":11,"column_end":16},"name":"PinTx","qualname":"::serial::PinTx","value":"PinTx<USART>","parent":null,"children":[{"krate":0,"index":2588}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2588},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":394539,"byte_end":394540,"line_start":187,"line_end":187,"column_start":10,"column_end":11},"name":"A","qualname":"::serial::PinTx::A","value":"type A;","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2589},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":394554,"byte_end":394559,"line_start":189,"line_end":189,"column_start":11,"column_end":16},"name":"PinRx","qualname":"::serial::PinRx","value":"PinRx<USART>","parent":null,"children":[{"krate":0,"index":2591}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2591},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":394578,"byte_end":394579,"line_start":190,"line_end":190,"column_start":10,"column_end":11},"name":"A","qualname":"::serial::PinRx::A","value":"type A;","parent":{"krate":0,"index":2589},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2596},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":394746,"byte_end":394750,"line_start":201,"line_end":201,"column_start":10,"column_end":14},"name":"NoTx","qualname":"::serial::NoTx","value":"NoPin","parent":null,"children":[],"decl_id":null,"docs":" A filler type for when the Tx pin is unnecessary\n","sig":null,"attributes":[{"value":"/ A filler type for when the Tx pin is unnecessary","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":394684,"byte_end":394736,"line_start":200,"line_end":200,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":2597},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":394822,"byte_end":394826,"line_start":203,"line_end":203,"column_start":10,"column_end":14},"name":"NoRx","qualname":"::serial::NoRx","value":"NoPin","parent":null,"children":[],"decl_id":null,"docs":" A filler type for when the Rx pin is unnecessary\n","sig":null,"attributes":[{"value":"/ A filler type for when the Rx pin is unnecessary","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":394760,"byte_end":394812,"line_start":202,"line_end":202,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":2607},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":404408,"byte_end":404414,"line_start":541,"line_end":541,"column_start":12,"column_end":18},"name":"Serial","qualname":"::serial::Serial","value":"Serial {  }","parent":null,"children":[{"krate":0,"index":2611},{"krate":0,"index":2612},{"krate":0,"index":2613},{"krate":0,"index":2614}],"decl_id":null,"docs":" Serial abstraction\n","sig":null,"attributes":[{"value":"/ Serial abstraction","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":404374,"byte_end":404396,"line_start":540,"line_end":540,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2615},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":404559,"byte_end":404561,"line_start":549,"line_end":549,"column_start":12,"column_end":14},"name":"Rx","qualname":"::serial::Rx","value":"Rx {  }","parent":null,"children":[{"krate":0,"index":2618},{"krate":0,"index":2619}],"decl_id":null,"docs":" Serial receiver\n","sig":null,"attributes":[{"value":"/ Serial receiver","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":404528,"byte_end":404547,"line_start":548,"line_end":548,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2620},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":404681,"byte_end":404683,"line_start":555,"line_end":555,"column_start":12,"column_end":14},"name":"Tx","qualname":"::serial::Tx","value":"Tx {  }","parent":null,"children":[{"krate":0,"index":2623},{"krate":0,"index":2624}],"decl_id":null,"docs":" Serial transmitter\n","sig":null,"attributes":[{"value":"/ Serial transmitter","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":404647,"byte_end":404669,"line_start":554,"line_end":554,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2629},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":405149,"byte_end":405155,"line_start":575,"line_end":575,"column_start":12,"column_end":18},"name":"listen","qualname":"<Rx<USART, WORD>>::listen","value":"pub fn listen(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Start listening for an rx not empty interrupt event","sig":null,"attributes":[{"value":"/ Start listening for an rx not empty interrupt event","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":404956,"byte_end":405011,"line_start":571,"line_end":571,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":405016,"byte_end":405019,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ Note, you will also have to enable the corresponding interrupt","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":405024,"byte_end":405090,"line_start":573,"line_end":573,"column_start":5,"column_end":71}},{"value":"/ in the NVIC to start receiving events.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":405095,"byte_end":405137,"line_start":574,"line_end":574,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2631},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":405322,"byte_end":405330,"line_start":580,"line_end":580,"column_start":12,"column_end":20},"name":"unlisten","qualname":"<Rx<USART, WORD>>::unlisten","value":"pub fn unlisten(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Stop listening for the rx not empty interrupt event\n","sig":null,"attributes":[{"value":"/ Stop listening for the rx not empty interrupt event","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":405255,"byte_end":405310,"line_start":579,"line_end":579,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2633},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":405621,"byte_end":405632,"line_start":588,"line_end":588,"column_start":12,"column_end":23},"name":"listen_idle","qualname":"<Rx<USART, WORD>>::listen_idle","value":"pub fn listen_idle(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Start listening for a line idle interrupt event","sig":null,"attributes":[{"value":"/ Start listening for a line idle interrupt event","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":405432,"byte_end":405483,"line_start":584,"line_end":584,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":405488,"byte_end":405491,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ Note, you will also have to enable the corresponding interrupt","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":405496,"byte_end":405562,"line_start":586,"line_end":586,"column_start":5,"column_end":71}},{"value":"/ in the NVIC to start receiving events.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":405567,"byte_end":405609,"line_start":587,"line_end":587,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2635},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":405796,"byte_end":405809,"line_start":593,"line_end":593,"column_start":12,"column_end":25},"name":"unlisten_idle","qualname":"<Rx<USART, WORD>>::unlisten_idle","value":"pub fn unlisten_idle(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Stop listening for the line idle interrupt event\n","sig":null,"attributes":[{"value":"/ Stop listening for the line idle interrupt event","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":405732,"byte_end":405784,"line_start":592,"line_end":592,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2637},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":405969,"byte_end":405976,"line_start":598,"line_end":598,"column_start":12,"column_end":19},"name":"is_idle","qualname":"<Rx<USART, WORD>>::is_idle","value":"pub fn is_idle(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the line idle status is set\n","sig":null,"attributes":[{"value":"/ Return true if the line idle status is set","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":405911,"byte_end":405957,"line_start":597,"line_end":597,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2638},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":406147,"byte_end":406162,"line_start":603,"line_end":603,"column_start":12,"column_end":27},"name":"is_rx_not_empty","qualname":"<Rx<USART, WORD>>::is_rx_not_empty","value":"pub fn is_rx_not_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the rx register is not empty (and can be read)\n","sig":null,"attributes":[{"value":"/ Return true if the rx register is not empty (and can be read)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":406070,"byte_end":406135,"line_start":602,"line_end":602,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2639},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":406302,"byte_end":406322,"line_start":608,"line_end":608,"column_start":12,"column_end":32},"name":"clear_idle_interrupt","qualname":"<Rx<USART, WORD>>::clear_idle_interrupt","value":"pub fn clear_idle_interrupt(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear idle line interrupt flag\n","sig":null,"attributes":[{"value":"/ Clear idle line interrupt flag","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":406256,"byte_end":406290,"line_start":607,"line_end":607,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2644},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":406837,"byte_end":406843,"line_start":631,"line_end":631,"column_start":12,"column_end":18},"name":"listen","qualname":"<Tx<USART, WORD>>::listen","value":"pub fn listen(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Start listening for a tx empty interrupt event","sig":null,"attributes":[{"value":"/ Start listening for a tx empty interrupt event","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":406649,"byte_end":406699,"line_start":627,"line_end":627,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":406704,"byte_end":406707,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ Note, you will also have to enable the corresponding interrupt","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":406712,"byte_end":406778,"line_start":629,"line_end":629,"column_start":5,"column_end":71}},{"value":"/ in the NVIC to start receiving events.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":406783,"byte_end":406825,"line_start":630,"line_end":630,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2646},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":407005,"byte_end":407013,"line_start":636,"line_end":636,"column_start":12,"column_end":20},"name":"unlisten","qualname":"<Tx<USART, WORD>>::unlisten","value":"pub fn unlisten(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Stop listening for the tx empty interrupt event\n","sig":null,"attributes":[{"value":"/ Stop listening for the tx empty interrupt event","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":406942,"byte_end":406993,"line_start":635,"line_end":635,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2648},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":407191,"byte_end":407202,"line_start":641,"line_end":641,"column_start":12,"column_end":23},"name":"is_tx_empty","qualname":"<Tx<USART, WORD>>::is_tx_empty","value":"pub fn is_tx_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the tx register is empty (and can accept data)\n","sig":null,"attributes":[{"value":"/ Return true if the tx register is empty (and can accept data)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":407114,"byte_end":407179,"line_start":640,"line_end":640,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2676},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":408314,"byte_end":408317,"line_start":681,"line_end":681,"column_start":12,"column_end":15},"name":"new","qualname":"<Serial<USART, (TX, RX), WORD>>::new","value":"pub fn new(USART, (TX, RX), config::Config, Clocks)\n-> Result<Self, config::InvalidConfig>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2683},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":412465,"byte_end":412472,"line_start":802,"line_end":802,"column_start":12,"column_end":19},"name":"release","qualname":"<Serial<USART, (TX, RX), WORD>>::release","value":"pub fn release(Self) -> (USART, (TX, RX))","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2689},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":412788,"byte_end":412790,"line_start":815,"line_end":815,"column_start":12,"column_end":14},"name":"tx","qualname":"<Serial<USART, (TX, NoPin), WORD>>::tx","value":"pub fn tx(USART, TX, config::Config, Clocks)\n-> Result<Tx<USART, WORD>, config::InvalidConfig>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2696},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":413204,"byte_end":413206,"line_start":830,"line_end":830,"column_start":12,"column_end":14},"name":"rx","qualname":"<Serial<USART, (NoPin, RX), WORD>>::rx","value":"pub fn rx(USART, RX, config::Config, Clocks)\n-> Result<Rx<USART, WORD>, config::InvalidConfig>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2702},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":413716,"byte_end":413722,"line_start":848,"line_end":848,"column_start":12,"column_end":18},"name":"listen","qualname":"<Serial<USART, PINS, WORD>>::listen","value":"pub fn listen(&mut Self, Event)","parent":null,"children":[],"decl_id":null,"docs":" Starts listening for an interrupt event","sig":null,"attributes":[{"value":"/ Starts listening for an interrupt event","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":413535,"byte_end":413578,"line_start":844,"line_end":844,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":413583,"byte_end":413586,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ Note, you will also have to enable the corresponding interrupt","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":413591,"byte_end":413657,"line_start":846,"line_end":846,"column_start":5,"column_end":71}},{"value":"/ in the NVIC to start receiving events.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":413662,"byte_end":413704,"line_start":847,"line_end":847,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2706},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":414129,"byte_end":414137,"line_start":857,"line_end":857,"column_start":12,"column_end":20},"name":"unlisten","qualname":"<Serial<USART, PINS, WORD>>::unlisten","value":"pub fn unlisten(&mut Self, Event)","parent":null,"children":[],"decl_id":null,"docs":" Stop listening for an interrupt event\n","sig":null,"attributes":[{"value":"/ Stop listening for an interrupt event","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":414076,"byte_end":414117,"line_start":856,"line_end":856,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2710},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":414555,"byte_end":414562,"line_start":866,"line_end":866,"column_start":12,"column_end":19},"name":"is_idle","qualname":"<Serial<USART, PINS, WORD>>::is_idle","value":"pub fn is_idle(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the line idle status is set\n","sig":null,"attributes":[{"value":"/ Return true if the line idle status is set","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":414497,"byte_end":414543,"line_start":865,"line_end":865,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2711},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":414733,"byte_end":414744,"line_start":871,"line_end":871,"column_start":12,"column_end":23},"name":"is_tx_empty","qualname":"<Serial<USART, PINS, WORD>>::is_tx_empty","value":"pub fn is_tx_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the tx register is empty (and can accept data)\n","sig":null,"attributes":[{"value":"/ Return true if the tx register is empty (and can accept data)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":414656,"byte_end":414721,"line_start":870,"line_end":870,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2712},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":414950,"byte_end":414956,"line_start":877,"line_end":877,"column_start":12,"column_end":18},"name":"is_txe","qualname":"<Serial<USART, PINS, WORD>>::is_txe","value":"pub fn is_txe(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the tx register is empty (and can accept data)\n","sig":null,"attributes":[{"value":"/ Return true if the tx register is empty (and can accept data)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":414837,"byte_end":414902,"line_start":875,"line_end":875,"column_start":5,"column_end":70}},{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":414907,"byte_end":414938,"line_start":876,"line_end":876,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2713},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":415126,"byte_end":415141,"line_start":882,"line_end":882,"column_start":12,"column_end":27},"name":"is_rx_not_empty","qualname":"<Serial<USART, PINS, WORD>>::is_rx_not_empty","value":"pub fn is_rx_not_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the rx register is not empty (and can be read)\n","sig":null,"attributes":[{"value":"/ Return true if the rx register is not empty (and can be read)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":415049,"byte_end":415114,"line_start":881,"line_end":881,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2714},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":415348,"byte_end":415355,"line_start":888,"line_end":888,"column_start":12,"column_end":19},"name":"is_rxne","qualname":"<Serial<USART, PINS, WORD>>::is_rxne","value":"pub fn is_rxne(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the rx register is not empty (and can be read)\n","sig":null,"attributes":[{"value":"/ Return true if the rx register is not empty (and can be read)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":415235,"byte_end":415300,"line_start":886,"line_end":886,"column_start":5,"column_end":70}},{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":415305,"byte_end":415336,"line_start":887,"line_end":887,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2715},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":415495,"byte_end":415515,"line_start":893,"line_end":893,"column_start":12,"column_end":32},"name":"clear_idle_interrupt","qualname":"<Serial<USART, PINS, WORD>>::clear_idle_interrupt","value":"pub fn clear_idle_interrupt(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear idle line interrupt flag\n","sig":null,"attributes":[{"value":"/ Clear idle line interrupt flag","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":415449,"byte_end":415483,"line_start":892,"line_end":892,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2716},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":415664,"byte_end":415669,"line_start":900,"line_end":900,"column_start":12,"column_end":17},"name":"split","qualname":"<Serial<USART, PINS, WORD>>::split","value":"pub fn split(Self) -> (Tx<USART, WORD>, Rx<USART, WORD>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2720},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":415995,"byte_end":416008,"line_start":912,"line_end":912,"column_start":12,"column_end":25},"name":"with_u16_data","qualname":"<Serial<USART, PINS, u8>>::with_u16_data","value":"pub fn with_u16_data(Self) -> Serial<USART, PINS, u16>","parent":null,"children":[],"decl_id":null,"docs":" Converts this Serial into a version that can read and write `u16` values instead of `u8`s","sig":null,"attributes":[{"value":"/ Converts this Serial into a version that can read and write `u16` values instead of `u8`s","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":415827,"byte_end":415920,"line_start":909,"line_end":909,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":415925,"byte_end":415928,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ This can be used with a word length of 9 bits.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":415933,"byte_end":415983,"line_start":911,"line_end":911,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2724},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":416439,"byte_end":416451,"line_start":929,"line_end":929,"column_start":12,"column_end":24},"name":"with_u8_data","qualname":"<Serial<USART, PINS, u16>>::with_u8_data","value":"pub fn with_u8_data(Self) -> Serial<USART, PINS, u8>","parent":null,"children":[],"decl_id":null,"docs":" Converts this Serial into a version that can read and write `u8` values instead of `u16`s","sig":null,"attributes":[{"value":"/ Converts this Serial into a version that can read and write `u8` values instead of `u16`s","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":416271,"byte_end":416364,"line_start":926,"line_end":926,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":416369,"byte_end":416372,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ This can be used with a word length of 8 bits.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":416377,"byte_end":416427,"line_start":928,"line_end":928,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":2796},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":424244,"byte_end":424252,"line_start":1228,"line_end":1228,"column_start":11,"column_end":19},"name":"Instance","qualname":"::serial::Instance","value":"Instance: crate::Sealed + rcc::Enable + rcc::Reset + rcc::GetBusFreq","parent":null,"children":[{"krate":0,"index":2797},{"krate":0,"index":2798}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2797},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":424341,"byte_end":424344,"line_start":1230,"line_end":1230,"column_start":8,"column_end":11},"name":"ptr","qualname":"::serial::Instance::ptr","value":"pub fn ptr() -> *const uart_base::RegisterBlock","parent":{"krate":0,"index":2796},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2798},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":424409,"byte_end":424421,"line_start":1232,"line_end":1232,"column_start":8,"column_end":20},"name":"set_stopbits","qualname":"::serial::Instance::set_stopbits","value":"pub fn set_stopbits(&Self, config::StopBits)","parent":{"krate":0,"index":2796},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6639},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":427482,"byte_end":427488,"line_start":1327,"line_end":1327,"column_start":22,"column_end":28},"name":"usart1","qualname":"<Serial<USART, (TX, RX)>>::usart1","value":"pub fn usart1(USART, (TX, RX), config::Config, Clocks)\n-> Result<Self, config::InvalidConfig>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":425501,"byte_end":425532,"line_start":1263,"line_end":1263,"column_start":13,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":6656},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":427513,"byte_end":427519,"line_start":1328,"line_end":1328,"column_start":22,"column_end":28},"name":"usart2","qualname":"<Serial<USART, (TX, RX)>>::usart2","value":"pub fn usart2(USART, (TX, RX), config::Config, Clocks)\n-> Result<Self, config::InvalidConfig>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":425501,"byte_end":425532,"line_start":1263,"line_end":1263,"column_start":13,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":6673},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":427544,"byte_end":427550,"line_start":1329,"line_end":1329,"column_start":22,"column_end":28},"name":"usart6","qualname":"<Serial<USART, (TX, RX)>>::usart6","value":"pub fn usart6(USART, (TX, RX), config::Config, Clocks)\n-> Result<Self, config::InvalidConfig>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.10.0\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":425501,"byte_end":425532,"line_start":1263,"line_end":1263,"column_start":13,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":2809},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"signature","qualname":"::signature","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","parent":null,"children":[{"krate":0,"index":2810},{"krate":0,"index":2813},{"krate":0,"index":2814},{"krate":0,"index":6674},{"krate":0,"index":6679},{"krate":0,"index":6682},{"krate":0,"index":6684},{"krate":0,"index":2815},{"krate":0,"index":6687},{"krate":0,"index":6690},{"krate":0,"index":6692},{"krate":0,"index":2820},{"krate":0,"index":6695},{"krate":0,"index":6698},{"krate":0,"index":6700},{"krate":0,"index":2823},{"krate":0,"index":6703},{"krate":0,"index":6706},{"krate":0,"index":6708},{"krate":0,"index":2825},{"krate":0,"index":6711},{"krate":0,"index":6714},{"krate":0,"index":6716},{"krate":0,"index":2827}],"decl_id":null,"docs":" Device electronic signature","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":5689,"byte_end":5724,"line_start":176,"line_end":176,"column_start":1,"column_end":36}},{"value":"/ Device electronic signature","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":428737,"byte_end":428768,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":428769,"byte_end":428772,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ (stored in flash memory)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":428773,"byte_end":428801,"line_start":3,"line_end":3,"column_start":1,"column_end":29}}]},{"kind":"Const","id":{"krate":0,"index":2813},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":428933,"byte_end":428943,"line_start":8,"line_end":8,"column_start":11,"column_end":21},"name":"VDDA_CALIB","qualname":"::signature::VDDA_CALIB","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" This is the test voltage, in millivolts of the calibration done at the factory\n","sig":null,"attributes":[{"value":"/ This is the test voltage, in millivolts of the calibration done at the factory","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":428840,"byte_end":428922,"line_start":7,"line_end":7,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":6674},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":429400,"byte_end":429403,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"Uid","qualname":"::signature::Uid","value":"Uid {  }","parent":null,"children":[{"krate":0,"index":6675},{"krate":0,"index":6676},{"krate":0,"index":6677}],"decl_id":null,"docs":" Uniqure Device ID register\n","sig":null,"attributes":[{"value":"/ Uniqure Device ID register","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":429324,"byte_end":429354,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":429378,"byte_end":429388,"line_start":27,"line_end":27,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":2816},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":429543,"byte_end":429544,"line_start":37,"line_end":37,"column_start":12,"column_end":13},"name":"x","qualname":"<Uid>::x","value":"pub fn x(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" X coordinate on wafer\n","sig":null,"attributes":[{"value":"/ X coordinate on wafer","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":429506,"byte_end":429531,"line_start":36,"line_end":36,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2817},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":429624,"byte_end":429625,"line_start":42,"line_end":42,"column_start":12,"column_end":13},"name":"y","qualname":"<Uid>::y","value":"pub fn y(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Y coordinate on wafer\n","sig":null,"attributes":[{"value":"/ Y coordinate on wafer","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":429587,"byte_end":429612,"line_start":41,"line_end":41,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2818},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":429696,"byte_end":429703,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"waf_num","qualname":"<Uid>::waf_num","value":"pub fn waf_num(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Wafer number\n","sig":null,"attributes":[{"value":"/ Wafer number","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":429668,"byte_end":429684,"line_start":46,"line_end":46,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2819},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":429780,"byte_end":429787,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"lot_num","qualname":"<Uid>::lot_num","value":"pub fn lot_num(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Lot number\n","sig":null,"attributes":[{"value":"/ Lot number","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":429754,"byte_end":429768,"line_start":51,"line_end":51,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":6687},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":429941,"byte_end":429950,"line_start":60,"line_end":60,"column_start":12,"column_end":21},"name":"FlashSize","qualname":"::signature::FlashSize","value":"","parent":null,"children":[],"decl_id":null,"docs":" Size of integrated flash\n","sig":null,"attributes":[{"value":"/ Size of integrated flash","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":429873,"byte_end":429901,"line_start":57,"line_end":57,"column_start":1,"column_end":29}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":429919,"byte_end":429929,"line_start":59,"line_end":59,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":2821},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":430065,"byte_end":430075,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"kilo_bytes","qualname":"<FlashSize>::kilo_bytes","value":"pub fn kilo_bytes(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Read flash size in kilobytes\n","sig":null,"attributes":[{"value":"/ Read flash size in kilobytes","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":430021,"byte_end":430053,"line_start":64,"line_end":64,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2822},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":430158,"byte_end":430163,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"bytes","qualname":"<FlashSize>::bytes","value":"pub fn bytes(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Read flash size in bytes\n","sig":null,"attributes":[{"value":"/ Read flash size in bytes","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":430118,"byte_end":430146,"line_start":69,"line_end":69,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":6695},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":430335,"byte_end":430342,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"VrefCal","qualname":"::signature::VrefCal","value":"","parent":null,"children":[],"decl_id":null,"docs":" ADC VREF calibration value is stored in at the factory\n","sig":null,"attributes":[{"value":"/ ADC VREF calibration value is stored in at the factory","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":430237,"byte_end":430295,"line_start":75,"line_end":75,"column_start":1,"column_end":59}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":430313,"byte_end":430323,"line_start":77,"line_end":77,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":2824},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":430447,"byte_end":430451,"line_start":83,"line_end":83,"column_start":12,"column_end":16},"name":"read","qualname":"<VrefCal>::read","value":"pub fn read(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Read calibration value\n","sig":null,"attributes":[{"value":"/ Read calibration value","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":430409,"byte_end":430435,"line_start":82,"line_end":82,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6703},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":430594,"byte_end":430604,"line_start":91,"line_end":91,"column_start":12,"column_end":22},"name":"VtempCal30","qualname":"::signature::VtempCal30","value":"","parent":null,"children":[],"decl_id":null,"docs":" A temperature reading taken at 30°C stored at the factory\n","sig":null,"attributes":[{"value":"/ A temperature reading taken at 30°C stored at the factory","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":430492,"byte_end":430554,"line_start":88,"line_end":88,"column_start":1,"column_end":62}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":430572,"byte_end":430582,"line_start":90,"line_end":90,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":2826},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":430715,"byte_end":430719,"line_start":96,"line_end":96,"column_start":12,"column_end":16},"name":"read","qualname":"<VtempCal30>::read","value":"pub fn read(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Read calibration value\n","sig":null,"attributes":[{"value":"/ Read calibration value","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":430677,"byte_end":430703,"line_start":95,"line_end":95,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6711},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":430863,"byte_end":430874,"line_start":104,"line_end":104,"column_start":12,"column_end":23},"name":"VtempCal110","qualname":"::signature::VtempCal110","value":"","parent":null,"children":[],"decl_id":null,"docs":" A temperature reading taken at 110°C stored at the factory\n","sig":null,"attributes":[{"value":"/ A temperature reading taken at 110°C stored at the factory","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":430760,"byte_end":430823,"line_start":101,"line_end":101,"column_start":1,"column_end":63}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":430841,"byte_end":430851,"line_start":103,"line_end":103,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":2828},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":430987,"byte_end":430991,"line_start":109,"line_end":109,"column_start":12,"column_end":16},"name":"read","qualname":"<VtempCal110>::read","value":"pub fn read(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Read calibration value\n","sig":null,"attributes":[{"value":"/ Read calibration value","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":430949,"byte_end":430975,"line_start":108,"line_end":108,"column_start":5,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":2829},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"spi","qualname":"::spi","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","parent":null,"children":[{"krate":0,"index":2830},{"krate":0,"index":2833},{"krate":0,"index":2836},{"krate":0,"index":2837},{"krate":0,"index":2838},{"krate":0,"index":2840},{"krate":0,"index":2841},{"krate":0,"index":2843},{"krate":0,"index":2846},{"krate":0,"index":2849},{"krate":0,"index":2850},{"krate":0,"index":2853},{"krate":0,"index":2856},{"krate":0,"index":2859},{"krate":0,"index":2862},{"krate":0,"index":2865},{"krate":0,"index":2868},{"krate":0,"index":2869},{"krate":0,"index":2872},{"krate":0,"index":2875},{"krate":0,"index":2878},{"krate":0,"index":2879},{"krate":0,"index":2882},{"krate":0,"index":2885},{"krate":0,"index":2888},{"krate":0,"index":2891},{"krate":0,"index":2894},{"krate":0,"index":2897},{"krate":0,"index":2900},{"krate":0,"index":2903},{"krate":0,"index":2906},{"krate":0,"index":2907},{"krate":0,"index":6719},{"krate":0,"index":6726},{"krate":0,"index":6728},{"krate":0,"index":6729},{"krate":0,"index":6731},{"krate":0,"index":6732},{"krate":0,"index":6734},{"krate":0,"index":6735},{"krate":0,"index":2909},{"krate":0,"index":2911},{"krate":0,"index":2914},{"krate":0,"index":2917},{"krate":0,"index":2920},{"krate":0,"index":2925},{"krate":0,"index":2926},{"krate":0,"index":2927},{"krate":0,"index":2928},{"krate":0,"index":2932},{"krate":0,"index":2936},{"krate":0,"index":2940},{"krate":0,"index":6737},{"krate":0,"index":6741},{"krate":0,"index":6745},{"krate":0,"index":6749},{"krate":0,"index":6753},{"krate":0,"index":6757},{"krate":0,"index":6761},{"krate":0,"index":6765},{"krate":0,"index":6769},{"krate":0,"index":6773},{"krate":0,"index":6777},{"krate":0,"index":6781},{"krate":0,"index":6785},{"krate":0,"index":6789},{"krate":0,"index":6793},{"krate":0,"index":6797},{"krate":0,"index":6801},{"krate":0,"index":6805},{"krate":0,"index":6809},{"krate":0,"index":6813},{"krate":0,"index":6817},{"krate":0,"index":6821},{"krate":0,"index":6825},{"krate":0,"index":6829},{"krate":0,"index":6833},{"krate":0,"index":6837},{"krate":0,"index":6841},{"krate":0,"index":6845},{"krate":0,"index":6849},{"krate":0,"index":6853},{"krate":0,"index":6857},{"krate":0,"index":6861},{"krate":0,"index":6865},{"krate":0,"index":6869},{"krate":0,"index":6873},{"krate":0,"index":6877},{"krate":0,"index":6881},{"krate":0,"index":6885},{"krate":0,"index":6889},{"krate":0,"index":6893},{"krate":0,"index":6897},{"krate":0,"index":2941},{"krate":0,"index":2948},{"krate":0,"index":2950},{"krate":0,"index":6901},{"krate":0,"index":6908},{"krate":0,"index":2952},{"krate":0,"index":2953},{"krate":0,"index":6913},{"krate":0,"index":6914},{"krate":0,"index":6923},{"krate":0,"index":6924},{"krate":0,"index":6933},{"krate":0,"index":6934},{"krate":0,"index":6943},{"krate":0,"index":6944},{"krate":0,"index":6953},{"krate":0,"index":6954},{"krate":0,"index":2954},{"krate":0,"index":2965},{"krate":0,"index":2976},{"krate":0,"index":2987},{"krate":0,"index":2992},{"krate":0,"index":2997},{"krate":0,"index":3026},{"krate":0,"index":3032},{"krate":0,"index":3040}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":5744,"byte_end":5779,"line_start":178,"line_end":178,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6720},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":432032,"byte_end":432039,"line_start":50,"line_end":50,"column_start":5,"column_end":12},"name":"Overrun","qualname":"::spi::Error::Overrun","value":"Error::Overrun","parent":{"krate":0,"index":6719},"children":[],"decl_id":null,"docs":" Overrun occurred\n","sig":null,"attributes":[{"value":"/ Overrun occurred","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":432007,"byte_end":432027,"line_start":49,"line_end":49,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6722},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":432073,"byte_end":432082,"line_start":52,"line_end":52,"column_start":5,"column_end":14},"name":"ModeFault","qualname":"::spi::Error::ModeFault","value":"Error::ModeFault","parent":{"krate":0,"index":6719},"children":[],"decl_id":null,"docs":" Mode fault occurred\n","sig":null,"attributes":[{"value":"/ Mode fault occurred","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":432045,"byte_end":432068,"line_start":51,"line_end":51,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6724},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":432106,"byte_end":432109,"line_start":54,"line_end":54,"column_start":5,"column_end":8},"name":"Crc","qualname":"::spi::Error::Crc","value":"Error::Crc","parent":{"krate":0,"index":6719},"children":[],"decl_id":null,"docs":" CRC error\n","sig":null,"attributes":[{"value":"/ CRC error","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":432088,"byte_end":432101,"line_start":53,"line_end":53,"column_start":5,"column_end":18}}]},{"kind":"Enum","id":{"krate":0,"index":6719},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":431995,"byte_end":432000,"line_start":48,"line_end":48,"column_start":10,"column_end":15},"name":"Error","qualname":"::spi::Error","value":"pub enum Error { Overrun, ModeFault, Crc, }","parent":null,"children":[{"krate":0,"index":6720},{"krate":0,"index":6722},{"krate":0,"index":6724}],"decl_id":null,"docs":" SPI error\n","sig":null,"attributes":[{"value":"/ SPI error","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":431909,"byte_end":431922,"line_start":45,"line_end":45,"column_start":1,"column_end":14}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":431923,"byte_end":431940,"line_start":46,"line_end":46,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":2909},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":432124,"byte_end":432128,"line_start":57,"line_end":57,"column_start":11,"column_end":15},"name":"Pins","qualname":"::spi::Pins","value":"Pins<SPI>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2911},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":432147,"byte_end":432153,"line_start":58,"line_end":58,"column_start":11,"column_end":17},"name":"PinSck","qualname":"::spi::PinSck","value":"PinSck<SPI>","parent":null,"children":[{"krate":0,"index":2913}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2913},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":432170,"byte_end":432171,"line_start":59,"line_end":59,"column_start":10,"column_end":11},"name":"A","qualname":"::spi::PinSck::A","value":"type A;","parent":{"krate":0,"index":2911},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2914},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":432185,"byte_end":432192,"line_start":61,"line_end":61,"column_start":11,"column_end":18},"name":"PinMiso","qualname":"::spi::PinMiso","value":"PinMiso<SPI>","parent":null,"children":[{"krate":0,"index":2916}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2916},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":432209,"byte_end":432210,"line_start":62,"line_end":62,"column_start":10,"column_end":11},"name":"A","qualname":"::spi::PinMiso::A","value":"type A;","parent":{"krate":0,"index":2914},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2917},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":432224,"byte_end":432231,"line_start":64,"line_end":64,"column_start":11,"column_end":18},"name":"PinMosi","qualname":"::spi::PinMosi","value":"PinMosi<SPI>","parent":null,"children":[{"krate":0,"index":2919}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2919},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":432248,"byte_end":432249,"line_start":65,"line_end":65,"column_start":10,"column_end":11},"name":"A","qualname":"::spi::PinMosi::A","value":"type A;","parent":{"krate":0,"index":2917},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2925},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":432457,"byte_end":432462,"line_start":77,"line_end":77,"column_start":10,"column_end":15},"name":"NoSck","qualname":"::spi::NoSck","value":"NoPin","parent":null,"children":[],"decl_id":null,"docs":" A filler type for when the SCK pin is unnecessary\n","sig":null,"attributes":[{"value":"/ A filler type for when the SCK pin is unnecessary","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":432394,"byte_end":432447,"line_start":76,"line_end":76,"column_start":1,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":2926},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":432536,"byte_end":432542,"line_start":79,"line_end":79,"column_start":10,"column_end":16},"name":"NoMiso","qualname":"::spi::NoMiso","value":"NoPin","parent":null,"children":[],"decl_id":null,"docs":" A filler type for when the Miso pin is unnecessary\n","sig":null,"attributes":[{"value":"/ A filler type for when the Miso pin is unnecessary","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":432472,"byte_end":432526,"line_start":78,"line_end":78,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":2927},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":432616,"byte_end":432622,"line_start":81,"line_end":81,"column_start":10,"column_end":16},"name":"NoMosi","qualname":"::spi::NoMosi","value":"NoPin","parent":null,"children":[],"decl_id":null,"docs":" A filler type for when the Mosi pin is unnecessary\n","sig":null,"attributes":[{"value":"/ A filler type for when the Mosi pin is unnecessary","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":432552,"byte_end":432606,"line_start":80,"line_end":80,"column_start":1,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2942},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":438156,"byte_end":438160,"line_start":375,"line_end":375,"column_start":5,"column_end":9},"name":"Rxne","qualname":"::spi::Event::Rxne","value":"Event::Rxne","parent":{"krate":0,"index":2941},"children":[],"decl_id":null,"docs":" New data has been received\n","sig":null,"attributes":[{"value":"/ New data has been received","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":438121,"byte_end":438151,"line_start":374,"line_end":374,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2944},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":438191,"byte_end":438194,"line_start":377,"line_end":377,"column_start":5,"column_end":8},"name":"Txe","qualname":"::spi::Event::Txe","value":"Event::Txe","parent":{"krate":0,"index":2941},"children":[],"decl_id":null,"docs":" Data can be sent\n","sig":null,"attributes":[{"value":"/ Data can be sent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":438166,"byte_end":438186,"line_start":376,"line_end":376,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2946},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":438226,"byte_end":438231,"line_start":379,"line_end":379,"column_start":5,"column_end":10},"name":"Error","qualname":"::spi::Event::Error","value":"Event::Error","parent":{"krate":0,"index":2941},"children":[],"decl_id":null,"docs":" An error occurred\n","sig":null,"attributes":[{"value":"/ An error occurred","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":438200,"byte_end":438221,"line_start":378,"line_end":378,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":2941},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":438109,"byte_end":438114,"line_start":373,"line_end":373,"column_start":10,"column_end":15},"name":"Event","qualname":"::spi::Event","value":"pub enum Event { Rxne, Txe, Error, }","parent":null,"children":[{"krate":0,"index":2942},{"krate":0,"index":2944},{"krate":0,"index":2946}],"decl_id":null,"docs":" Interrupt events\n","sig":null,"attributes":[{"value":"/ Interrupt events","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":438079,"byte_end":438099,"line_start":372,"line_end":372,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":2948},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":438296,"byte_end":438314,"line_start":383,"line_end":383,"column_start":12,"column_end":30},"name":"TransferModeNormal","qualname":"::spi::TransferModeNormal","value":"","parent":null,"children":[],"decl_id":null,"docs":" Normal mode - RX and TX pins are independent\n","sig":null,"attributes":[{"value":"/ Normal mode - RX and TX pins are independent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":438236,"byte_end":438284,"line_start":382,"line_end":382,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2950},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":438382,"byte_end":438398,"line_start":385,"line_end":385,"column_start":12,"column_end":28},"name":"TransferModeBidi","qualname":"::spi::TransferModeBidi","value":"","parent":null,"children":[],"decl_id":null,"docs":" BIDI mode - use TX pin as RX then spi receive data\n","sig":null,"attributes":[{"value":"/ BIDI mode - use TX pin as RX then spi receive data","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":438316,"byte_end":438370,"line_start":384,"line_end":384,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":6901},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":438429,"byte_end":438432,"line_start":388,"line_end":388,"column_start":12,"column_end":15},"name":"Spi","qualname":"::spi::Spi","value":"Spi {  }","parent":null,"children":[{"krate":0,"index":6905},{"krate":0,"index":6906},{"krate":0,"index":6907}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2952},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":438574,"byte_end":438582,"line_start":395,"line_end":395,"column_start":11,"column_end":19},"name":"Instance","qualname":"::spi::Instance","value":"Instance: crate::Sealed + Deref<Target = spi1::RegisterBlock> + rcc::Enable +\nrcc::Reset + rcc::GetBusFreq","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6921},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":439639,"byte_end":439643,"line_start":426,"line_end":426,"column_start":15,"column_end":19},"name":"spi1","qualname":"<Spi<SPI1, (SCK, MISO, MOSI), TransferModeNormal>>::spi1","value":"pub fn spi1<impl Into<Hertz>: Into<Hertz>>(SPI1, (SCK, MISO, MOSI), Mode,\nimpl Into<Hertz>, Clocks) -> Spi<SPI1, (SCK, MISO, MOSI), TransferModeNormal>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.10.0\", note = \"Please use new instead\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":439208,"byte_end":439272,"line_start":412,"line_end":412,"column_start":13,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":6931},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":439661,"byte_end":439665,"line_start":427,"line_end":427,"column_start":15,"column_end":19},"name":"spi2","qualname":"<Spi<SPI2, (SCK, MISO, MOSI), TransferModeNormal>>::spi2","value":"pub fn spi2<impl Into<Hertz>: Into<Hertz>>(SPI2, (SCK, MISO, MOSI), Mode,\nimpl Into<Hertz>, Clocks) -> Spi<SPI2, (SCK, MISO, MOSI), TransferModeNormal>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.10.0\", note = \"Please use new instead\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":439208,"byte_end":439272,"line_start":412,"line_end":412,"column_start":13,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":6941},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":439709,"byte_end":439713,"line_start":430,"line_end":430,"column_start":15,"column_end":19},"name":"spi3","qualname":"<Spi<SPI3, (SCK, MISO, MOSI), TransferModeNormal>>::spi3","value":"pub fn spi3<impl Into<Hertz>: Into<Hertz>>(SPI3, (SCK, MISO, MOSI), Mode,\nimpl Into<Hertz>, Clocks) -> Spi<SPI3, (SCK, MISO, MOSI), TransferModeNormal>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.10.0\", note = \"Please use new instead\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":439208,"byte_end":439272,"line_start":412,"line_end":412,"column_start":13,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":6951},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":439757,"byte_end":439761,"line_start":433,"line_end":433,"column_start":15,"column_end":19},"name":"spi4","qualname":"<Spi<SPI4, (SCK, MISO, MOSI), TransferModeNormal>>::spi4","value":"pub fn spi4<impl Into<Hertz>: Into<Hertz>>(SPI4, (SCK, MISO, MOSI), Mode,\nimpl Into<Hertz>, Clocks) -> Spi<SPI4, (SCK, MISO, MOSI), TransferModeNormal>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.10.0\", note = \"Please use new instead\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":439208,"byte_end":439272,"line_start":412,"line_end":412,"column_start":13,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":6961},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":439805,"byte_end":439809,"line_start":436,"line_end":436,"column_start":15,"column_end":19},"name":"spi5","qualname":"<Spi<SPI5, (SCK, MISO, MOSI), TransferModeNormal>>::spi5","value":"pub fn spi5<impl Into<Hertz>: Into<Hertz>>(SPI5, (SCK, MISO, MOSI), Mode,\nimpl Into<Hertz>, Clocks) -> Spi<SPI5, (SCK, MISO, MOSI), TransferModeNormal>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.10.0\", note = \"Please use new instead\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":439208,"byte_end":439272,"line_start":412,"line_end":412,"column_start":13,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2962},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":440217,"byte_end":440220,"line_start":449,"line_end":449,"column_start":12,"column_end":15},"name":"new","qualname":"<Spi<SPI, (SCK, MISO, MOSI), TransferModeNormal>>::new","value":"pub fn new<impl Into<Hertz>: Into<Hertz>>(SPI, (SCK, MISO, MOSI), Mode,\nimpl Into<Hertz>, Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2964},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":440895,"byte_end":440916,"line_start":476,"line_end":476,"column_start":12,"column_end":33},"name":"to_bidi_transfer_mode","qualname":"<Spi<SPI, (SCK, MISO, MOSI), TransferModeNormal>>::to_bidi_transfer_mode","value":"pub fn to_bidi_transfer_mode(Self)\n-> Spi<SPI, (SCK, MISO, MOSI), TransferModeBidi>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2973},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":441480,"byte_end":441488,"line_start":491,"line_end":491,"column_start":12,"column_end":20},"name":"new_bidi","qualname":"<Spi<SPI, (SCK, MISO, MOSI), TransferModeBidi>>::new_bidi","value":"pub fn new_bidi<impl Into<Hertz>: Into<Hertz>>(SPI, (SCK, MISO, MOSI), Mode,\nimpl Into<Hertz>, Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2975},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":442161,"byte_end":442184,"line_start":518,"line_end":518,"column_start":12,"column_end":35},"name":"to_normal_transfer_mode","qualname":"<Spi<SPI, (SCK, MISO, MOSI), TransferModeBidi>>::to_normal_transfer_mode","value":"pub fn to_normal_transfer_mode(Self)\n-> Spi<SPI, (SCK, MISO, MOSI), TransferModeNormal>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2985},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":442764,"byte_end":442771,"line_start":533,"line_end":533,"column_start":12,"column_end":19},"name":"release","qualname":"<Spi<SPI, (SCK, MISO, MOSI), TRANSFER_MODE>>::release","value":"pub fn release(Self) -> (SPI, (SCK, MISO, MOSI))","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2986},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":443042,"byte_end":443046,"line_start":542,"line_end":542,"column_start":12,"column_end":16},"name":"free","qualname":"<Spi<SPI, (SCK, MISO, MOSI), TRANSFER_MODE>>::free","value":"pub fn free(Self) -> (SPI, (SCK, MISO, MOSI))","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.10.0\", note = \"Please use release instead\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":442962,"byte_end":443030,"line_start":541,"line_end":541,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2990},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":443204,"byte_end":443208,"line_start":551,"line_end":551,"column_start":12,"column_end":16},"name":"init","qualname":"<Spi<SPI, PINS, TransferModeNormal>>::init","value":"pub fn init(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2995},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":443633,"byte_end":443637,"line_start":571,"line_end":571,"column_start":12,"column_end":16},"name":"init","qualname":"<Spi<SPI, PINS, TransferModeBidi>>::init","value":"pub fn init(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3003},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":444390,"byte_end":444396,"line_start":604,"line_end":604,"column_start":12,"column_end":18},"name":"enable","qualname":"<Spi<SPI, PINS, TRANSFER_MODE>>::enable","value":"pub fn enable(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Enable/disable spi\n","sig":null,"attributes":[{"value":"/ Enable/disable spi","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":444356,"byte_end":444378,"line_start":603,"line_end":603,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3005},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":444600,"byte_end":444608,"line_start":612,"line_end":612,"column_start":12,"column_end":20},"name":"pre_init","qualname":"<Spi<SPI, PINS, TRANSFER_MODE>>::pre_init","value":"pub fn pre_init(Self, Mode, Hertz, Hertz) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Pre initializing the SPI bus.\n","sig":null,"attributes":[{"value":"/ Pre initializing the SPI bus.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":444555,"byte_end":444588,"line_start":611,"line_end":611,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3008},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":446107,"byte_end":446113,"line_start":661,"line_end":661,"column_start":12,"column_end":18},"name":"listen","qualname":"<Spi<SPI, PINS, TRANSFER_MODE>>::listen","value":"pub fn listen(&mut Self, Event)","parent":null,"children":[],"decl_id":null,"docs":" Enable interrupts for the given `event`:\n  - Received data ready to be read (RXNE)\n  - Transmit data register empty (TXE)\n  - Transfer error\n","sig":null,"attributes":[{"value":"/ Enable interrupts for the given `event`:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":445930,"byte_end":445974,"line_start":657,"line_end":657,"column_start":5,"column_end":49}},{"value":"/  - Received data ready to be read (RXNE)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":445979,"byte_end":446023,"line_start":658,"line_end":658,"column_start":5,"column_end":49}},{"value":"/  - Transmit data register empty (TXE)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":446028,"byte_end":446069,"line_start":659,"line_end":659,"column_start":5,"column_end":46}},{"value":"/  - Transfer error","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":446074,"byte_end":446095,"line_start":660,"line_end":660,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3012},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":446591,"byte_end":446599,"line_start":673,"line_end":673,"column_start":12,"column_end":20},"name":"unlisten","qualname":"<Spi<SPI, PINS, TRANSFER_MODE>>::unlisten","value":"pub fn unlisten(&mut Self, Event)","parent":null,"children":[],"decl_id":null,"docs":" Disable interrupts for the given `event`:\n  - Received data ready to be read (RXNE)\n  - Transmit data register empty (TXE)\n  - Transfer error\n","sig":null,"attributes":[{"value":"/ Disable interrupts for the given `event`:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":446413,"byte_end":446458,"line_start":669,"line_end":669,"column_start":5,"column_end":50}},{"value":"/  - Received data ready to be read (RXNE)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":446463,"byte_end":446507,"line_start":670,"line_end":670,"column_start":5,"column_end":49}},{"value":"/  - Transmit data register empty (TXE)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":446512,"byte_end":446553,"line_start":671,"line_end":671,"column_start":5,"column_end":46}},{"value":"/  - Transfer error","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":446558,"byte_end":446579,"line_start":672,"line_end":672,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3016},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":447019,"byte_end":447025,"line_start":683,"line_end":683,"column_start":12,"column_end":18},"name":"is_txe","qualname":"<Spi<SPI, PINS, TRANSFER_MODE>>::is_txe","value":"pub fn is_txe(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the TXE flag is set, i.e. new data to transmit\n can be written to the SPI.\n","sig":null,"attributes":[{"value":"/ Return `true` if the TXE flag is set, i.e. new data to transmit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":446905,"byte_end":446972,"line_start":681,"line_end":681,"column_start":5,"column_end":72}},{"value":"/ can be written to the SPI.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":446977,"byte_end":447007,"line_start":682,"line_end":682,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3017},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":447224,"byte_end":447231,"line_start":689,"line_end":689,"column_start":12,"column_end":19},"name":"is_rxne","qualname":"<Spi<SPI, PINS, TRANSFER_MODE>>::is_rxne","value":"pub fn is_rxne(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the RXNE flag is set, i.e. new data has been received\n and can be read from the SPI.\n","sig":null,"attributes":[{"value":"/ Return `true` if the RXNE flag is set, i.e. new data has been received","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":447100,"byte_end":447174,"line_start":687,"line_end":687,"column_start":5,"column_end":79}},{"value":"/ and can be read from the SPI.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":447179,"byte_end":447212,"line_start":688,"line_end":688,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3018},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":447473,"byte_end":447480,"line_start":695,"line_end":695,"column_start":12,"column_end":19},"name":"is_modf","qualname":"<Spi<SPI, PINS, TRANSFER_MODE>>::is_modf","value":"pub fn is_modf(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the MODF flag is set, i.e. the SPI has experienced a\n Master Mode Fault. (see chapter 28.3.10 of the STM32F4 Reference Manual)\n","sig":null,"attributes":[{"value":"/ Return `true` if the MODF flag is set, i.e. the SPI has experienced a","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":447307,"byte_end":447380,"line_start":693,"line_end":693,"column_start":5,"column_end":78}},{"value":"/ Master Mode Fault. (see chapter 28.3.10 of the STM32F4 Reference Manual)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":447385,"byte_end":447461,"line_start":694,"line_end":694,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3019},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":447701,"byte_end":447707,"line_start":701,"line_end":701,"column_start":12,"column_end":18},"name":"is_ovr","qualname":"<Spi<SPI, PINS, TRANSFER_MODE>>::is_ovr","value":"pub fn is_ovr(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the OVR flag is set, i.e. new data has been received\n while the receive data register was already filled.\n","sig":null,"attributes":[{"value":"/ Return `true` if the OVR flag is set, i.e. new data has been received","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":447556,"byte_end":447629,"line_start":699,"line_end":699,"column_start":5,"column_end":78}},{"value":"/ while the receive data register was already filled.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":447634,"byte_end":447689,"line_start":700,"line_end":700,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":3114},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\syscfg.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"syscfg","qualname":"::syscfg","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\syscfg.rs","parent":null,"children":[{"krate":0,"index":3115},{"krate":0,"index":3116},{"krate":0,"index":3119},{"krate":0,"index":3122},{"krate":0,"index":3125},{"krate":0,"index":3128},{"krate":0,"index":3130},{"krate":0,"index":3132},{"krate":0,"index":3135}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":5793,"byte_end":5828,"line_start":180,"line_end":180,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":3128},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\syscfg.rs","byte_start":453500,"byte_end":453509,"line_start":6,"line_end":6,"column_start":11,"column_end":20},"name":"SysCfgExt","qualname":"::syscfg::SysCfgExt","value":"SysCfgExt","parent":null,"children":[{"krate":0,"index":3129}],"decl_id":null,"docs":" Extension trait that constrains the `SYSCFG` peripheral\n","sig":null,"attributes":[{"value":"/ Extension trait that constrains the `SYSCFG` peripheral","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\syscfg.rs","byte_start":453430,"byte_end":453489,"line_start":5,"line_end":5,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3129},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\syscfg.rs","byte_start":453609,"byte_end":453618,"line_start":8,"line_end":8,"column_start":8,"column_end":17},"name":"constrain","qualname":"::syscfg::SysCfgExt::constrain","value":"pub fn constrain(Self) -> SysCfg","parent":{"krate":0,"index":3128},"children":[],"decl_id":null,"docs":" Constrains the `SYSCFG` peripheral so it plays nicely with the other abstractions\n","sig":null,"attributes":[{"value":"/ Constrains the `SYSCFG` peripheral so it plays nicely with the other abstractions","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\syscfg.rs","byte_start":453516,"byte_end":453601,"line_start":7,"line_end":7,"column_start":5,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":3132},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\syscfg.rs","byte_start":453973,"byte_end":453979,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"SysCfg","qualname":"::syscfg::SysCfg","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3138},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","parent":null,"children":[{"krate":0,"index":6963},{"krate":0,"index":6966},{"krate":0,"index":6967},{"krate":0,"index":6970},{"krate":0,"index":6972},{"krate":0,"index":6974},{"krate":0,"index":6975},{"krate":0,"index":6977},{"krate":0,"index":6980},{"krate":0,"index":6981},{"krate":0,"index":6984},{"krate":0,"index":6986},{"krate":0,"index":6988},{"krate":0,"index":6989},{"krate":0,"index":6991},{"krate":0,"index":6994},{"krate":0,"index":6995},{"krate":0,"index":6998},{"krate":0,"index":7000},{"krate":0,"index":7002},{"krate":0,"index":7003},{"krate":0,"index":7005},{"krate":0,"index":7008},{"krate":0,"index":7009},{"krate":0,"index":7012},{"krate":0,"index":7014},{"krate":0,"index":7016},{"krate":0,"index":7017},{"krate":0,"index":3139},{"krate":0,"index":3145},{"krate":0,"index":3151},{"krate":0,"index":3153},{"krate":0,"index":3155},{"krate":0,"index":3157},{"krate":0,"index":7019},{"krate":0,"index":7022},{"krate":0,"index":7023},{"krate":0,"index":7026},{"krate":0,"index":7028},{"krate":0,"index":7030},{"krate":0,"index":7031}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":5845,"byte_end":5880,"line_start":182,"line_end":182,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":6963},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","byte_start":454211,"byte_end":454214,"line_start":3,"line_end":3,"column_start":12,"column_end":15},"name":"Bps","qualname":"::time::Bps","value":"","parent":null,"children":[],"decl_id":null,"docs":" Bits per second\n","sig":null,"attributes":[{"value":"/ Bits per second","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","byte_start":454127,"byte_end":454146,"line_start":1,"line_end":1,"column_start":1,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":6965},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","byte_start":454215,"byte_end":454222,"line_start":3,"line_end":3,"column_start":16,"column_end":23},"name":"0","qualname":"::time::Bps::0","value":"u32","parent":{"krate":0,"index":6963},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6977},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","byte_start":454290,"byte_end":454295,"line_start":6,"line_end":6,"column_start":12,"column_end":17},"name":"Hertz","qualname":"::time::Hertz","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6979},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","byte_start":454296,"byte_end":454303,"line_start":6,"line_end":6,"column_start":18,"column_end":25},"name":"0","qualname":"::time::Hertz::0","value":"u32","parent":{"krate":0,"index":6977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6991},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","byte_start":454371,"byte_end":454380,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"KiloHertz","qualname":"::time::KiloHertz","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6993},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","byte_start":454381,"byte_end":454388,"line_start":9,"line_end":9,"column_start":22,"column_end":29},"name":"0","qualname":"::time::KiloHertz::0","value":"u32","parent":{"krate":0,"index":6991},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7005},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","byte_start":454456,"byte_end":454465,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"MegaHertz","qualname":"::time::MegaHertz","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7007},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","byte_start":454466,"byte_end":454473,"line_start":12,"line_end":12,"column_start":22,"column_end":29},"name":"0","qualname":"::time::MegaHertz::0","value":"u32","parent":{"krate":0,"index":7005},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3139},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","byte_start":454555,"byte_end":454561,"line_start":15,"line_end":15,"column_start":11,"column_end":17},"name":"U32Ext","qualname":"::time::U32Ext","value":"U32Ext","parent":null,"children":[{"krate":0,"index":3140},{"krate":0,"index":3141},{"krate":0,"index":3142},{"krate":0,"index":3143},{"krate":0,"index":3144}],"decl_id":null,"docs":" Extension trait that adds convenience methods to the `u32` type\n","sig":null,"attributes":[{"value":"/ Extension trait that adds convenience methods to the `u32` type","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","byte_start":454477,"byte_end":454544,"line_start":14,"line_end":14,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3140},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","byte_start":454593,"byte_end":454596,"line_start":17,"line_end":17,"column_start":8,"column_end":11},"name":"bps","qualname":"::time::U32Ext::bps","value":"pub fn bps(Self) -> Bps","parent":{"krate":0,"index":3139},"children":[],"decl_id":null,"docs":" Wrap in `Bps`\n","sig":null,"attributes":[{"value":"/ Wrap in `Bps`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","byte_start":454568,"byte_end":454585,"line_start":16,"line_end":16,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3141},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","byte_start":454643,"byte_end":454645,"line_start":20,"line_end":20,"column_start":8,"column_end":10},"name":"hz","qualname":"::time::U32Ext::hz","value":"pub fn hz(Self) -> Hertz","parent":{"krate":0,"index":3139},"children":[],"decl_id":null,"docs":" Wrap in `Hertz`\n","sig":null,"attributes":[{"value":"/ Wrap in `Hertz`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","byte_start":454616,"byte_end":454635,"line_start":19,"line_end":19,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":3142},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","byte_start":454698,"byte_end":454701,"line_start":23,"line_end":23,"column_start":8,"column_end":11},"name":"khz","qualname":"::time::U32Ext::khz","value":"pub fn khz(Self) -> KiloHertz","parent":{"krate":0,"index":3139},"children":[],"decl_id":null,"docs":" Wrap in `KiloHertz`\n","sig":null,"attributes":[{"value":"/ Wrap in `KiloHertz`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","byte_start":454667,"byte_end":454690,"line_start":22,"line_end":22,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3143},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","byte_start":454758,"byte_end":454761,"line_start":26,"line_end":26,"column_start":8,"column_end":11},"name":"mhz","qualname":"::time::U32Ext::mhz","value":"pub fn mhz(Self) -> MegaHertz","parent":{"krate":0,"index":3139},"children":[],"decl_id":null,"docs":" Wrap in `MegaHertz`\n","sig":null,"attributes":[{"value":"/ Wrap in `MegaHertz`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","byte_start":454727,"byte_end":454750,"line_start":25,"line_end":25,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3144},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","byte_start":454821,"byte_end":454823,"line_start":29,"line_end":29,"column_start":8,"column_end":10},"name":"ms","qualname":"::time::U32Ext::ms","value":"pub fn ms(Self) -> MilliSeconds","parent":{"krate":0,"index":3139},"children":[],"decl_id":null,"docs":" Wrap in `MilliSeconds`\n","sig":null,"attributes":[{"value":"/ Wrap in `MilliSeconds`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","byte_start":454787,"byte_end":454813,"line_start":28,"line_end":28,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7019},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","byte_start":455664,"byte_end":455676,"line_start":80,"line_end":80,"column_start":12,"column_end":24},"name":"MilliSeconds","qualname":"::time::MilliSeconds","value":"","parent":null,"children":[],"decl_id":null,"docs":" Time unit\n","sig":null,"attributes":[{"value":"/ Time unit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","byte_start":455586,"byte_end":455599,"line_start":78,"line_end":78,"column_start":1,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":7021},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","byte_start":455677,"byte_end":455684,"line_start":80,"line_end":80,"column_start":25,"column_end":32},"name":"0","qualname":"::time::MilliSeconds::0","value":"u32","parent":{"krate":0,"index":7019},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3159},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"timer","qualname":"::timer","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","parent":null,"children":[{"krate":0,"index":3160},{"krate":0,"index":3161},{"krate":0,"index":3164},{"krate":0,"index":3167},{"krate":0,"index":3170},{"krate":0,"index":3171},{"krate":0,"index":3174},{"krate":0,"index":3177},{"krate":0,"index":3180},{"krate":0,"index":3181},{"krate":0,"index":3184},{"krate":0,"index":3187},{"krate":0,"index":3190},{"krate":0,"index":3193},{"krate":0,"index":3196},{"krate":0,"index":3197},{"krate":0,"index":3200},{"krate":0,"index":3203},{"krate":0,"index":3204},{"krate":0,"index":3206},{"krate":0,"index":3210},{"krate":0,"index":3214},{"krate":0,"index":3218},{"krate":0,"index":3220},{"krate":0,"index":7033},{"krate":0,"index":7036},{"krate":0,"index":7038},{"krate":0,"index":7039},{"krate":0,"index":7041},{"krate":0,"index":7042},{"krate":0,"index":7044},{"krate":0,"index":7045},{"krate":0,"index":3223},{"krate":0,"index":3226},{"krate":0,"index":3229},{"krate":0,"index":3234},{"krate":0,"index":7047},{"krate":0,"index":7049},{"krate":0,"index":7051},{"krate":0,"index":3237},{"krate":0,"index":7052},{"krate":0,"index":7054},{"krate":0,"index":7056},{"krate":0,"index":3241},{"krate":0,"index":3243},{"krate":0,"index":3244},{"krate":0,"index":3247},{"krate":0,"index":7057},{"krate":0,"index":7058},{"krate":0,"index":7067},{"krate":0,"index":7080},{"krate":0,"index":7084},{"krate":0,"index":7085},{"krate":0,"index":7094},{"krate":0,"index":7107},{"krate":0,"index":7111},{"krate":0,"index":7112},{"krate":0,"index":7121},{"krate":0,"index":7134},{"krate":0,"index":7138},{"krate":0,"index":7139},{"krate":0,"index":7148},{"krate":0,"index":7161},{"krate":0,"index":7165},{"krate":0,"index":7166},{"krate":0,"index":7175},{"krate":0,"index":7188},{"krate":0,"index":7192},{"krate":0,"index":7193},{"krate":0,"index":7202},{"krate":0,"index":7215},{"krate":0,"index":7219},{"krate":0,"index":7220},{"krate":0,"index":7229},{"krate":0,"index":7242},{"krate":0,"index":7246},{"krate":0,"index":7247},{"krate":0,"index":7256},{"krate":0,"index":7269},{"krate":0,"index":3248},{"krate":0,"index":3249},{"krate":0,"index":3250},{"krate":0,"index":3251},{"krate":0,"index":3252},{"krate":0,"index":3253},{"krate":0,"index":3254},{"krate":0,"index":3256},{"krate":0,"index":3257},{"krate":0,"index":3259},{"krate":0,"index":3260},{"krate":0,"index":3261},{"krate":0,"index":3262},{"krate":0,"index":3264},{"krate":0,"index":3266},{"krate":0,"index":3268},{"krate":0,"index":3270},{"krate":0,"index":7273},{"krate":0,"index":7275},{"krate":0,"index":7277},{"krate":0,"index":7279},{"krate":0,"index":7281},{"krate":0,"index":7283},{"krate":0,"index":7285},{"krate":0,"index":7287},{"krate":0,"index":7289},{"krate":0,"index":7291},{"krate":0,"index":7293},{"krate":0,"index":7295},{"krate":0,"index":7297},{"krate":0,"index":7299},{"krate":0,"index":7301},{"krate":0,"index":7303},{"krate":0,"index":7305},{"krate":0,"index":7307},{"krate":0,"index":7309},{"krate":0,"index":7311},{"krate":0,"index":7313},{"krate":0,"index":7315},{"krate":0,"index":7317},{"krate":0,"index":7319},{"krate":0,"index":7321},{"krate":0,"index":7323},{"krate":0,"index":7325},{"krate":0,"index":7327},{"krate":0,"index":7329},{"krate":0,"index":7331},{"krate":0,"index":7333},{"krate":0,"index":7335},{"krate":0,"index":7337},{"krate":0,"index":7339},{"krate":0,"index":7341},{"krate":0,"index":7343},{"krate":0,"index":7345},{"krate":0,"index":7347},{"krate":0,"index":7349},{"krate":0,"index":7351},{"krate":0,"index":7353},{"krate":0,"index":7355},{"krate":0,"index":7357},{"krate":0,"index":7359},{"krate":0,"index":7361},{"krate":0,"index":7363},{"krate":0,"index":7365},{"krate":0,"index":7367},{"krate":0,"index":7369},{"krate":0,"index":7371},{"krate":0,"index":7373},{"krate":0,"index":7375},{"krate":0,"index":7377},{"krate":0,"index":7379},{"krate":0,"index":7381},{"krate":0,"index":7383},{"krate":0,"index":7385},{"krate":0,"index":7387},{"krate":0,"index":7389},{"krate":0,"index":7391},{"krate":0,"index":7393},{"krate":0,"index":7395},{"krate":0,"index":7397},{"krate":0,"index":7399},{"krate":0,"index":7401},{"krate":0,"index":7403},{"krate":0,"index":7405},{"krate":0,"index":7407},{"krate":0,"index":7409},{"krate":0,"index":7411},{"krate":0,"index":7413},{"krate":0,"index":7415},{"krate":0,"index":7417},{"krate":0,"index":7419},{"krate":0,"index":7421},{"krate":0,"index":7423},{"krate":0,"index":7425},{"krate":0,"index":7427},{"krate":0,"index":7429},{"krate":0,"index":7431},{"krate":0,"index":7433},{"krate":0,"index":7435},{"krate":0,"index":7437},{"krate":0,"index":7439},{"krate":0,"index":7441},{"krate":0,"index":7443},{"krate":0,"index":7445},{"krate":0,"index":7447},{"krate":0,"index":7449},{"krate":0,"index":7451}],"decl_id":null,"docs":" Timers","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":5895,"byte_end":5930,"line_start":184,"line_end":184,"column_start":1,"column_end":36}},{"value":"/ Timers","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":455688,"byte_end":455698,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":455699,"byte_end":455702,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Pins can be used for PWM output in both push-pull mode (`Alternate`) and open-drain mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":455703,"byte_end":455795,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ (`AlternateOD`).","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":455796,"byte_end":455816,"line_start":4,"line_end":4,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":3206},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":456112,"byte_end":456117,"line_start":18,"line_end":18,"column_start":12,"column_end":17},"name":"Timer","qualname":"::timer::Timer","value":"Timer {  }","parent":null,"children":[{"krate":0,"index":3208},{"krate":0,"index":3209}],"decl_id":null,"docs":" Timer wrapper\n","sig":null,"attributes":[{"value":"/ Timer wrapper","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":456083,"byte_end":456100,"line_start":17,"line_end":17,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3210},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":456211,"byte_end":456225,"line_start":24,"line_end":24,"column_start":12,"column_end":26},"name":"CountDownTimer","qualname":"::timer::CountDownTimer","value":"CountDownTimer {  }","parent":null,"children":[{"krate":0,"index":3212},{"krate":0,"index":3213}],"decl_id":null,"docs":" Hardware timers\n","sig":null,"attributes":[{"value":"/ Hardware timers","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":456180,"byte_end":456199,"line_start":23,"line_end":23,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3216},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":456417,"byte_end":456433,"line_start":34,"line_end":34,"column_start":12,"column_end":28},"name":"start_count_down","qualname":"<Timer<TIM>>::start_count_down","value":"pub fn start_count_down<T>(Self, T) -> CountDownTimer<TIM> where\nT: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":" Starts timer in count down mode at a given frequency\n","sig":null,"attributes":[{"value":"/ Starts timer in count down mode at a given frequency","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":456349,"byte_end":456405,"line_start":33,"line_end":33,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3221},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":456803,"byte_end":456810,"line_start":50,"line_end":50,"column_start":5,"column_end":12},"name":"TimeOut","qualname":"::timer::Event::TimeOut","value":"Event::TimeOut","parent":{"krate":0,"index":3220},"children":[],"decl_id":null,"docs":" CountDownTimer timed out / count down ended\n","sig":null,"attributes":[{"value":"/ CountDownTimer timed out / count down ended","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":456751,"byte_end":456798,"line_start":49,"line_end":49,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":3220},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":456739,"byte_end":456744,"line_start":48,"line_end":48,"column_start":10,"column_end":15},"name":"Event","qualname":"::timer::Event","value":"pub enum Event { TimeOut, }","parent":null,"children":[{"krate":0,"index":3221}],"decl_id":null,"docs":" Interrupt events\n","sig":null,"attributes":[{"value":"/ Interrupt events","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":456709,"byte_end":456729,"line_start":47,"line_end":47,"column_start":1,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7034},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":456916,"byte_end":456924,"line_start":56,"line_end":56,"column_start":5,"column_end":13},"name":"Disabled","qualname":"::timer::Error::Disabled","value":"Error::Disabled","parent":{"krate":0,"index":7033},"children":[],"decl_id":null,"docs":" CountDownTimer is disabled\n","sig":null,"attributes":[{"value":"/ CountDownTimer is disabled","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":456881,"byte_end":456911,"line_start":55,"line_end":55,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":7033},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":456869,"byte_end":456874,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::timer::Error","value":"pub enum Error { Disabled, }","parent":null,"children":[{"krate":0,"index":7034}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3224},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":456984,"byte_end":456988,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"syst","qualname":"<Timer<SYST>>::syst","value":"pub fn syst(SYST, &Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initialize timer\n","sig":null,"attributes":[{"value":"/ Initialize timer","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":456952,"byte_end":456972,"line_start":60,"line_end":60,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3225},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":457184,"byte_end":457191,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"release","qualname":"<Timer<SYST>>::release","value":"pub fn release(Self) -> SYST","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3227},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":457313,"byte_end":457319,"line_start":76,"line_end":76,"column_start":12,"column_end":18},"name":"listen","qualname":"<CountDownTimer<SYST>>::listen","value":"pub fn listen(&mut Self, Event)","parent":null,"children":[],"decl_id":null,"docs":" Starts listening for an `event`\n","sig":null,"attributes":[{"value":"/ Starts listening for an `event`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":457266,"byte_end":457301,"line_start":75,"line_end":75,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3228},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":457495,"byte_end":457503,"line_start":83,"line_end":83,"column_start":12,"column_end":20},"name":"unlisten","qualname":"<CountDownTimer<SYST>>::unlisten","value":"pub fn unlisten(&mut Self, Event)","parent":null,"children":[],"decl_id":null,"docs":" Stops listening for an `event`\n","sig":null,"attributes":[{"value":"/ Stops listening for an `event`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":457449,"byte_end":457483,"line_start":82,"line_end":82,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":7047},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":458791,"byte_end":458800,"line_start":135,"line_end":135,"column_start":12,"column_end":21},"name":"MonoTimer","qualname":"::timer::MonoTimer","value":"MonoTimer {  }","parent":null,"children":[{"krate":0,"index":7048}],"decl_id":null,"docs":" A monotonic non-decreasing timer","sig":null,"attributes":[{"value":"/ A monotonic non-decreasing timer","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":458435,"byte_end":458471,"line_start":128,"line_end":128,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":458472,"byte_end":458475,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ This uses the timer in the debug watch trace peripheral. This means, that if the","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":458476,"byte_end":458560,"line_start":130,"line_end":130,"column_start":1,"column_end":85}},{"value":"/ core is stopped, the timer does not count up. This may be relevant if you are using","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":458561,"byte_end":458648,"line_start":131,"line_end":131,"column_start":1,"column_end":88}},{"value":"/ cortex_m_semihosting::hprintln for debugging in which case the timer will be stopped","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":458649,"byte_end":458737,"line_start":132,"line_end":132,"column_start":1,"column_end":89}},{"value":"/ while printing","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":458738,"byte_end":458756,"line_start":133,"line_end":133,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":3238},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":458896,"byte_end":458899,"line_start":141,"line_end":141,"column_start":12,"column_end":15},"name":"new","qualname":"<MonoTimer>::new","value":"pub fn new(DWT, DCB, &Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Monotonic` timer\n","sig":null,"attributes":[{"value":"/ Creates a new `Monotonic` timer","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":458849,"byte_end":458884,"line_start":140,"line_end":140,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3239},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":459261,"byte_end":459270,"line_start":154,"line_end":154,"column_start":12,"column_end":21},"name":"frequency","qualname":"<MonoTimer>::frequency","value":"pub fn frequency(Self) -> Hertz","parent":null,"children":[],"decl_id":null,"docs":" Returns the frequency at which the monotonic timer is operating at\n","sig":null,"attributes":[{"value":"/ Returns the frequency at which the monotonic timer is operating at","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":459179,"byte_end":459249,"line_start":153,"line_end":153,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3240},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":459381,"byte_end":459384,"line_start":159,"line_end":159,"column_start":12,"column_end":15},"name":"now","qualname":"<MonoTimer>::now","value":"pub fn now(Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Instant` corresponding to \"now\"\n","sig":null,"attributes":[{"value":"/ Returns an `Instant` corresponding to \"now\"","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":459322,"byte_end":459369,"line_start":158,"line_end":158,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":7052},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":459574,"byte_end":459581,"line_start":168,"line_end":168,"column_start":12,"column_end":19},"name":"Instant","qualname":"::timer::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":7053}],"decl_id":null,"docs":" A measurement of a monotonically non-decreasing clock\n","sig":null,"attributes":[{"value":"/ A measurement of a monotonically non-decreasing clock","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":459482,"byte_end":459539,"line_start":166,"line_end":166,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3242},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":459681,"byte_end":459688,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"pub fn elapsed(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Ticks elapsed since the `Instant` was created\n","sig":null,"attributes":[{"value":"/ Ticks elapsed since the `Instant` was created","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":459620,"byte_end":459669,"line_start":173,"line_end":173,"column_start":5,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":3243},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":459777,"byte_end":459785,"line_start":179,"line_end":179,"column_start":11,"column_end":19},"name":"Instance","qualname":"::timer::Instance","value":"Instance: crate::Sealed + rcc::Enable + rcc::Reset + rcc::GetBusFreq","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3246},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":459934,"byte_end":459937,"line_start":186,"line_end":186,"column_start":12,"column_end":15},"name":"new","qualname":"<Timer<TIM>>::new","value":"pub fn new(TIM, &Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initialize timer\n","sig":null,"attributes":[{"value":"/ Initialize timer","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":459902,"byte_end":459922,"line_start":185,"line_end":185,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":3262},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":466667,"byte_end":466672,"line_start":409,"line_end":409,"column_start":11,"column_end":16},"name":"PinC1","qualname":"::timer::PinC1","value":"PinC1<TIM>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3264},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":466691,"byte_end":466696,"line_start":410,"line_end":410,"column_start":11,"column_end":16},"name":"PinC2","qualname":"::timer::PinC2","value":"PinC2<TIM>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3266},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":466715,"byte_end":466720,"line_start":411,"line_end":411,"column_start":11,"column_end":16},"name":"PinC3","qualname":"::timer::PinC3","value":"PinC3<TIM>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3268},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":466739,"byte_end":466744,"line_start":412,"line_end":412,"column_start":11,"column_end":16},"name":"PinC4","qualname":"::timer::PinC4","value":"PinC4<TIM>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3271},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\watchdog.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watchdog","qualname":"::watchdog","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\watchdog.rs","parent":null,"children":[{"krate":0,"index":3272},{"krate":0,"index":3273},{"krate":0,"index":3274},{"krate":0,"index":3277},{"krate":0,"index":3280},{"krate":0,"index":3281},{"krate":0,"index":3284},{"krate":0,"index":3287},{"krate":0,"index":3288},{"krate":0,"index":3290},{"krate":0,"index":3292},{"krate":0,"index":3293},{"krate":0,"index":3294},{"krate":0,"index":3295},{"krate":0,"index":3296},{"krate":0,"index":3297},{"krate":0,"index":3313},{"krate":0,"index":3318}],"decl_id":null,"docs":" Watchdog peripherals\n","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":5946,"byte_end":5981,"line_start":186,"line_end":186,"column_start":1,"column_end":36}},{"value":"/ Watchdog peripherals","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\watchdog.rs","byte_start":471473,"byte_end":471497,"line_start":1,"line_end":1,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":3290},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\watchdog.rs","byte_start":471676,"byte_end":471695,"line_start":10,"line_end":10,"column_start":12,"column_end":31},"name":"IndependentWatchdog","qualname":"::watchdog::IndependentWatchdog","value":"IndependentWatchdog {  }","parent":null,"children":[{"krate":0,"index":3291}],"decl_id":null,"docs":" Wraps the Independent Watchdog (IWDG) peripheral\n","sig":null,"attributes":[{"value":"/ Wraps the Independent Watchdog (IWDG) peripheral","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\watchdog.rs","byte_start":471612,"byte_end":471664,"line_start":9,"line_end":9,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3298},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\watchdog.rs","byte_start":471937,"byte_end":471940,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<IndependentWatchdog>::new","value":"pub fn new(IWDG) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wrap and start the watchdog\n","sig":null,"attributes":[{"value":"/ Wrap and start the watchdog","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\watchdog.rs","byte_start":471894,"byte_end":471925,"line_start":21,"line_end":21,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3299},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\watchdog.rs","byte_start":472081,"byte_end":472094,"line_start":27,"line_end":27,"column_start":12,"column_end":25},"name":"stop_on_debug","qualname":"<IndependentWatchdog>::stop_on_debug","value":"pub fn stop_on_debug(&Self, &DBGMCU, bool)","parent":null,"children":[],"decl_id":null,"docs":" Debug independent watchdog stopped when core is halted\n","sig":null,"attributes":[{"value":"/ Debug independent watchdog stopped when core is halted","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\watchdog.rs","byte_start":472011,"byte_end":472069,"line_start":26,"line_end":26,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3306},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\watchdog.rs","byte_start":472846,"byte_end":472854,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"interval","qualname":"<IndependentWatchdog>::interval","value":"pub fn interval(&Self) -> MilliSeconds","parent":null,"children":[],"decl_id":null,"docs":" Returns the interval in ms\n","sig":null,"attributes":[{"value":"/ Returns the interval in ms","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\watchdog.rs","byte_start":472804,"byte_end":472834,"line_start":51,"line_end":51,"column_start":5,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":3322},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":6064,"byte_end":6070,"line_start":191,"line_end":191,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":8662,"byte_end":8670,"line_start":99,"line_end":99,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":9910,"byte_end":9920,"line_start":144,"line_end":144,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":17145,"byte_end":17154,"line_start":389,"line_end":389,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":19175,"byte_end":19184,"line_start":450,"line_end":450,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":25006,"byte_end":25009,"line_start":611,"line_end":611,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":64950,"byte_end":64955,"line_start":20,"line_end":20,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\delay\\syst.rs","byte_start":69826,"byte_end":69831,"line_start":12,"line_end":12,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\delay\\syst.rs","byte_start":70258,"byte_end":70263,"line_start":28,"line_end":28,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\delay\\syst.rs","byte_start":70376,"byte_end":70381,"line_start":34,"line_end":34,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\delay\\syst.rs","byte_start":70490,"byte_end":70495,"line_start":40,"line_end":40,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\delay\\syst.rs","byte_start":70604,"byte_end":70609,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\delay\\syst.rs","byte_start":71378,"byte_end":71383,"line_start":74,"line_end":74,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\delay\\syst.rs","byte_start":71491,"byte_end":71496,"line_start":80,"line_end":80,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\delay\\mod.rs","byte_start":69461,"byte_end":69466,"line_start":15,"line_end":15,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":104378,"byte_end":104384,"line_start":6,"line_end":6,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":104521,"byte_end":104524,"line_start":11,"line_end":11,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":104749,"byte_end":104752,"line_start":20,"line_end":20,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":104962,"byte_end":104965,"line_start":28,"line_end":28,"column_start":75,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":105194,"byte_end":105197,"line_start":36,"line_end":36,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":105424,"byte_end":105427,"line_start":45,"line_end":45,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":105665,"byte_end":105668,"line_start":54,"line_end":54,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":105895,"byte_end":105898,"line_start":63,"line_end":63,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":106138,"byte_end":106141,"line_start":72,"line_end":72,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":106360,"byte_end":106363,"line_start":80,"line_end":80,"column_start":71,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":106574,"byte_end":106577,"line_start":87,"line_end":87,"column_start":69,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":106795,"byte_end":106798,"line_start":95,"line_end":95,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":106999,"byte_end":107002,"line_start":103,"line_end":103,"column_start":62,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":107220,"byte_end":107223,"line_start":111,"line_end":111,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":107449,"byte_end":107452,"line_start":120,"line_end":120,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":107664,"byte_end":107667,"line_start":128,"line_end":128,"column_start":71,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":107876,"byte_end":107879,"line_start":135,"line_end":135,"column_start":71,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":108091,"byte_end":108094,"line_start":142,"line_end":142,"column_start":74,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":108291,"byte_end":108294,"line_start":149,"line_end":149,"column_start":62,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":108508,"byte_end":108511,"line_start":157,"line_end":157,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":108733,"byte_end":108736,"line_start":166,"line_end":166,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":108944,"byte_end":108947,"line_start":174,"line_end":174,"column_start":71,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":109157,"byte_end":109160,"line_start":181,"line_end":181,"column_start":69,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":109377,"byte_end":109380,"line_start":189,"line_end":189,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":109580,"byte_end":109583,"line_start":197,"line_end":197,"column_start":62,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":109800,"byte_end":109803,"line_start":205,"line_end":205,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":110028,"byte_end":110031,"line_start":214,"line_end":214,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":110248,"byte_end":110251,"line_start":223,"line_end":223,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":110469,"byte_end":110472,"line_start":232,"line_end":232,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":110681,"byte_end":110684,"line_start":240,"line_end":240,"column_start":62,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":110906,"byte_end":110909,"line_start":248,"line_end":248,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":111139,"byte_end":111142,"line_start":257,"line_end":257,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":111364,"byte_end":111367,"line_start":266,"line_end":266,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":111584,"byte_end":111587,"line_start":275,"line_end":275,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":111795,"byte_end":111798,"line_start":283,"line_end":283,"column_start":62,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":112018,"byte_end":112021,"line_start":291,"line_end":291,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":112249,"byte_end":112252,"line_start":300,"line_end":300,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":112468,"byte_end":112471,"line_start":308,"line_end":308,"column_start":73,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":112665,"byte_end":112668,"line_start":315,"line_end":315,"column_start":74,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":112870,"byte_end":112873,"line_start":322,"line_end":322,"column_start":81,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":113081,"byte_end":113084,"line_start":330,"line_end":330,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":113247,"byte_end":113250,"line_start":338,"line_end":338,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":478},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":503},{"krate":0,"index":506},{"krate":0,"index":509},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":518},{"krate":0,"index":521},{"krate":0,"index":524},{"krate":0,"index":527},{"krate":0,"index":530},{"krate":0,"index":533},{"krate":0,"index":536},{"krate":0,"index":539},{"krate":0,"index":542},{"krate":0,"index":545},{"krate":0,"index":548},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":557},{"krate":0,"index":560},{"krate":0,"index":563},{"krate":0,"index":566},{"krate":0,"index":569},{"krate":0,"index":572},{"krate":0,"index":575},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":124195,"byte_end":124198,"line_start":651,"line_end":651,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":599},{"krate":0,"index":602},{"krate":0,"index":605},{"krate":0,"index":608},{"krate":0,"index":611},{"krate":0,"index":614},{"krate":0,"index":617},{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":128337,"byte_end":128346,"line_start":775,"line_end":775,"column_start":62,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":128849,"byte_end":128854,"line_start":796,"line_end":796,"column_start":24,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":128885,"byte_end":128890,"line_start":797,"line_end":797,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":641},{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":128987,"byte_end":128992,"line_start":802,"line_end":802,"column_start":24,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":129023,"byte_end":129028,"line_start":803,"line_end":803,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":129125,"byte_end":129130,"line_start":808,"line_end":808,"column_start":24,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":129159,"byte_end":129164,"line_start":809,"line_end":809,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":129259,"byte_end":129265,"line_start":814,"line_end":814,"column_start":24,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":129286,"byte_end":129292,"line_start":815,"line_end":815,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":653},{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":129379,"byte_end":129385,"line_start":820,"line_end":820,"column_start":24,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":129417,"byte_end":129423,"line_start":821,"line_end":821,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":129564,"byte_end":129570,"line_start":827,"line_end":827,"column_start":24,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":129601,"byte_end":129607,"line_start":828,"line_end":828,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":129885,"byte_end":129890,"line_start":840,"line_end":840,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":674},{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":130044,"byte_end":130047,"line_start":844,"line_end":844,"column_start":82,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":130274,"byte_end":130277,"line_start":854,"line_end":854,"column_start":67,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":687},{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":130504,"byte_end":130509,"line_start":863,"line_end":863,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":695},{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":130665,"byte_end":130668,"line_start":867,"line_end":867,"column_start":84,"column_end":87},"value":"","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":131041,"byte_end":131044,"line_start":882,"line_end":882,"column_start":69,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":131513,"byte_end":131531,"line_start":14,"line_end":14,"column_start":27,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":131700,"byte_end":131718,"line_start":23,"line_end":23,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":131935,"byte_end":131953,"line_start":36,"line_end":36,"column_start":27,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":746},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":133329,"byte_end":133347,"line_start":91,"line_end":91,"column_start":41,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":133695,"byte_end":133713,"line_start":107,"line_end":107,"column_start":49,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":762},{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":134017,"byte_end":134035,"line_start":119,"line_end":119,"column_start":51,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":134228,"byte_end":134246,"line_start":129,"line_end":129,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":771},{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":134593,"byte_end":134611,"line_start":142,"line_end":142,"column_start":34,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":134910,"byte_end":134928,"line_start":156,"line_end":156,"column_start":27,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":781},{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":135275,"byte_end":135293,"line_start":169,"line_end":169,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":135856,"byte_end":135865,"line_start":14,"line_end":14,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":136082,"byte_end":136091,"line_start":27,"line_end":27,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":137134,"byte_end":137143,"line_start":56,"line_end":56,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":818},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":138435,"byte_end":138444,"line_start":110,"line_end":110,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":138789,"byte_end":138798,"line_start":126,"line_end":126,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":832},{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":139084,"byte_end":139093,"line_start":138,"line_end":138,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":836},{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":139268,"byte_end":139277,"line_start":148,"line_end":148,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":139538,"byte_end":139547,"line_start":160,"line_end":160,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":139843,"byte_end":139852,"line_start":174,"line_end":174,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":848}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":140113,"byte_end":140122,"line_start":186,"line_end":186,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":82439,"byte_end":82445,"line_start":159,"line_end":159,"column_start":30,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":82484,"byte_end":82489,"line_start":160,"line_end":160,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":82892,"byte_end":82895,"line_start":172,"line_end":172,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":928},{"krate":0,"index":933},{"krate":0,"index":940},{"krate":0,"index":942},{"krate":0,"index":944},{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":86200,"byte_end":86203,"line_start":269,"line_end":269,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":86342,"byte_end":86345,"line_start":275,"line_end":275,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":86573,"byte_end":86576,"line_start":288,"line_end":288,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":968}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":86946,"byte_end":86949,"line_start":303,"line_end":303,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":87387,"byte_end":87390,"line_start":316,"line_end":316,"column_start":47,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":979},{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":88152,"byte_end":88155,"line_start":344,"line_end":344,"column_start":47,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":88548,"byte_end":88551,"line_start":358,"line_end":358,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":89453,"byte_end":89456,"line_start":384,"line_end":384,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1004},{"krate":0,"index":1006},{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":90698,"byte_end":90701,"line_start":418,"line_end":418,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":91701,"byte_end":91704,"line_start":466,"line_end":466,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":92068,"byte_end":92071,"line_start":482,"line_end":482,"column_start":62,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1030},{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":92391,"byte_end":92394,"line_start":494,"line_end":494,"column_start":64,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1036},{"krate":0,"index":1037}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":92603,"byte_end":92606,"line_start":504,"line_end":504,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1041},{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":92857,"byte_end":92860,"line_start":516,"line_end":516,"column_start":47,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":93175,"byte_end":93178,"line_start":530,"line_end":530,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1053},{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":93429,"byte_end":93432,"line_start":542,"line_end":542,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":93757,"byte_end":93760,"line_start":556,"line_end":556,"column_start":56,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":94118,"byte_end":94121,"line_start":568,"line_end":568,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":94523,"byte_end":94526,"line_start":581,"line_end":581,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":103303,"byte_end":103307,"line_start":858,"line_end":858,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":141117,"byte_end":141121,"line_start":38,"line_end":38,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1155},{"krate":0,"index":1157},{"krate":0,"index":1159}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":141663,"byte_end":141667,"line_start":60,"line_end":60,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1162}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":146787,"byte_end":146791,"line_start":276,"line_end":276,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":146813,"byte_end":146817,"line_start":277,"line_end":277,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":146865,"byte_end":146869,"line_start":280,"line_end":280,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":146926,"byte_end":146929,"line_start":282,"line_end":282,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1191},{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":147804,"byte_end":147807,"line_start":314,"line_end":314,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1197},{"krate":0,"index":1206}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":151799,"byte_end":151802,"line_start":431,"line_end":431,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1220},{"krate":0,"index":1223},{"krate":0,"index":1225}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":154064,"byte_end":154067,"line_start":508,"line_end":508,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1229},{"krate":0,"index":1230}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":154357,"byte_end":154360,"line_start":522,"line_end":522,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1234},{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":154821,"byte_end":154824,"line_start":542,"line_end":542,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1240},{"krate":0,"index":1241}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":220509,"byte_end":220513,"line_start":224,"line_end":224,"column_start":17,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":220533,"byte_end":220537,"line_start":225,"line_end":225,"column_start":17,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":221210,"byte_end":221214,"line_start":251,"line_end":251,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1394}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":221328,"byte_end":221332,"line_start":258,"line_end":258,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1396}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":158004,"byte_end":158012,"line_start":43,"line_end":43,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1435}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":158743,"byte_end":158761,"line_start":68,"line_end":68,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1437}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":158850,"byte_end":158868,"line_start":75,"line_end":75,"column_start":20,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1439},{"krate":0,"index":1440}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":159209,"byte_end":159223,"line_start":91,"line_end":91,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1443}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":159318,"byte_end":159332,"line_start":98,"line_end":98,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1446},{"krate":0,"index":1447}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":159636,"byte_end":159654,"line_start":112,"line_end":112,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1449}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":159743,"byte_end":159761,"line_start":119,"line_end":119,"column_start":20,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1451},{"krate":0,"index":1452}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":159935,"byte_end":159949,"line_start":128,"line_end":128,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1454},{"krate":0,"index":1455}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":160072,"byte_end":160086,"line_start":135,"line_end":135,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1457},{"krate":0,"index":1458}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":160211,"byte_end":160225,"line_start":142,"line_end":142,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1460},{"krate":0,"index":1461}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":160762,"byte_end":160771,"line_start":168,"line_end":168,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":161383,"byte_end":161396,"line_start":191,"line_end":191,"column_start":14,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1465},{"krate":0,"index":1466}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":161758,"byte_end":161765,"line_start":208,"line_end":208,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1474}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":161876,"byte_end":161883,"line_start":214,"line_end":214,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1478}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":163058,"byte_end":163065,"line_start":254,"line_end":254,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":163098,"byte_end":163105,"line_start":255,"line_end":255,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":163138,"byte_end":163145,"line_start":256,"line_end":256,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":163178,"byte_end":163185,"line_start":257,"line_end":257,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":163218,"byte_end":163225,"line_start":258,"line_end":258,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":163258,"byte_end":163265,"line_start":259,"line_end":259,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":163298,"byte_end":163305,"line_start":260,"line_end":260,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":163338,"byte_end":163345,"line_start":261,"line_end":261,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":163672,"byte_end":163684,"line_start":275,"line_end":275,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1548}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":164299,"byte_end":164306,"line_start":297,"line_end":297,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1555},{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":1566},{"krate":0,"index":1567},{"krate":0,"index":1569},{"krate":0,"index":1572},{"krate":0,"index":1574},{"krate":0,"index":1576},{"krate":0,"index":1578},{"krate":0,"index":1580},{"krate":0,"index":1582},{"krate":0,"index":1585},{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1590},{"krate":0,"index":1592},{"krate":0,"index":1594},{"krate":0,"index":1596},{"krate":0,"index":1598},{"krate":0,"index":1600},{"krate":0,"index":1602},{"krate":0,"index":1604},{"krate":0,"index":1606},{"krate":0,"index":1608},{"krate":0,"index":1609}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":177621,"byte_end":177629,"line_start":691,"line_end":691,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1617}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":178199,"byte_end":178212,"line_start":715,"line_end":715,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1619}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":178904,"byte_end":178913,"line_start":739,"line_end":739,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1621}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":179927,"byte_end":179936,"line_start":768,"line_end":768,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1623}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":180643,"byte_end":180652,"line_start":788,"line_end":788,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1625},{"krate":0,"index":1626},{"krate":0,"index":1627},{"krate":0,"index":1628},{"krate":0,"index":1629},{"krate":0,"index":1630},{"krate":0,"index":1631},{"krate":0,"index":1632},{"krate":0,"index":1633},{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1636},{"krate":0,"index":1637}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":184081,"byte_end":184089,"line_start":887,"line_end":887,"column_start":5,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1655},{"krate":0,"index":1657},{"krate":0,"index":1658}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":190090,"byte_end":190098,"line_start":1018,"line_end":1018,"column_start":5,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1666},{"krate":0,"index":1668},{"krate":0,"index":1669}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":196151,"byte_end":196159,"line_start":1152,"line_end":1152,"column_start":5,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1678},{"krate":0,"index":1679},{"krate":0,"index":1680}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":200186,"byte_end":200194,"line_start":1251,"line_end":1251,"column_start":5,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1689},{"krate":0,"index":1691},{"krate":0,"index":1693},{"krate":0,"index":1694},{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701},{"krate":0,"index":1702},{"krate":0,"index":1703},{"krate":0,"index":1704},{"krate":0,"index":1705}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":212779,"byte_end":212787,"line_start":1583,"line_end":1583,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1712}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":255904,"byte_end":255907,"line_start":11,"line_end":11,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1737}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":256291,"byte_end":256294,"line_start":30,"line_end":30,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1747}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":257511,"byte_end":257516,"line_start":66,"line_end":66,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1752},{"krate":0,"index":1753}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":259055,"byte_end":259060,"line_start":103,"line_end":103,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1756}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":259325,"byte_end":259330,"line_start":111,"line_end":111,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1759}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":259943,"byte_end":259952,"line_start":130,"line_end":130,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1767},{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1771}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":261579,"byte_end":261592,"line_start":186,"line_end":186,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1773},{"krate":0,"index":1774},{"krate":0,"index":1775},{"krate":0,"index":1776},{"krate":0,"index":1777},{"krate":0,"index":1778}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":262702,"byte_end":262707,"line_start":15,"line_end":15,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1794}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":263804,"byte_end":263809,"line_start":51,"line_end":51,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1801},{"krate":0,"index":1802},{"krate":0,"index":1803}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":264257,"byte_end":264270,"line_start":74,"line_end":74,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1809}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":264342,"byte_end":264355,"line_start":80,"line_end":80,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1811},{"krate":0,"index":1812},{"krate":0,"index":1816},{"krate":0,"index":1817}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm_input.rs","byte_start":290261,"byte_end":290264,"line_start":10,"line_end":10,"column_start":30,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\qei.rs","byte_start":299528,"byte_end":299531,"line_start":25,"line_end":25,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2119}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\qei.rs","byte_start":300048,"byte_end":300051,"line_start":44,"line_end":44,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2123}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\qei.rs","byte_start":300234,"byte_end":300237,"line_start":51,"line_end":51,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2127},{"krate":0,"index":2128},{"krate":0,"index":2129}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\pll.rs","byte_start":351935,"byte_end":351942,"line_start":13,"line_end":13,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2171}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\pll.rs","byte_start":359813,"byte_end":359819,"line_start":235,"line_end":235,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2181},{"krate":0,"index":2182},{"krate":0,"index":2185},{"krate":0,"index":2186}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\pll.rs","byte_start":367409,"byte_end":367424,"line_start":479,"line_end":479,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2193}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":305886,"byte_end":305887,"line_start":102,"line_end":102,"column_start":24,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2225},{"krate":0,"index":2226}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":306223,"byte_end":306227,"line_start":120,"line_end":120,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2230},{"krate":0,"index":2231},{"krate":0,"index":2232}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":306675,"byte_end":306679,"line_start":142,"line_end":142,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2236},{"krate":0,"index":2237},{"krate":0,"index":2238}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":307559,"byte_end":307563,"line_start":185,"line_end":185,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2242},{"krate":0,"index":2243},{"krate":0,"index":2244}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":307939,"byte_end":307943,"line_start":205,"line_end":205,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2248},{"krate":0,"index":2249},{"krate":0,"index":2250}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":308254,"byte_end":308258,"line_start":220,"line_end":220,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2252}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":308394,"byte_end":308398,"line_start":227,"line_end":227,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2254}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":308651,"byte_end":308655,"line_start":240,"line_end":240,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2256},{"krate":0,"index":2257}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":308921,"byte_end":308925,"line_start":250,"line_end":250,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2259},{"krate":0,"index":2260}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":309187,"byte_end":309190,"line_start":260,"line_end":260,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2262}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":315509,"byte_end":315513,"line_start":490,"line_end":490,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2281},{"krate":0,"index":2283},{"krate":0,"index":2284},{"krate":0,"index":2286},{"krate":0,"index":2288},{"krate":0,"index":2290},{"krate":0,"index":2292},{"krate":0,"index":2293},{"krate":0,"index":2295},{"krate":0,"index":2297},{"krate":0,"index":2298},{"krate":0,"index":2299},{"krate":0,"index":2304},{"krate":0,"index":2305},{"krate":0,"index":2306}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":341133,"byte_end":341142,"line_start":1289,"line_end":1289,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2324}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":342638,"byte_end":342651,"line_start":1351,"line_end":1351,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2329}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":348518,"byte_end":348524,"line_start":1564,"line_end":1564,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2333},{"krate":0,"index":2334},{"krate":0,"index":2335},{"krate":0,"index":2336},{"krate":0,"index":2337},{"krate":0,"index":2338},{"krate":0,"index":2339},{"krate":0,"index":2340},{"krate":0,"index":2342}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rtc.rs","byte_start":376485,"byte_end":376488,"line_start":23,"line_end":23,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":2392},{"krate":0,"index":2396},{"krate":0,"index":2398},{"krate":0,"index":2400},{"krate":0,"index":2401}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rtc.rs","byte_start":379428,"byte_end":379431,"line_start":110,"line_end":110,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2409},{"krate":0,"index":2410},{"krate":0,"index":2413},{"krate":0,"index":2416},{"krate":0,"index":2419},{"krate":0,"index":2422},{"krate":0,"index":2425},{"krate":0,"index":2428},{"krate":0,"index":2431},{"krate":0,"index":2434},{"krate":0,"index":2437},{"krate":0,"index":2441},{"krate":0,"index":2442},{"krate":0,"index":2443},{"krate":0,"index":2444},{"krate":0,"index":2445},{"krate":0,"index":2446},{"krate":0,"index":2447},{"krate":0,"index":2448},{"krate":0,"index":2449},{"krate":0,"index":2450}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":393174,"byte_end":393180,"line_start":131,"line_end":131,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2575},{"krate":0,"index":2576},{"krate":0,"index":2577},{"krate":0,"index":2578},{"krate":0,"index":2579},{"krate":0,"index":2580},{"krate":0,"index":2581}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":394136,"byte_end":394142,"line_start":171,"line_end":171,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2583}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":394866,"byte_end":394871,"line_start":205,"line_end":205,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2600}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":394956,"byte_end":394961,"line_start":212,"line_end":212,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2604}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":404787,"byte_end":404789,"line_start":560,"line_end":560,"column_start":19,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2628},{"krate":0,"index":2629},{"krate":0,"index":2631},{"krate":0,"index":2633},{"krate":0,"index":2635},{"krate":0,"index":2637},{"krate":0,"index":2638},{"krate":0,"index":2639}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":406480,"byte_end":406482,"line_start":616,"line_end":616,"column_start":19,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2643},{"krate":0,"index":2644},{"krate":0,"index":2646},{"krate":0,"index":2648}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":407344,"byte_end":407350,"line_start":646,"line_end":646,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2653}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":407492,"byte_end":407498,"line_start":652,"line_end":652,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2658}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":407640,"byte_end":407646,"line_start":658,"line_end":658,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2663}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":407800,"byte_end":407806,"line_start":664,"line_end":664,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2668}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":407965,"byte_end":407971,"line_start":670,"line_end":670,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2676},{"krate":0,"index":2683}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":412657,"byte_end":412663,"line_start":810,"line_end":810,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2689}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":413073,"byte_end":413079,"line_start":825,"line_end":825,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2696}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":413476,"byte_end":413482,"line_start":840,"line_end":840,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2702},{"krate":0,"index":2706},{"krate":0,"index":2710},{"krate":0,"index":2711},{"krate":0,"index":2712},{"krate":0,"index":2713},{"krate":0,"index":2714},{"krate":0,"index":2715},{"krate":0,"index":2716}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":415770,"byte_end":415776,"line_start":905,"line_end":905,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2720}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":416213,"byte_end":416219,"line_start":922,"line_end":922,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2724}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":416684,"byte_end":416690,"line_start":939,"line_end":939,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2729},{"krate":0,"index":2730}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":416937,"byte_end":416939,"line_start":951,"line_end":951,"column_start":34,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2733},{"krate":0,"index":2734}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":417549,"byte_end":417551,"line_start":968,"line_end":968,"column_start":35,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2738},{"krate":0,"index":2739}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":418631,"byte_end":418633,"line_start":1004,"line_end":1004,"column_start":36,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2742},{"krate":0,"index":2743}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":418869,"byte_end":418875,"line_start":1016,"line_end":1016,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2748},{"krate":0,"index":2749},{"krate":0,"index":2750}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":419235,"byte_end":419237,"line_start":1032,"line_end":1032,"column_start":36,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2753},{"krate":0,"index":2754}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":419459,"byte_end":419461,"line_start":1044,"line_end":1044,"column_start":35,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2757},{"krate":0,"index":2758},{"krate":0,"index":2759}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":420172,"byte_end":420174,"line_start":1066,"line_end":1066,"column_start":36,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2762},{"krate":0,"index":2763},{"krate":0,"index":2764}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":421026,"byte_end":421028,"line_start":1097,"line_end":1097,"column_start":46,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2768},{"krate":0,"index":2769},{"krate":0,"index":2770}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":421849,"byte_end":421851,"line_start":1127,"line_end":1127,"column_start":45,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2773},{"krate":0,"index":2774},{"krate":0,"index":2775}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":422674,"byte_end":422680,"line_start":1157,"line_end":1157,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2779},{"krate":0,"index":2780},{"krate":0,"index":2781}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":423005,"byte_end":423011,"line_start":1172,"line_end":1172,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2785},{"krate":0,"index":2786},{"krate":0,"index":2787}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":423308,"byte_end":423314,"line_start":1187,"line_end":1187,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2792}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":428333,"byte_end":428339,"line_start":1357,"line_end":1357,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2803}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":428514,"byte_end":428516,"line_start":1366,"line_end":1366,"column_start":28,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2806}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":429496,"byte_end":429499,"line_start":35,"line_end":35,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":2816},{"krate":0,"index":2817},{"krate":0,"index":2818},{"krate":0,"index":2819}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":430005,"byte_end":430014,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2821},{"krate":0,"index":2822}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":430395,"byte_end":430402,"line_start":81,"line_end":81,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2824}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":430660,"byte_end":430670,"line_start":94,"line_end":94,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2826}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":430931,"byte_end":430942,"line_start":107,"line_end":107,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2828}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":432659,"byte_end":432664,"line_start":83,"line_end":83,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2930}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":432744,"byte_end":432749,"line_start":89,"line_end":89,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2934}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":432829,"byte_end":432834,"line_start":95,"line_end":95,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2938}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":439943,"byte_end":439946,"line_start":442,"line_end":442,"column_start":5,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":2962},{"krate":0,"index":2964}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":441208,"byte_end":441211,"line_start":484,"line_end":484,"column_start":5,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":2973},{"krate":0,"index":2975}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":442495,"byte_end":442498,"line_start":526,"line_end":526,"column_start":5,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":2985},{"krate":0,"index":2986}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":443131,"byte_end":443134,"line_start":547,"line_end":547,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2990}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":443562,"byte_end":443565,"line_start":567,"line_end":567,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2995}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":444002,"byte_end":444005,"line_start":587,"line_end":587,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3001},{"krate":0,"index":3003},{"krate":0,"index":3005},{"krate":0,"index":3008},{"krate":0,"index":3012},{"krate":0,"index":3016},{"krate":0,"index":3017},{"krate":0,"index":3018},{"krate":0,"index":3019},{"krate":0,"index":3020},{"krate":0,"index":3021},{"krate":0,"index":3024},{"krate":0,"index":3025}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":449602,"byte_end":449605,"line_start":762,"line_end":762,"column_start":41,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3029},{"krate":0,"index":3030},{"krate":0,"index":3031}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":449911,"byte_end":449914,"line_start":777,"line_end":777,"column_start":41,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3035},{"krate":0,"index":3036},{"krate":0,"index":3038}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":450573,"byte_end":450576,"line_start":799,"line_end":799,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3080},{"krate":0,"index":3081}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":451035,"byte_end":451038,"line_start":816,"line_end":816,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3086},{"krate":0,"index":3087}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":451460,"byte_end":451463,"line_start":833,"line_end":833,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3091},{"krate":0,"index":3092}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":451845,"byte_end":451848,"line_start":849,"line_end":849,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3096},{"krate":0,"index":3097}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":452354,"byte_end":452357,"line_start":869,"line_end":869,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3102},{"krate":0,"index":3103}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":452849,"byte_end":452852,"line_start":888,"line_end":888,"column_start":69,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":3110},{"krate":0,"index":3111}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\syscfg.rs","byte_start":453658,"byte_end":453664,"line_start":11,"line_end":11,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3131}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\syscfg.rs","byte_start":454005,"byte_end":454011,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3136},{"krate":0,"index":3137}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","byte_start":455192,"byte_end":455197,"line_start":54,"line_end":54,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3152}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","byte_start":455279,"byte_end":455284,"line_start":60,"line_end":60,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3154}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","byte_start":455387,"byte_end":455392,"line_start":66,"line_end":66,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3156}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","byte_start":455499,"byte_end":455508,"line_start":72,"line_end":72,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3158}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":456276,"byte_end":456281,"line_start":29,"line_end":29,"column_start":11,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3216}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":456685,"byte_end":456699,"line_start":45,"line_end":45,"column_start":24,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":456934,"byte_end":456939,"line_start":59,"line_end":59,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3224},{"krate":0,"index":3225}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":457239,"byte_end":457253,"line_start":74,"line_end":74,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3227},{"krate":0,"index":3228}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":457651,"byte_end":457665,"line_start":90,"line_end":90,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3230},{"krate":0,"index":3231},{"krate":0,"index":3233}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":458171,"byte_end":458185,"line_start":115,"line_end":115,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3235},{"krate":0,"index":3236}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":458833,"byte_end":458842,"line_start":139,"line_end":139,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3238},{"krate":0,"index":3239},{"krate":0,"index":3240}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":459606,"byte_end":459613,"line_start":172,"line_end":172,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3242}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":459860,"byte_end":459865,"line_start":181,"line_end":181,"column_start":11,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3246}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\watchdog.rs","byte_start":471868,"byte_end":471887,"line_start":20,"line_end":20,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3298},{"krate":0,"index":3299},{"krate":0,"index":3301},{"krate":0,"index":3305},{"krate":0,"index":3306},{"krate":0,"index":3307},{"krate":0,"index":3308}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\watchdog.rs","byte_start":473917,"byte_end":473936,"line_start":90,"line_end":90,"column_start":25,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3314},{"krate":0,"index":3315}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\watchdog.rs","byte_start":474160,"byte_end":474179,"line_start":100,"line_end":100,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3319}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":3896,"byte_end":3899,"line_start":107,"line_end":107,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":19}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":3945,"byte_end":3947,"line_start":109,"line_end":109,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":98}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":4120,"byte_end":4125,"line_start":117,"line_end":117,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":111}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":4242,"byte_end":4247,"line_start":121,"line_end":121,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":148}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":4373,"byte_end":4377,"line_start":126,"line_end":126,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":233}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":4423,"byte_end":4426,"line_start":128,"line_end":128,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1087}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":4962,"byte_end":4965,"line_start":148,"line_end":148,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1248}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":157297,"byte_end":157303,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1296}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":5011,"byte_end":5014,"line_start":150,"line_end":150,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1713}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":5060,"byte_end":5065,"line_start":152,"line_end":152,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1779}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":5246,"byte_end":5253,"line_start":160,"line_end":160,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1825}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":5299,"byte_end":5302,"line_start":162,"line_end":162,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1903}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":5383,"byte_end":5392,"line_start":165,"line_end":165,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":2056}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":5438,"byte_end":5441,"line_start":167,"line_end":167,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2083}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":5487,"byte_end":5490,"line_start":169,"line_end":169,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2136}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":5536,"byte_end":5539,"line_start":171,"line_end":171,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2343}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":5681,"byte_end":5687,"line_start":175,"line_end":175,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2459}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":5733,"byte_end":5742,"line_start":177,"line_end":177,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":2809}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":5788,"byte_end":5791,"line_start":179,"line_end":179,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2829}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":5837,"byte_end":5843,"line_start":181,"line_end":181,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3114}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":5889,"byte_end":5893,"line_start":183,"line_end":183,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3138}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":5939,"byte_end":5944,"line_start":185,"line_end":185,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3159}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\lib.rs","byte_start":5990,"byte_end":5998,"line_start":187,"line_end":187,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":3271}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":8662,"byte_end":8670,"line_start":99,"line_end":99,"column_start":23,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":3326},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":9910,"byte_end":9920,"line_start":144,"line_end":144,"column_start":23,"column_end":33},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":3369},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":17145,"byte_end":17154,"line_start":389,"line_end":389,"column_start":10,"column_end":19},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":3524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":19175,"byte_end":19184,"line_start":450,"line_end":450,"column_start":22,"column_end":31},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":3524},"to":{"krate":1,"index":3001}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\adc.rs","byte_start":25006,"byte_end":25009,"line_start":611,"line_end":611,"column_start":26,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3540},"to":{"krate":1,"index":9578}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\crc32.rs","byte_start":64950,"byte_end":64955,"line_start":20,"line_end":20,"column_start":6,"column_end":11},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\delay\\syst.rs","byte_start":69826,"byte_end":69831,"line_start":12,"line_end":12,"column_start":6,"column_end":11},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\delay\\syst.rs","byte_start":70258,"byte_end":70263,"line_start":28,"line_end":28,"column_start":23,"column_end":28},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":194},"to":{"krate":4,"index":28}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\delay\\syst.rs","byte_start":70376,"byte_end":70381,"line_start":34,"line_end":34,"column_start":23,"column_end":28},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":194},"to":{"krate":4,"index":28}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\delay\\syst.rs","byte_start":70490,"byte_end":70495,"line_start":40,"line_end":40,"column_start":22,"column_end":27},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":194},"to":{"krate":4,"index":28}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\delay\\syst.rs","byte_start":70604,"byte_end":70609,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":194},"to":{"krate":4,"index":31}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\delay\\syst.rs","byte_start":71378,"byte_end":71383,"line_start":74,"line_end":74,"column_start":23,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":194},"to":{"krate":4,"index":31}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\delay\\syst.rs","byte_start":71491,"byte_end":71496,"line_start":80,"line_end":80,"column_start":22,"column_end":27},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":194},"to":{"krate":4,"index":31}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\delay\\mod.rs","byte_start":69461,"byte_end":69466,"line_start":15,"line_end":15,"column_start":9,"column_end":14},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":104378,"byte_end":104384,"line_start":6,"line_end":6,"column_start":32,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":104521,"byte_end":104524,"line_start":11,"line_end":11,"column_start":9,"column_end":12},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":104749,"byte_end":104752,"line_start":20,"line_end":20,"column_start":9,"column_end":12},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":104962,"byte_end":104965,"line_start":28,"line_end":28,"column_start":75,"column_end":78},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":105194,"byte_end":105197,"line_start":36,"line_end":36,"column_start":9,"column_end":12},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":105424,"byte_end":105427,"line_start":45,"line_end":45,"column_start":9,"column_end":12},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":105665,"byte_end":105668,"line_start":54,"line_end":54,"column_start":9,"column_end":12},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":105895,"byte_end":105898,"line_start":63,"line_end":63,"column_start":9,"column_end":12},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":106138,"byte_end":106141,"line_start":72,"line_end":72,"column_start":9,"column_end":12},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":106360,"byte_end":106363,"line_start":80,"line_end":80,"column_start":71,"column_end":74},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":106574,"byte_end":106577,"line_start":87,"line_end":87,"column_start":69,"column_end":72},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":106795,"byte_end":106798,"line_start":95,"line_end":95,"column_start":9,"column_end":12},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":106999,"byte_end":107002,"line_start":103,"line_end":103,"column_start":62,"column_end":65},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":107220,"byte_end":107223,"line_start":111,"line_end":111,"column_start":9,"column_end":12},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":107449,"byte_end":107452,"line_start":120,"line_end":120,"column_start":9,"column_end":12},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":107664,"byte_end":107667,"line_start":128,"line_end":128,"column_start":71,"column_end":74},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":107876,"byte_end":107879,"line_start":135,"line_end":135,"column_start":71,"column_end":74},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":108091,"byte_end":108094,"line_start":142,"line_end":142,"column_start":74,"column_end":77},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":108291,"byte_end":108294,"line_start":149,"line_end":149,"column_start":62,"column_end":65},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":108508,"byte_end":108511,"line_start":157,"line_end":157,"column_start":9,"column_end":12},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":108733,"byte_end":108736,"line_start":166,"line_end":166,"column_start":9,"column_end":12},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":108944,"byte_end":108947,"line_start":174,"line_end":174,"column_start":71,"column_end":74},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":109157,"byte_end":109160,"line_start":181,"line_end":181,"column_start":69,"column_end":72},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":109377,"byte_end":109380,"line_start":189,"line_end":189,"column_start":9,"column_end":12},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":109580,"byte_end":109583,"line_start":197,"line_end":197,"column_start":62,"column_end":65},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":109800,"byte_end":109803,"line_start":205,"line_end":205,"column_start":9,"column_end":12},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":110028,"byte_end":110031,"line_start":214,"line_end":214,"column_start":9,"column_end":12},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":110248,"byte_end":110251,"line_start":223,"line_end":223,"column_start":9,"column_end":12},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":110469,"byte_end":110472,"line_start":232,"line_end":232,"column_start":9,"column_end":12},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":110681,"byte_end":110684,"line_start":240,"line_end":240,"column_start":62,"column_end":65},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":110906,"byte_end":110909,"line_start":248,"line_end":248,"column_start":9,"column_end":12},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":111139,"byte_end":111142,"line_start":257,"line_end":257,"column_start":9,"column_end":12},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":111364,"byte_end":111367,"line_start":266,"line_end":266,"column_start":9,"column_end":12},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":111584,"byte_end":111587,"line_start":275,"line_end":275,"column_start":9,"column_end":12},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":111795,"byte_end":111798,"line_start":283,"line_end":283,"column_start":62,"column_end":65},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":112018,"byte_end":112021,"line_start":291,"line_end":291,"column_start":9,"column_end":12},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":112249,"byte_end":112252,"line_start":300,"line_end":300,"column_start":9,"column_end":12},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":112468,"byte_end":112471,"line_start":308,"line_end":308,"column_start":73,"column_end":76},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":112665,"byte_end":112668,"line_start":315,"line_end":315,"column_start":74,"column_end":77},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":112870,"byte_end":112873,"line_start":322,"line_end":322,"column_start":81,"column_end":84},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":113081,"byte_end":113084,"line_start":330,"line_end":330,"column_start":9,"column_end":12},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":113247,"byte_end":113250,"line_start":338,"line_end":338,"column_start":40,"column_end":43},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":124195,"byte_end":124198,"line_start":651,"line_end":651,"column_start":40,"column_end":43},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":128337,"byte_end":128346,"line_start":775,"line_end":775,"column_start":62,"column_end":71},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":623},"to":{"krate":1,"index":3265}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":128561,"byte_end":128567,"line_start":784,"line_end":784,"column_start":27,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":3322},"to":{"krate":0,"index":635}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":128849,"byte_end":128854,"line_start":796,"line_end":796,"column_start":24,"column_end":29},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":892},"to":{"krate":0,"index":3322}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":128885,"byte_end":128890,"line_start":797,"line_end":797,"column_start":18,"column_end":23},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":892},"to":{"krate":0,"index":635}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":128987,"byte_end":128992,"line_start":802,"line_end":802,"column_start":24,"column_end":29},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":892},"to":{"krate":0,"index":3322}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":129023,"byte_end":129028,"line_start":803,"line_end":803,"column_start":18,"column_end":23},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":892},"to":{"krate":0,"index":635}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":129125,"byte_end":129130,"line_start":808,"line_end":808,"column_start":24,"column_end":29},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":892},"to":{"krate":0,"index":3322}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":129159,"byte_end":129164,"line_start":809,"line_end":809,"column_start":18,"column_end":23},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":892},"to":{"krate":0,"index":635}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":129259,"byte_end":129265,"line_start":814,"line_end":814,"column_start":24,"column_end":30},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":908},"to":{"krate":0,"index":3322}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":129286,"byte_end":129292,"line_start":815,"line_end":815,"column_start":18,"column_end":24},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":908},"to":{"krate":0,"index":635}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":129379,"byte_end":129385,"line_start":820,"line_end":820,"column_start":24,"column_end":30},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":903},"to":{"krate":0,"index":3322}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":129417,"byte_end":129423,"line_start":821,"line_end":821,"column_start":18,"column_end":24},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":903},"to":{"krate":0,"index":635}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":129564,"byte_end":129570,"line_start":827,"line_end":827,"column_start":24,"column_end":30},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":903},"to":{"krate":0,"index":3322}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":129601,"byte_end":129607,"line_start":828,"line_end":828,"column_start":18,"column_end":24},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":903},"to":{"krate":0,"index":635}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":129885,"byte_end":129890,"line_start":840,"line_end":840,"column_start":26,"column_end":31},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":861},"to":{"krate":0,"index":668}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":130044,"byte_end":130047,"line_start":844,"line_end":844,"column_start":82,"column_end":85},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":947},"to":{"krate":0,"index":668}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":130274,"byte_end":130277,"line_start":854,"line_end":854,"column_start":67,"column_end":70},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":947},"to":{"krate":0,"index":668}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":130504,"byte_end":130509,"line_start":863,"line_end":863,"column_start":28,"column_end":33},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":861},"to":{"krate":0,"index":689}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":130665,"byte_end":130668,"line_start":867,"line_end":867,"column_start":84,"column_end":87},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":947},"to":{"krate":0,"index":689}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\convert.rs","byte_start":131041,"byte_end":131044,"line_start":882,"line_end":882,"column_start":69,"column_end":72},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":947},"to":{"krate":0,"index":689}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":131513,"byte_end":131531,"line_start":14,"line_end":14,"column_start":27,"column_end":45},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":131700,"byte_end":131718,"line_start":23,"line_end":23,"column_start":38,"column_end":56},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":726},"to":{"krate":0,"index":866}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":131935,"byte_end":131953,"line_start":36,"line_end":36,"column_start":27,"column_end":45},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":133329,"byte_end":133347,"line_start":91,"line_end":91,"column_start":41,"column_end":59},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":726},"to":{"krate":4,"index":229}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":133695,"byte_end":133713,"line_start":107,"line_end":107,"column_start":49,"column_end":67},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":726},"to":{"krate":4,"index":234}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":134017,"byte_end":134035,"line_start":119,"line_end":119,"column_start":51,"column_end":69},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":726},"to":{"krate":4,"index":237}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":134228,"byte_end":134246,"line_start":129,"line_end":129,"column_start":21,"column_end":39},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":134593,"byte_end":134611,"line_start":142,"line_end":142,"column_start":34,"column_end":52},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":726},"to":{"krate":4,"index":256}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":134910,"byte_end":134928,"line_start":156,"line_end":156,"column_start":27,"column_end":45},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\partially_erased.rs","byte_start":135275,"byte_end":135293,"line_start":169,"line_end":169,"column_start":40,"column_end":58},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":726},"to":{"krate":4,"index":256}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":135856,"byte_end":135865,"line_start":14,"line_end":14,"column_start":23,"column_end":32},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":800},"to":{"krate":0,"index":866}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":136082,"byte_end":136091,"line_start":27,"line_end":27,"column_start":12,"column_end":21},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":800},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":137134,"byte_end":137143,"line_start":56,"line_end":56,"column_start":12,"column_end":21},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":800},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":138435,"byte_end":138444,"line_start":110,"line_end":110,"column_start":26,"column_end":35},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":800},"to":{"krate":4,"index":229}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":138789,"byte_end":138798,"line_start":126,"line_end":126,"column_start":34,"column_end":43},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":800},"to":{"krate":4,"index":234}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":139084,"byte_end":139093,"line_start":138,"line_end":138,"column_start":36,"column_end":45},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":800},"to":{"krate":4,"index":237}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":139268,"byte_end":139277,"line_start":148,"line_end":148,"column_start":6,"column_end":15},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":800},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":139538,"byte_end":139547,"line_start":160,"line_end":160,"column_start":19,"column_end":28},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":800},"to":{"krate":4,"index":256}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":139843,"byte_end":139852,"line_start":174,"line_end":174,"column_start":12,"column_end":21},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":800},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio\\erased.rs","byte_start":140113,"byte_end":140122,"line_start":186,"line_end":186,"column_start":25,"column_end":34},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":800},"to":{"krate":4,"index":256}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":82439,"byte_end":82445,"line_start":159,"line_end":159,"column_start":30,"column_end":36},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":903},"to":{"krate":0,"index":911}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":82484,"byte_end":82489,"line_start":160,"line_end":160,"column_start":30,"column_end":35},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":892},"to":{"krate":0,"index":911}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":82892,"byte_end":82895,"line_start":172,"line_end":172,"column_start":23,"column_end":26},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":927},"to":{"krate":0,"index":919}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":86200,"byte_end":86203,"line_start":269,"line_end":269,"column_start":40,"column_end":43},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":86342,"byte_end":86345,"line_start":275,"line_end":275,"column_start":51,"column_end":54},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":947},"to":{"krate":0,"index":866}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":86573,"byte_end":86576,"line_start":288,"line_end":288,"column_start":40,"column_end":43},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":86946,"byte_end":86949,"line_start":303,"line_end":303,"column_start":34,"column_end":37},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":87387,"byte_end":87390,"line_start":316,"line_end":316,"column_start":47,"column_end":50},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":88152,"byte_end":88155,"line_start":344,"line_end":344,"column_start":47,"column_end":50},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":88548,"byte_end":88551,"line_start":358,"line_end":358,"column_start":40,"column_end":43},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":89453,"byte_end":89456,"line_start":384,"line_end":384,"column_start":40,"column_end":43},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":90698,"byte_end":90701,"line_start":418,"line_end":418,"column_start":40,"column_end":43},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":91701,"byte_end":91704,"line_start":466,"line_end":466,"column_start":54,"column_end":57},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":947},"to":{"krate":4,"index":229}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":92068,"byte_end":92071,"line_start":482,"line_end":482,"column_start":62,"column_end":65},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":947},"to":{"krate":4,"index":234}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":92391,"byte_end":92394,"line_start":494,"line_end":494,"column_start":64,"column_end":67},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":947},"to":{"krate":4,"index":237}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":92603,"byte_end":92606,"line_start":504,"line_end":504,"column_start":34,"column_end":37},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":92857,"byte_end":92860,"line_start":516,"line_end":516,"column_start":47,"column_end":50},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":947},"to":{"krate":4,"index":256}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":93175,"byte_end":93178,"line_start":530,"line_end":530,"column_start":40,"column_end":43},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":93429,"byte_end":93432,"line_start":542,"line_end":542,"column_start":53,"column_end":56},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":947},"to":{"krate":4,"index":256}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":93757,"byte_end":93760,"line_start":556,"line_end":556,"column_start":56,"column_end":59},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":947},"to":{"krate":4,"index":260}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":94118,"byte_end":94121,"line_start":568,"line_end":568,"column_start":9,"column_end":12},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":947},"to":{"krate":4,"index":260}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":94523,"byte_end":94526,"line_start":581,"line_end":581,"column_start":9,"column_end":12},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":947},"to":{"krate":4,"index":260}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\gpio.rs","byte_start":103303,"byte_end":103307,"line_start":858,"line_end":858,"column_start":21,"column_end":25},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1081},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":141117,"byte_end":141121,"line_start":38,"line_end":38,"column_start":6,"column_end":10},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":4438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":141663,"byte_end":141667,"line_start":60,"line_end":60,"column_start":21,"column_end":25},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":4438},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":146703,"byte_end":146709,"line_start":274,"line_end":274,"column_start":28,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":3322},"to":{"krate":0,"index":1181}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":146712,"byte_end":146717,"line_start":274,"line_end":274,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":1,"index":3241},"to":{"krate":0,"index":1181}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":146750,"byte_end":146756,"line_start":274,"line_end":274,"column_start":75,"column_end":81},"kind":"SuperTrait","from":{"krate":0,"index":2210},"to":{"krate":0,"index":1181}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":146759,"byte_end":146764,"line_start":274,"line_end":274,"column_start":84,"column_end":89},"kind":"SuperTrait","from":{"krate":0,"index":2216},"to":{"krate":0,"index":1181}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":146787,"byte_end":146791,"line_start":276,"line_end":276,"column_start":19,"column_end":23},"kind":{"Impl":{"id":149}},"from":{"krate":8,"index":37400},"to":{"krate":0,"index":1181}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":146813,"byte_end":146817,"line_start":277,"line_end":277,"column_start":19,"column_end":23},"kind":{"Impl":{"id":150}},"from":{"krate":8,"index":37392},"to":{"krate":0,"index":1181}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":146865,"byte_end":146869,"line_start":280,"line_end":280,"column_start":19,"column_end":23},"kind":{"Impl":{"id":151}},"from":{"krate":8,"index":37384},"to":{"krate":0,"index":1181}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":146926,"byte_end":146929,"line_start":282,"line_end":282,"column_start":53,"column_end":56},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":147804,"byte_end":147807,"line_start":314,"line_end":314,"column_start":17,"column_end":20},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":151799,"byte_end":151802,"line_start":431,"line_end":431,"column_start":31,"column_end":34},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1163},"to":{"krate":0,"index":1213}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":154064,"byte_end":154067,"line_start":508,"line_end":508,"column_start":31,"column_end":34},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1163},"to":{"krate":4,"index":58}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":154357,"byte_end":154360,"line_start":522,"line_end":522,"column_start":27,"column_end":30},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1163},"to":{"krate":4,"index":49}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\i2c.rs","byte_start":154821,"byte_end":154824,"line_start":542,"line_end":542,"column_start":26,"column_end":29},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1163},"to":{"krate":4,"index":45}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":213408,"byte_end":213414,"line_start":20,"line_end":20,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":1326},"to":{"krate":0,"index":1334}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":214523,"byte_end":214532,"line_start":56,"line_end":56,"column_start":19,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":1334},"to":{"krate":0,"index":1346}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":214535,"byte_end":214541,"line_start":56,"line_end":56,"column_start":31,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":1326},"to":{"krate":0,"index":1346}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":219527,"byte_end":219531,"line_start":186,"line_end":186,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":0,"index":1323},"to":{"krate":0,"index":1381}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":220509,"byte_end":220513,"line_start":224,"line_end":224,"column_start":17,"column_end":21},"kind":{"Impl":{"id":158}},"from":{"krate":8,"index":28489},"to":{"krate":0,"index":1326}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":220533,"byte_end":220537,"line_start":225,"line_end":225,"column_start":17,"column_end":21},"kind":{"Impl":{"id":159}},"from":{"krate":8,"index":28481},"to":{"krate":0,"index":1326}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":221058,"byte_end":221063,"line_start":246,"line_end":246,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":1,"index":3241},"to":{"krate":0,"index":1391}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":221093,"byte_end":221099,"line_start":246,"line_end":246,"column_start":56,"column_end":62},"kind":"SuperTrait","from":{"krate":0,"index":1326},"to":{"krate":0,"index":1391}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":221210,"byte_end":221214,"line_start":251,"line_end":251,"column_start":19,"column_end":23},"kind":{"Impl":{"id":160}},"from":{"krate":8,"index":28489},"to":{"krate":0,"index":1391}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\traits.rs","byte_start":221328,"byte_end":221332,"line_start":258,"line_end":258,"column_start":19,"column_end":23},"kind":{"Impl":{"id":161}},"from":{"krate":8,"index":28481},"to":{"krate":0,"index":1391}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":158004,"byte_end":158012,"line_start":43,"line_end":43,"column_start":19,"column_end":27},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":4995},"to":{"krate":1,"index":9578}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":158743,"byte_end":158761,"line_start":68,"line_end":68,"column_start":19,"column_end":37},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":5027},"to":{"krate":0,"index":1323}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":158850,"byte_end":158868,"line_start":75,"line_end":75,"column_start":20,"column_end":38},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":5027},"to":{"krate":0,"index":1381}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":159209,"byte_end":159223,"line_start":91,"line_end":91,"column_start":22,"column_end":36},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":5034},"to":{"krate":0,"index":1323}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":159318,"byte_end":159332,"line_start":98,"line_end":98,"column_start":23,"column_end":37},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":5034},"to":{"krate":0,"index":1381}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":159636,"byte_end":159654,"line_start":112,"line_end":112,"column_start":19,"column_end":37},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":5045},"to":{"krate":0,"index":1323}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":159743,"byte_end":159761,"line_start":119,"line_end":119,"column_start":20,"column_end":38},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":5045},"to":{"krate":0,"index":1381}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":159935,"byte_end":159949,"line_start":128,"line_end":128,"column_start":29,"column_end":43},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":5034},"to":{"krate":0,"index":1384}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":160072,"byte_end":160086,"line_start":135,"line_end":135,"column_start":29,"column_end":43},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":5034},"to":{"krate":0,"index":1384}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":160211,"byte_end":160225,"line_start":142,"line_end":142,"column_start":29,"column_end":43},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":5034},"to":{"krate":0,"index":1384}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":160762,"byte_end":160771,"line_start":168,"line_end":168,"column_start":19,"column_end":28},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":5052},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":161383,"byte_end":161396,"line_start":191,"line_end":191,"column_start":14,"column_end":27},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":5072},"to":{"krate":1,"index":3142}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":161758,"byte_end":161765,"line_start":208,"line_end":208,"column_start":24,"column_end":31},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":1467},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":161876,"byte_end":161883,"line_start":214,"line_end":214,"column_start":34,"column_end":41},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":1467},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":163058,"byte_end":163065,"line_start":254,"line_end":254,"column_start":22,"column_end":29},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":1467},"to":{"krate":0,"index":1326}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":163098,"byte_end":163105,"line_start":255,"line_end":255,"column_start":22,"column_end":29},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":1467},"to":{"krate":0,"index":1326}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":163138,"byte_end":163145,"line_start":256,"line_end":256,"column_start":22,"column_end":29},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":1467},"to":{"krate":0,"index":1326}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":163178,"byte_end":163185,"line_start":257,"line_end":257,"column_start":22,"column_end":29},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":1467},"to":{"krate":0,"index":1326}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":163218,"byte_end":163225,"line_start":258,"line_end":258,"column_start":22,"column_end":29},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":1467},"to":{"krate":0,"index":1326}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":163258,"byte_end":163265,"line_start":259,"line_end":259,"column_start":22,"column_end":29},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":1467},"to":{"krate":0,"index":1326}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":163298,"byte_end":163305,"line_start":260,"line_end":260,"column_start":22,"column_end":29},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":1467},"to":{"krate":0,"index":1326}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":163338,"byte_end":163345,"line_start":261,"line_end":261,"column_start":22,"column_end":29},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":1467},"to":{"krate":0,"index":1326}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":163672,"byte_end":163684,"line_start":275,"line_end":275,"column_start":37,"column_end":49},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":1527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":164299,"byte_end":164306,"line_start":297,"line_end":297,"column_start":43,"column_end":50},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":1467},"to":{"krate":0,"index":1346}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":177621,"byte_end":177629,"line_start":691,"line_end":691,"column_start":23,"column_end":31},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":5292},"to":{"krate":0,"index":1323}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":178199,"byte_end":178212,"line_start":715,"line_end":715,"column_start":23,"column_end":36},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":5306},"to":{"krate":0,"index":1323}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":178904,"byte_end":178913,"line_start":739,"line_end":739,"column_start":23,"column_end":32},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":5320},"to":{"krate":0,"index":1323}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":179927,"byte_end":179936,"line_start":768,"line_end":768,"column_start":22,"column_end":31},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":5334},"to":{"krate":1,"index":3001}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":180643,"byte_end":180652,"line_start":788,"line_end":788,"column_start":10,"column_end":19},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":5334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":184081,"byte_end":184089,"line_start":887,"line_end":887,"column_start":5,"column_end":13},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":1638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":190090,"byte_end":190098,"line_start":1018,"line_end":1018,"column_start":5,"column_end":13},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":1638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":196151,"byte_end":196159,"line_start":1152,"line_end":1152,"column_start":5,"column_end":13},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":1638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":200186,"byte_end":200194,"line_start":1251,"line_end":1251,"column_start":5,"column_end":13},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":1638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dma\\mod.rs","byte_start":212779,"byte_end":212787,"line_start":1583,"line_end":1583,"column_start":9,"column_end":17},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":1638},"to":{"krate":1,"index":3265}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":255904,"byte_end":255907,"line_start":11,"line_end":11,"column_start":17,"column_end":20},"kind":{"Impl":{"id":390}},"from":{"krate":9,"index":722},"to":{"krate":0,"index":1734}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":256291,"byte_end":256294,"line_start":30,"line_end":30,"column_start":6,"column_end":9},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":1738},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":257511,"byte_end":257516,"line_start":66,"line_end":66,"column_start":6,"column_end":11},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":5353},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":259055,"byte_end":259060,"line_start":103,"line_end":103,"column_start":35,"column_end":40},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":5353},"to":{"krate":4,"index":31}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":259325,"byte_end":259330,"line_start":111,"line_end":111,"column_start":35,"column_end":40},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":5353},"to":{"krate":4,"index":28}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":259943,"byte_end":259952,"line_start":130,"line_end":130,"column_start":10,"column_end":19},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":1760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\dwt.rs","byte_start":261579,"byte_end":261592,"line_start":186,"line_end":186,"column_start":6,"column_end":19},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":5358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":262702,"byte_end":262707,"line_start":15,"line_end":15,"column_start":6,"column_end":11},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":5364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":263804,"byte_end":263809,"line_start":51,"line_end":51,"column_start":19,"column_end":24},"kind":{"Impl":{"id":398}},"from":{"krate":8,"index":4098},"to":{"krate":0,"index":1795}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":264257,"byte_end":264270,"line_start":74,"line_end":74,"column_start":15,"column_end":28},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":1805},"to":{"krate":1,"index":3265}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\flash.rs","byte_start":264342,"byte_end":264355,"line_start":80,"line_end":80,"column_start":6,"column_end":19},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":1805},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\pwm_input.rs","byte_start":290261,"byte_end":290264,"line_start":10,"line_end":10,"column_start":30,"column_end":33},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":2075},"to":{"krate":0,"index":2071}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\qei.rs","byte_start":299528,"byte_end":299531,"line_start":25,"line_end":25,"column_start":31,"column_end":34},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":2110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\qei.rs","byte_start":300048,"byte_end":300051,"line_start":44,"line_end":44,"column_start":27,"column_end":30},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":2110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\qei.rs","byte_start":300234,"byte_end":300237,"line_start":51,"line_end":51,"column_start":40,"column_end":43},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":2110},"to":{"krate":4,"index":503}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\qei.rs","byte_start":300591,"byte_end":300597,"line_start":67,"line_end":67,"column_start":28,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":3322},"to":{"krate":0,"index":2130}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\qei.rs","byte_start":300605,"byte_end":300611,"line_start":67,"line_end":67,"column_start":42,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":2210},"to":{"krate":0,"index":2130}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\qei.rs","byte_start":300619,"byte_end":300624,"line_start":67,"line_end":67,"column_start":56,"column_end":61},"kind":"SuperTrait","from":{"krate":0,"index":2216},"to":{"krate":0,"index":2130}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\pll.rs","byte_start":351935,"byte_end":351942,"line_start":13,"line_end":13,"column_start":6,"column_end":13},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":2164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\pll.rs","byte_start":359813,"byte_end":359819,"line_start":235,"line_end":235,"column_start":6,"column_end":12},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":2176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\pll.rs","byte_start":367409,"byte_end":367424,"line_start":479,"line_end":479,"column_start":6,"column_end":21},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":2188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":305108,"byte_end":305114,"line_start":67,"line_end":67,"column_start":26,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":3322},"to":{"krate":0,"index":2208}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":305200,"byte_end":305206,"line_start":73,"line_end":73,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":2208},"to":{"krate":0,"index":2210}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":305329,"byte_end":305335,"line_start":79,"line_end":79,"column_start":21,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":2208},"to":{"krate":0,"index":2213}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":305456,"byte_end":305462,"line_start":85,"line_end":85,"column_start":18,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":2208},"to":{"krate":0,"index":2216}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":305886,"byte_end":305887,"line_start":102,"line_end":102,"column_start":24,"column_end":25},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":2224},"to":{"krate":0,"index":2220}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":306223,"byte_end":306227,"line_start":120,"line_end":120,"column_start":6,"column_end":10},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":2227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":306675,"byte_end":306679,"line_start":142,"line_end":142,"column_start":6,"column_end":10},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":2233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":307559,"byte_end":307563,"line_start":185,"line_end":185,"column_start":6,"column_end":10},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":2239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":307939,"byte_end":307943,"line_start":205,"line_end":205,"column_start":6,"column_end":10},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":2245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":308254,"byte_end":308258,"line_start":220,"line_end":220,"column_start":21,"column_end":25},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":2227},"to":{"krate":0,"index":2220}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":308394,"byte_end":308398,"line_start":227,"line_end":227,"column_start":21,"column_end":25},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":2233},"to":{"krate":0,"index":2220}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":308651,"byte_end":308655,"line_start":240,"line_end":240,"column_start":21,"column_end":25},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":2239},"to":{"krate":0,"index":2220}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":308921,"byte_end":308925,"line_start":250,"line_end":250,"column_start":21,"column_end":25},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":2245},"to":{"krate":0,"index":2220}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":309187,"byte_end":309190,"line_start":260,"line_end":260,"column_start":17,"column_end":20},"kind":{"Impl":{"id":422}},"from":{"krate":8,"index":11298},"to":{"krate":0,"index":2218}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":315509,"byte_end":315513,"line_start":490,"line_end":490,"column_start":6,"column_end":10},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":2270},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":341133,"byte_end":341142,"line_start":1289,"line_end":1289,"column_start":6,"column_end":15},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":2320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":342638,"byte_end":342651,"line_start":1351,"line_end":1351,"column_start":6,"column_end":19},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":2325},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rcc\\mod.rs","byte_start":348518,"byte_end":348524,"line_start":1564,"line_end":1564,"column_start":6,"column_end":12},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":6517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rtc.rs","byte_start":376485,"byte_end":376488,"line_start":23,"line_end":23,"column_start":6,"column_end":9},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":2389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\rtc.rs","byte_start":379428,"byte_end":379431,"line_start":110,"line_end":110,"column_start":15,"column_end":18},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":2389},"to":{"krate":19,"index":21}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":393174,"byte_end":393180,"line_start":131,"line_end":131,"column_start":10,"column_end":16},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":2568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":394136,"byte_end":394142,"line_start":171,"line_end":171,"column_start":22,"column_end":28},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":2568},"to":{"krate":1,"index":3001}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":394866,"byte_end":394871,"line_start":205,"line_end":205,"column_start":30,"column_end":35},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":861},"to":{"krate":0,"index":2586}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":394956,"byte_end":394961,"line_start":212,"line_end":212,"column_start":30,"column_end":35},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":861},"to":{"krate":0,"index":2589}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":404787,"byte_end":404789,"line_start":560,"line_end":560,"column_start":19,"column_end":21},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":2615},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":406480,"byte_end":406482,"line_start":616,"line_end":616,"column_start":19,"column_end":21},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":2620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":407344,"byte_end":407350,"line_start":646,"line_end":646,"column_start":52,"column_end":58},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":2607},"to":{"krate":1,"index":2920}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":407492,"byte_end":407498,"line_start":652,"line_end":652,"column_start":52,"column_end":58},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":2607},"to":{"krate":1,"index":2920}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":407640,"byte_end":407646,"line_start":658,"line_end":658,"column_start":52,"column_end":58},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":2607},"to":{"krate":1,"index":2923}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":407800,"byte_end":407806,"line_start":664,"line_end":664,"column_start":52,"column_end":58},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":2607},"to":{"krate":1,"index":2923}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":407965,"byte_end":407971,"line_start":670,"line_end":670,"column_start":57,"column_end":63},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":2607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":412657,"byte_end":412663,"line_start":810,"line_end":810,"column_start":38,"column_end":44},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":2607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":413073,"byte_end":413079,"line_start":825,"line_end":825,"column_start":38,"column_end":44},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":2607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":413476,"byte_end":413482,"line_start":840,"line_end":840,"column_start":25,"column_end":31},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":2607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":415770,"byte_end":415776,"line_start":905,"line_end":905,"column_start":19,"column_end":25},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":2607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":416213,"byte_end":416219,"line_start":922,"line_end":922,"column_start":19,"column_end":25},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":2607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":416684,"byte_end":416690,"line_start":939,"line_end":939,"column_start":48,"column_end":54},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":2607},"to":{"krate":4,"index":426}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":416937,"byte_end":416939,"line_start":951,"line_end":951,"column_start":34,"column_end":36},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":2615},"to":{"krate":4,"index":426}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":417549,"byte_end":417551,"line_start":968,"line_end":968,"column_start":35,"column_end":37},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":2615},"to":{"krate":4,"index":426}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":418631,"byte_end":418633,"line_start":1004,"line_end":1004,"column_start":36,"column_end":38},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":2615},"to":{"krate":0,"index":1384}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":418869,"byte_end":418875,"line_start":1016,"line_end":1016,"column_start":49,"column_end":55},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":2607},"to":{"krate":4,"index":430}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":419235,"byte_end":419237,"line_start":1032,"line_end":1032,"column_start":36,"column_end":38},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":2620},"to":{"krate":0,"index":1384}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":419459,"byte_end":419461,"line_start":1044,"line_end":1044,"column_start":35,"column_end":37},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":2620},"to":{"krate":4,"index":430}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":420172,"byte_end":420174,"line_start":1066,"line_end":1066,"column_start":36,"column_end":38},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":2620},"to":{"krate":4,"index":430}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":421026,"byte_end":421028,"line_start":1097,"line_end":1097,"column_start":46,"column_end":48},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":2620},"to":{"krate":4,"index":83}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":421849,"byte_end":421851,"line_start":1127,"line_end":1127,"column_start":45,"column_end":47},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":2620},"to":{"krate":4,"index":83}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":422674,"byte_end":422680,"line_start":1157,"line_end":1157,"column_start":52,"column_end":58},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":2607},"to":{"krate":4,"index":83}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":423005,"byte_end":423011,"line_start":1172,"line_end":1172,"column_start":51,"column_end":57},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":2607},"to":{"krate":4,"index":83}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":423308,"byte_end":423314,"line_start":1187,"line_end":1187,"column_start":25,"column_end":31},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":2607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":424261,"byte_end":424267,"line_start":1228,"line_end":1228,"column_start":28,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":3322},"to":{"krate":0,"index":2796}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":424275,"byte_end":424281,"line_start":1228,"line_end":1228,"column_start":42,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":2210},"to":{"krate":0,"index":2796}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":424289,"byte_end":424294,"line_start":1228,"line_end":1228,"column_start":56,"column_end":61},"kind":"SuperTrait","from":{"krate":0,"index":2216},"to":{"krate":0,"index":2796}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":424302,"byte_end":424312,"line_start":1228,"line_end":1228,"column_start":69,"column_end":79},"kind":"SuperTrait","from":{"krate":0,"index":2220},"to":{"krate":0,"index":2796}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":428333,"byte_end":428339,"line_start":1357,"line_end":1357,"column_start":34,"column_end":40},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":2607},"to":{"krate":1,"index":9528}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\serial.rs","byte_start":428514,"byte_end":428516,"line_start":1366,"line_end":1366,"column_start":28,"column_end":30},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":2620},"to":{"krate":1,"index":9528}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":429496,"byte_end":429499,"line_start":35,"line_end":35,"column_start":6,"column_end":9},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":6674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":430005,"byte_end":430014,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":6687},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":430395,"byte_end":430402,"line_start":81,"line_end":81,"column_start":6,"column_end":13},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":6695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":430660,"byte_end":430670,"line_start":94,"line_end":94,"column_start":6,"column_end":16},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":6703},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\signature.rs","byte_start":430931,"byte_end":430942,"line_start":107,"line_end":107,"column_start":6,"column_end":17},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":6711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":432659,"byte_end":432664,"line_start":83,"line_end":83,"column_start":27,"column_end":32},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":861},"to":{"krate":0,"index":2911}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":432744,"byte_end":432749,"line_start":89,"line_end":89,"column_start":28,"column_end":33},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":861},"to":{"krate":0,"index":2914}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":432829,"byte_end":432834,"line_start":95,"line_end":95,"column_start":28,"column_end":33},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":861},"to":{"krate":0,"index":2917}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":438595,"byte_end":438601,"line_start":396,"line_end":396,"column_start":12,"column_end":18},"kind":"SuperTrait","from":{"krate":0,"index":3322},"to":{"krate":0,"index":2952}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":438604,"byte_end":438609,"line_start":396,"line_end":396,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":1,"index":3241},"to":{"krate":0,"index":2952}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":438647,"byte_end":438653,"line_start":396,"line_end":396,"column_start":64,"column_end":70},"kind":"SuperTrait","from":{"krate":0,"index":2210},"to":{"krate":0,"index":2952}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":438661,"byte_end":438666,"line_start":396,"line_end":396,"column_start":78,"column_end":83},"kind":"SuperTrait","from":{"krate":0,"index":2216},"to":{"krate":0,"index":2952}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":438674,"byte_end":438684,"line_start":396,"line_end":396,"column_start":91,"column_end":101},"kind":"SuperTrait","from":{"krate":0,"index":2220},"to":{"krate":0,"index":2952}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":439943,"byte_end":439946,"line_start":442,"line_end":442,"column_start":5,"column_end":8},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":6901},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":441208,"byte_end":441211,"line_start":484,"line_end":484,"column_start":5,"column_end":8},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":6901},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":442495,"byte_end":442498,"line_start":526,"line_end":526,"column_start":5,"column_end":8},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":6901},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":443131,"byte_end":443134,"line_start":547,"line_end":547,"column_start":17,"column_end":20},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":6901},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":443562,"byte_end":443565,"line_start":567,"line_end":567,"column_start":17,"column_end":20},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":6901},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":444002,"byte_end":444005,"line_start":587,"line_end":587,"column_start":32,"column_end":35},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":6901},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":449602,"byte_end":449605,"line_start":762,"line_end":762,"column_start":41,"column_end":44},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":6901},"to":{"krate":4,"index":439}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":449911,"byte_end":449914,"line_start":777,"line_end":777,"column_start":41,"column_end":44},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":6901},"to":{"krate":4,"index":439}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":450573,"byte_end":450576,"line_start":799,"line_end":799,"column_start":53,"column_end":56},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":6901},"to":{"krate":4,"index":98}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":451035,"byte_end":451038,"line_start":816,"line_end":816,"column_start":35,"column_end":38},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":6901},"to":{"krate":4,"index":103}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":451460,"byte_end":451463,"line_start":833,"line_end":833,"column_start":35,"column_end":38},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":6901},"to":{"krate":4,"index":103}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":451845,"byte_end":451848,"line_start":849,"line_end":849,"column_start":39,"column_end":42},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":6901},"to":{"krate":4,"index":107}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":452354,"byte_end":452357,"line_start":869,"line_end":869,"column_start":39,"column_end":42},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":6901},"to":{"krate":4,"index":107}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\spi.rs","byte_start":452849,"byte_end":452852,"line_start":888,"line_end":888,"column_start":69,"column_end":72},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":6901},"to":{"krate":4,"index":138}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\syscfg.rs","byte_start":453658,"byte_end":453664,"line_start":11,"line_end":11,"column_start":20,"column_end":26},"kind":{"Impl":{"id":485}},"from":{"krate":8,"index":17491},"to":{"krate":0,"index":3128}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\syscfg.rs","byte_start":454005,"byte_end":454011,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":3132},"to":{"krate":1,"index":3241}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","byte_start":455192,"byte_end":455197,"line_start":54,"line_end":54,"column_start":20,"column_end":25},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":6977},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","byte_start":455279,"byte_end":455284,"line_start":60,"line_end":60,"column_start":26,"column_end":31},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":6977},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","byte_start":455387,"byte_end":455392,"line_start":66,"line_end":66,"column_start":26,"column_end":31},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":6977},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\time.rs","byte_start":455499,"byte_end":455508,"line_start":72,"line_end":72,"column_start":26,"column_end":35},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":6991},"to":{"krate":1,"index":2929}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":456276,"byte_end":456281,"line_start":29,"line_end":29,"column_start":11,"column_end":16},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":3206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":456685,"byte_end":456699,"line_start":45,"line_end":45,"column_start":24,"column_end":38},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":3210},"to":{"krate":4,"index":460}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":456934,"byte_end":456939,"line_start":59,"line_end":59,"column_start":6,"column_end":11},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":3206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":457239,"byte_end":457253,"line_start":74,"line_end":74,"column_start":6,"column_end":20},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":3210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":457651,"byte_end":457665,"line_start":90,"line_end":90,"column_start":20,"column_end":34},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":3210},"to":{"krate":4,"index":455}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":458171,"byte_end":458185,"line_start":115,"line_end":115,"column_start":17,"column_end":31},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":3210},"to":{"krate":4,"index":461}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":458833,"byte_end":458842,"line_start":139,"line_end":139,"column_start":6,"column_end":15},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":7047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":459606,"byte_end":459613,"line_start":172,"line_end":172,"column_start":6,"column_end":13},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":7052},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":459794,"byte_end":459800,"line_start":179,"line_end":179,"column_start":28,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":3322},"to":{"krate":0,"index":3243}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":459808,"byte_end":459814,"line_start":179,"line_end":179,"column_start":42,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":2210},"to":{"krate":0,"index":3243}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":459822,"byte_end":459827,"line_start":179,"line_end":179,"column_start":56,"column_end":61},"kind":"SuperTrait","from":{"krate":0,"index":2216},"to":{"krate":0,"index":3243}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":459835,"byte_end":459845,"line_start":179,"line_end":179,"column_start":69,"column_end":79},"kind":"SuperTrait","from":{"krate":0,"index":2220},"to":{"krate":0,"index":3243}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\timer.rs","byte_start":459860,"byte_end":459865,"line_start":181,"line_end":181,"column_start":11,"column_end":16},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":3206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\watchdog.rs","byte_start":471868,"byte_end":471887,"line_start":20,"line_end":20,"column_start":6,"column_end":25},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":3290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\watchdog.rs","byte_start":473917,"byte_end":473936,"line_start":90,"line_end":90,"column_start":25,"column_end":44},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":3290},"to":{"krate":4,"index":467}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\stm32f4xx-hal-0.10.1\\src\\watchdog.rs","byte_start":474160,"byte_end":474179,"line_start":100,"line_end":100,"column_start":19,"column_end":38},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":3290},"to":{"krate":4,"index":465}}]}