{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4","program":"C:\\Users\\HP\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","cortex_m","--edition=2018","C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","codegen-units=1","-C","debuginfo=2","-C","metadata=5335c60f58f90e35","-C","extra-filename=-5335c60f58f90e35","--out-dir","c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\boot_fw_blinky_green\\target\\rls\\thumbv7em-none-eabihf\\debug\\deps","--target","thumbv7em-none-eabihf","-L","dependency=c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\boot_fw_blinky_green\\target\\rls\\thumbv7em-none-eabihf\\debug\\deps","-L","dependency=c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\boot_fw_blinky_green\\target\\rls\\debug\\deps","--extern","bare_metal=c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\boot_fw_blinky_green\\target\\rls\\thumbv7em-none-eabihf\\debug\\deps\\libbare_metal-6cc701060c4cc8ff.rmeta","--extern","bitfield=c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\boot_fw_blinky_green\\target\\rls\\thumbv7em-none-eabihf\\debug\\deps\\libbitfield-38f88573df71b8ab.rmeta","--extern","embedded_hal=c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\boot_fw_blinky_green\\target\\rls\\thumbv7em-none-eabihf\\debug\\deps\\libembedded_hal-335a2b11659737e8.rmeta","--extern","volatile_register=c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\boot_fw_blinky_green\\target\\rls\\thumbv7em-none-eabihf\\debug\\deps\\libvolatile_register-edfcccdb7e077b35.rmeta","--cap-lints","allow","-L","c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\boot_fw_blinky_green\\target\\rls\\thumbv7em-none-eabihf\\debug\\build\\cortex-m-468d2fa0436c98ed\\out","--cfg","cortex_m","--cfg","armv7m","--cfg","armv7em","--cfg","has_fpu","-l","static=cortex-m","--error-format=json","--sysroot","C:\\Users\\HP\\.rustup/toolchains/nightly-x86_64-pc-windows-msvc"],"output":"c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\boot_fw_blinky_green\\target\\rls\\thumbv7em-none-eabihf\\debug\\deps\\libcortex_m-5335c60f58f90e35.rmeta"},"prelude":{"crate_id":{"name":"cortex_m","disambiguator":[8433155213977546304,0]},"crate_root":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src","external_crates":[{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[17152468072794654791,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[17051862311917027046,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7467457181772381774,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","num":4,"id":{"name":"bare_metal","disambiguator":[14014839698375259467,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","num":5,"id":{"name":"volatile_register","disambiguator":[2558430349867861149,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","num":6,"id":{"name":"vcell","disambiguator":[8820141899544498945,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","num":7,"id":{"name":"embedded_hal","disambiguator":[14414825259313991299,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","num":8,"id":{"name":"nb","disambiguator":[9984866355904341263,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","num":9,"id":{"name":"nb","disambiguator":[49378123468056211,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","num":10,"id":{"name":"void","disambiguator":[3684023994566067021,0]}}],"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":0,"byte_end":3861,"line_start":1,"line_end":101,"column_start":1,"column_end":40}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":13},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":17761,"byte_end":17776,"line_start":3,"line_end":3,"column_start":22,"column_end":37},"alias_span":null,"name":"CriticalSection","value":"","parent":{"krate":0,"index":68}},{"kind":"Use","ref_id":{"krate":4,"index":17},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":17778,"byte_end":17783,"line_start":3,"line_end":3,"column_start":39,"column_end":44},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":68}},{"kind":"Use","ref_id":{"krate":4,"index":28},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":17785,"byte_end":17787,"line_start":3,"line_end":3,"column_start":46,"column_end":48},"alias_span":null,"name":"Nr","value":"","parent":{"krate":0,"index":68}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\prelude.rs","byte_start":115898,"byte_end":115899,"line_start":3,"line_end":3,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":819}},{"kind":"Use","ref_id":{"krate":0,"index":672},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":3849,"byte_end":3860,"line_start":101,"line_end":101,"column_start":28,"column_end":39},"alias_span":null,"name":"Peripherals","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":0,"byte_end":3861,"line_start":1,"line_end":101,"column_start":1,"column_end":40},"name":"","qualname":"::","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":14},{"krate":0,"index":28},{"krate":0,"index":68},{"krate":0,"index":89},{"krate":0,"index":123},{"krate":0,"index":819},{"krate":0,"index":821},{"krate":0,"index":903}],"decl_id":null,"docs":" Low level access to Cortex-M processors","sig":null,"attributes":[{"value":"/ Low level access to Cortex-M processors","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":0,"byte_end":43,"line_start":1,"line_end":1,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":44,"byte_end":47,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate provides:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":48,"byte_end":72,"line_start":3,"line_end":3,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":73,"byte_end":76,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - Access to core peripherals like NVIC, SCB and SysTick.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":77,"byte_end":137,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"/ - Access to core registers like CONTROL, MSP and PSR.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":138,"byte_end":195,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"/ - Interrupt manipulation mechanisms","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":196,"byte_end":235,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"/ - Safe wrappers around Cortex-M specific instructions like `bkpt`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":236,"byte_end":305,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":306,"byte_end":309,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Optional features","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":310,"byte_end":333,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":334,"byte_end":337,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ## `inline-asm`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":338,"byte_end":357,"line_start":12,"line_end":12,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":358,"byte_end":361,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ When this feature is enabled the implementation of all the functions inside the `asm` and","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":362,"byte_end":455,"line_start":14,"line_end":14,"column_start":1,"column_end":94}},{"value":"/ `register` modules use inline assembly (`asm!`) instead of external assembly (FFI into separate","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":456,"byte_end":555,"line_start":15,"line_end":15,"column_start":1,"column_end":100}},{"value":"/ assembly files pre-compiled using `arm-none-eabi-gcc`). The advantages of enabling `inline-asm`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":556,"byte_end":655,"line_start":16,"line_end":16,"column_start":1,"column_end":100}},{"value":"/ are:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":656,"byte_end":664,"line_start":17,"line_end":17,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":665,"byte_end":668,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ - Reduced overhead. FFI eliminates the possibility of inlining so all operations include a","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":669,"byte_end":763,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/ function call overhead when `inline-asm` is not enabled.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":764,"byte_end":824,"line_start":20,"line_end":20,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":825,"byte_end":828,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ - Some of the `register` API only becomes available only when `inline-asm` is enabled. Check the","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":829,"byte_end":929,"line_start":22,"line_end":22,"column_start":1,"column_end":101}},{"value":"/ API docs for details.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":930,"byte_end":955,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":956,"byte_end":959,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The disadvantage is that `inline-asm` requires a nightly toolchain.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":960,"byte_end":1031,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":1032,"byte_end":1035,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ## `cm7-r0p1`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":1036,"byte_end":1053,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":1054,"byte_end":1057,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This feature enables workarounds for errata found on Cortex-M7 chips with revision r0p1. Some","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":1058,"byte_end":1155,"line_start":29,"line_end":29,"column_start":1,"column_end":98}},{"value":"/ functions in this crate only work correctly on those chips if this Cargo feature is enabled","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":1156,"byte_end":1251,"line_start":30,"line_end":30,"column_start":1,"column_end":96}},{"value":"/ (the functions are documented accordingly).","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":1252,"byte_end":1299,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":1300,"byte_end":1303,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ## `linker-plugin-lto`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":1304,"byte_end":1330,"line_start":33,"line_end":33,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":1331,"byte_end":1334,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This feature links against prebuilt assembly blobs that are compatible with [Linker-Plugin LTO].","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":1335,"byte_end":1435,"line_start":35,"line_end":35,"column_start":1,"column_end":101}},{"value":"/ This allows inlining assembly routines into the caller, even without the `inline-asm` feature,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":1436,"byte_end":1534,"line_start":36,"line_end":36,"column_start":1,"column_end":99}},{"value":"/ and works on stable Rust (but note the drawbacks below!).","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":1535,"byte_end":1596,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":1597,"byte_end":1600,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ If you want to use this feature, you need to be aware of a few things:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":1601,"byte_end":1675,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":1676,"byte_end":1679,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ - You need to make sure that `-Clinker-plugin-lto` is passed to rustc. Please refer to the","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":1680,"byte_end":1774,"line_start":41,"line_end":41,"column_start":1,"column_end":95}},{"value":"/   [Linker-Plugin LTO] documentation for details.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":1775,"byte_end":1827,"line_start":42,"line_end":42,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":1828,"byte_end":1831,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ - You have to use a Rust version whose LLVM version is compatible with the toolchain in","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":1832,"byte_end":1923,"line_start":44,"line_end":44,"column_start":1,"column_end":92}},{"value":"/   `asm-toolchain`.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":1924,"byte_end":1946,"line_start":45,"line_end":45,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":1947,"byte_end":1950,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ - Due to a [Rust bug][rust-lang/rust#75940] in compiler versions **before 1.49**, this option","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":1951,"byte_end":2048,"line_start":47,"line_end":47,"column_start":1,"column_end":98}},{"value":"/   does not work with optimization levels `s` and `z`.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":2049,"byte_end":2106,"line_start":48,"line_end":48,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":2107,"byte_end":2110,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [Linker-Plugin LTO]: https://doc.rust-lang.org/stable/rustc/linker-plugin-lto.html","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":2111,"byte_end":2197,"line_start":50,"line_end":50,"column_start":1,"column_end":87}},{"value":"/ [rust-lang/rust#75940]: https://github.com/rust-lang/rust/issues/75940","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":2198,"byte_end":2272,"line_start":51,"line_end":51,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":2273,"byte_end":2276,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Minimum Supported Rust Version (MSRV)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":2277,"byte_end":2320,"line_start":53,"line_end":53,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":2321,"byte_end":2324,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This crate is guaranteed to compile on stable Rust 1.38 and up. It *might*","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":2325,"byte_end":2403,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/ compile with older versions but that may change in any new patch release.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":2404,"byte_end":2481,"line_start":56,"line_end":56,"column_start":1,"column_end":78}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":2534,"byte_end":2556,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"no_std","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":2557,"byte_end":2567,"line_start":60,"line_end":60,"column_start":1,"column_end":11}},{"value":"allow(clippy :: identity_op)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":2568,"byte_end":2598,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"allow(clippy :: missing_safety_doc)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":2599,"byte_end":2636,"line_start":62,"line_end":62,"column_start":1,"column_end":38}},{"value":"allow(clippy :: match_single_binding)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":2731,"byte_end":2770,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"deny(clippy :: missing_inline_in_public_items)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":3382,"byte_end":3430,"line_start":78,"line_end":78,"column_start":1,"column_end":49}},{"value":"allow(stable_features)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":3495,"byte_end":3521,"line_start":80,"line_end":80,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"asm","qualname":"::asm","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27}],"decl_id":null,"docs":" Miscellaneous assembly instructions\n","sig":null,"attributes":[{"value":"/ Miscellaneous assembly instructions","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":7469,"byte_end":7508,"line_start":1,"line_end":1,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":15},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":7930,"byte_end":7934,"line_start":14,"line_end":14,"column_start":8,"column_end":12},"name":"bkpt","qualname":"::asm::bkpt","value":"pub fn bkpt()","parent":null,"children":[],"decl_id":null,"docs":" Puts the processor in Debug state. Debuggers can pick this up as a \"breakpoint\".","sig":null,"attributes":[{"value":"/ Puts the processor in Debug state. Debuggers can pick this up as a \"breakpoint\".","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":7709,"byte_end":7793,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":7794,"byte_end":7797,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ **NOTE** calling `bkpt` when the processor is not connected to a debugger will cause an","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":7798,"byte_end":7889,"line_start":11,"line_end":11,"column_start":1,"column_end":92}},{"value":"/ exception.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":7890,"byte_end":7904,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":7905,"byte_end":7922,"line_start":13,"line_end":13,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":8590,"byte_end":8595,"line_start":28,"line_end":28,"column_start":8,"column_end":13},"name":"delay","qualname":"::asm::delay","value":"pub fn delay(u32)","parent":null,"children":[],"decl_id":null,"docs":" Blocks the program for *at least* `cycles` CPU cycles.","sig":null,"attributes":[{"value":"/ Blocks the program for *at least* `cycles` CPU cycles.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":7967,"byte_end":8025,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":8026,"byte_end":8029,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This is implemented in assembly so its execution time is independent of the optimization","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":8030,"byte_end":8122,"line_start":20,"line_end":20,"column_start":1,"column_end":93}},{"value":"/ level, however it is dependent on the specific architecture and core configuration.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":8123,"byte_end":8210,"line_start":21,"line_end":21,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":8211,"byte_end":8214,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ NOTE that the delay can take much longer if interrupts are serviced during its execution","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":8215,"byte_end":8307,"line_start":23,"line_end":23,"column_start":1,"column_end":93}},{"value":"/ and the execution time may vary with other factors. This delay is mainly useful for simple","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":8308,"byte_end":8402,"line_start":24,"line_end":24,"column_start":1,"column_end":95}},{"value":"/ timer-less initialization of peripherals if and only if accurate timing is not essential. In","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":8403,"byte_end":8499,"line_start":25,"line_end":25,"column_start":1,"column_end":97}},{"value":"/ any other case please use a more accurate method to produce a delay.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":8500,"byte_end":8572,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":8573,"byte_end":8582,"line_start":27,"line_end":27,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":8745,"byte_end":8748,"line_start":34,"line_end":34,"column_start":8,"column_end":11},"name":"nop","qualname":"::asm::nop","value":"pub fn nop()","parent":null,"children":[],"decl_id":null,"docs":" A no-operation. Useful to prevent delay loops from being optimized away.\n","sig":null,"attributes":[{"value":"/ A no-operation. Useful to prevent delay loops from being optimized away.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":8651,"byte_end":8727,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":8728,"byte_end":8737,"line_start":33,"line_end":33,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":8920,"byte_end":8923,"line_start":42,"line_end":42,"column_start":8,"column_end":11},"name":"udf","qualname":"::asm::udf","value":"pub fn udf() -> !","parent":null,"children":[],"decl_id":null,"docs":" Generate an Undefined Instruction exception.","sig":null,"attributes":[{"value":"/ Generate an Undefined Instruction exception.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":8780,"byte_end":8828,"line_start":38,"line_end":38,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":8829,"byte_end":8832,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Can be used as a stable alternative to `core::intrinsics::abort`.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":8833,"byte_end":8902,"line_start":40,"line_end":40,"column_start":1,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":8903,"byte_end":8912,"line_start":41,"line_end":41,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":19},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":9000,"byte_end":9003,"line_start":48,"line_end":48,"column_start":8,"column_end":11},"name":"wfe","qualname":"::asm::wfe","value":"pub fn wfe()","parent":null,"children":[],"decl_id":null,"docs":" Wait For Event\n","sig":null,"attributes":[{"value":"/ Wait For Event","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":8964,"byte_end":8982,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":8983,"byte_end":8992,"line_start":47,"line_end":47,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":9074,"byte_end":9077,"line_start":54,"line_end":54,"column_start":8,"column_end":11},"name":"wfi","qualname":"::asm::wfi","value":"pub fn wfi()","parent":null,"children":[],"decl_id":null,"docs":" Wait For Interrupt\n","sig":null,"attributes":[{"value":"/ Wait For Interrupt","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":9034,"byte_end":9056,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":9057,"byte_end":9066,"line_start":53,"line_end":53,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":9140,"byte_end":9143,"line_start":60,"line_end":60,"column_start":8,"column_end":11},"name":"sev","qualname":"::asm::sev","value":"pub fn sev()","parent":null,"children":[],"decl_id":null,"docs":" Send Event\n","sig":null,"attributes":[{"value":"/ Send Event","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":9108,"byte_end":9122,"line_start":58,"line_end":58,"column_start":1,"column_end":15}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":9123,"byte_end":9132,"line_start":59,"line_end":59,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":9403,"byte_end":9406,"line_start":69,"line_end":69,"column_start":8,"column_end":11},"name":"isb","qualname":"::asm::isb","value":"pub fn isb()","parent":null,"children":[],"decl_id":null,"docs":" Instruction Synchronization Barrier","sig":null,"attributes":[{"value":"/ Instruction Synchronization Barrier","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":9174,"byte_end":9213,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":9214,"byte_end":9217,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Flushes the pipeline in the processor, so that all instructions following the `ISB` are fetched","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":9218,"byte_end":9317,"line_start":66,"line_end":66,"column_start":1,"column_end":100}},{"value":"/ from cache or memory, after the instruction has been completed.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":9318,"byte_end":9385,"line_start":67,"line_end":67,"column_start":1,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":9386,"byte_end":9395,"line_start":68,"line_end":68,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":9858,"byte_end":9861,"line_start":81,"line_end":81,"column_start":8,"column_end":11},"name":"dsb","qualname":"::asm::dsb","value":"pub fn dsb()","parent":null,"children":[],"decl_id":null,"docs":" Data Synchronization Barrier","sig":null,"attributes":[{"value":"/ Data Synchronization Barrier","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":9437,"byte_end":9469,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":9470,"byte_end":9473,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Acts as a special kind of memory barrier. No instruction in program order after this instruction","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":9474,"byte_end":9574,"line_start":75,"line_end":75,"column_start":1,"column_end":101}},{"value":"/ can execute until this instruction completes. This instruction completes only when both:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":9575,"byte_end":9667,"line_start":76,"line_end":76,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":9668,"byte_end":9671,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/  * any explicit memory access made before this instruction is complete","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":9672,"byte_end":9746,"line_start":78,"line_end":78,"column_start":1,"column_end":75}},{"value":"/  * all cache and branch predictor maintenance operations before this instruction complete","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":9747,"byte_end":9840,"line_start":79,"line_end":79,"column_start":1,"column_end":94}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":9841,"byte_end":9850,"line_start":80,"line_end":80,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":10156,"byte_end":10159,"line_start":91,"line_end":91,"column_start":8,"column_end":11},"name":"dmb","qualname":"::asm::dmb","value":"pub fn dmb()","parent":null,"children":[],"decl_id":null,"docs":" Data Memory Barrier","sig":null,"attributes":[{"value":"/ Data Memory Barrier","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":9892,"byte_end":9915,"line_start":85,"line_end":85,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":9916,"byte_end":9919,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Ensures that all explicit memory accesses that appear in program order before the `DMB`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":9920,"byte_end":10011,"line_start":87,"line_end":87,"column_start":1,"column_end":92}},{"value":"/ instruction are observed before any explicit memory accesses that appear in program order","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":10012,"byte_end":10105,"line_start":88,"line_end":88,"column_start":1,"column_end":94}},{"value":"/ after the `DMB` instruction.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":10106,"byte_end":10138,"line_start":89,"line_end":89,"column_start":1,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":10139,"byte_end":10148,"line_start":90,"line_end":90,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":12810,"byte_end":12829,"line_start":170,"line_end":170,"column_start":15,"column_end":34},"name":"semihosting_syscall","qualname":"::asm::semihosting_syscall","value":"pub unsafe fn semihosting_syscall(u32, u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Semihosting syscall.","sig":null,"attributes":[{"value":"/ Semihosting syscall.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":12676,"byte_end":12700,"line_start":166,"line_end":166,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":12701,"byte_end":12704,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ This method is used by cortex-m-semihosting to provide semihosting syscalls.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":12705,"byte_end":12785,"line_start":168,"line_end":168,"column_start":1,"column_end":81}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":12786,"byte_end":12795,"line_start":169,"line_end":169,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":13243,"byte_end":13252,"line_start":185,"line_end":185,"column_start":15,"column_end":24},"name":"bootstrap","qualname":"::asm::bootstrap","value":"pub unsafe fn bootstrap(*const u32, *const u32) -> !","parent":null,"children":[],"decl_id":null,"docs":" Bootstrap.","sig":null,"attributes":[{"value":"/ Bootstrap.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":12915,"byte_end":12929,"line_start":174,"line_end":174,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":12930,"byte_end":12933,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ Clears CONTROL.SPSEL (setting the main stack to be the active stack),","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":12934,"byte_end":13007,"line_start":176,"line_end":176,"column_start":1,"column_end":74}},{"value":"/ updates the main stack pointer to the address in `msp`, then jumps","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":13008,"byte_end":13078,"line_start":177,"line_end":177,"column_start":1,"column_end":71}},{"value":"/ to the address in `rv`.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":13079,"byte_end":13106,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":13107,"byte_end":13110,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":13111,"byte_end":13123,"line_start":180,"line_end":180,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":13124,"byte_end":13127,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ `msp` and `rv` must point to valid stack memory and executable code,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":13128,"byte_end":13200,"line_start":182,"line_end":182,"column_start":1,"column_end":73}},{"value":"/ respectively.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":13201,"byte_end":13218,"line_start":183,"line_end":183,"column_start":1,"column_end":18}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":13219,"byte_end":13228,"line_start":184,"line_end":184,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":13912,"byte_end":13920,"line_start":205,"line_end":205,"column_start":15,"column_end":23},"name":"bootload","qualname":"::asm::bootload","value":"pub unsafe fn bootload(*const u32) -> !","parent":null,"children":[],"decl_id":null,"docs":" Bootload.","sig":null,"attributes":[{"value":"/ Bootload.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":13437,"byte_end":13450,"line_start":192,"line_end":192,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":13451,"byte_end":13454,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ Reads the initial stack pointer value and reset vector from","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":13455,"byte_end":13518,"line_start":194,"line_end":194,"column_start":1,"column_end":64}},{"value":"/ the provided vector table address, sets the active stack to","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":13519,"byte_end":13582,"line_start":195,"line_end":195,"column_start":1,"column_end":64}},{"value":"/ the main stack, sets the main stack pointer to the new initial","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":13583,"byte_end":13649,"line_start":196,"line_end":196,"column_start":1,"column_end":67}},{"value":"/ stack pointer, then jumps to the reset vector.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":13650,"byte_end":13700,"line_start":197,"line_end":197,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":13701,"byte_end":13704,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":13705,"byte_end":13717,"line_start":199,"line_end":199,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":13718,"byte_end":13721,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ The provided `vector_table` must point to a valid vector","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":13722,"byte_end":13782,"line_start":201,"line_end":201,"column_start":1,"column_end":61}},{"value":"/ table, with a valid stack pointer as the first word and","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":13783,"byte_end":13842,"line_start":202,"line_end":202,"column_start":1,"column_end":60}},{"value":"/ a valid reset vector as the second word.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":13843,"byte_end":13887,"line_start":203,"line_end":203,"column_start":1,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\asm.rs","byte_start":13888,"byte_end":13897,"line_start":204,"line_end":204,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"delay","qualname":"::delay","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":66}],"decl_id":null,"docs":" A delay driver based on SysTick.\n","sig":null,"attributes":[{"value":"/ A delay driver based on SysTick.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":14126,"byte_end":14162,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":14331,"byte_end":14336,"line_start":7,"line_end":7,"column_start":12,"column_end":17},"name":"Delay","qualname":"::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45}],"decl_id":null,"docs":" System timer (SysTick) as a delay provider.\n","sig":null,"attributes":[{"value":"/ System timer (SysTick) as a delay provider.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":14272,"byte_end":14319,"line_start":6,"line_end":6,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":14552,"byte_end":14555,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<Delay>::new","value":"pub fn new(SYST, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the system timer (SysTick) as a delay provider.","sig":null,"attributes":[{"value":"/ Configures the system timer (SysTick) as a delay provider.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":14395,"byte_end":14457,"line_start":13,"line_end":13,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":14462,"byte_end":14465,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ `ahb_frequency` is a frequency of the AHB bus in Hz.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":14470,"byte_end":14526,"line_start":15,"line_end":15,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":14531,"byte_end":14540,"line_start":16,"line_end":16,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":14868,"byte_end":14879,"line_start":26,"line_end":26,"column_start":12,"column_end":23},"name":"with_source","qualname":"<Delay>::with_source","value":"pub fn with_source(SYST, u32, SystClkSource) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the system timer (SysTick) as a delay provider\n with a clock source.","sig":null,"attributes":[{"value":"/ Configures the system timer (SysTick) as a delay provider","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":14677,"byte_end":14738,"line_start":21,"line_end":21,"column_start":5,"column_end":66}},{"value":"/ with a clock source.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":14743,"byte_end":14767,"line_start":22,"line_end":22,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":14772,"byte_end":14775,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ `frequency` is the frequency of your `clock_source` in Hz.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":14780,"byte_end":14842,"line_start":24,"line_end":24,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":14847,"byte_end":14856,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":15117,"byte_end":15121,"line_start":34,"line_end":34,"column_start":12,"column_end":16},"name":"free","qualname":"<Delay>::free","value":"pub fn free(Self) -> SYST","parent":null,"children":[],"decl_id":null,"docs":" Releases the system timer (SysTick) resource.\n","sig":null,"attributes":[{"value":"/ Releases the system timer (SysTick) resource.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":15042,"byte_end":15091,"line_start":32,"line_end":32,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":15096,"byte_end":15105,"line_start":33,"line_end":33,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":15300,"byte_end":15308,"line_start":40,"line_end":40,"column_start":12,"column_end":20},"name":"delay_us","qualname":"<Delay>::delay_us","value":"pub fn delay_us(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Delay using the Cortex-M systick for a certain duration, in µs.\n","sig":null,"attributes":[{"value":"/ Delay using the Cortex-M systick for a certain duration, in µs.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":15167,"byte_end":15235,"line_start":38,"line_end":38,"column_start":5,"column_end":72}},{"value":"allow(clippy :: missing_inline_in_public_items)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":15240,"byte_end":15288,"line_start":39,"line_end":39,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":16109,"byte_end":16117,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"delay_ms","qualname":"<Delay>::delay_ms","value":"pub fn delay_ms(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Delay using the Cortex-M systick for a certain duration, in ms.\n","sig":null,"attributes":[{"value":"/ Delay using the Cortex-M systick for a certain duration, in ms.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":16016,"byte_end":16083,"line_start":66,"line_end":66,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":16088,"byte_end":16097,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"interrupt","qualname":"::interrupt","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86}],"decl_id":null,"docs":" Interrupts\n","sig":null,"attributes":[{"value":"/ Interrupts","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":17724,"byte_end":17738,"line_start":1,"line_end":1,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":18427,"byte_end":18442,"line_start":19,"line_end":19,"column_start":18,"column_end":33},"name":"InterruptNumber","qualname":"::interrupt::InterruptNumber","value":"InterruptNumber: Copy","parent":null,"children":[{"krate":0,"index":80}],"decl_id":null,"docs":" Trait for enums of external interrupt numbers.","sig":null,"attributes":[{"value":"/ Trait for enums of external interrupt numbers.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":17791,"byte_end":17841,"line_start":5,"line_end":5,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":17842,"byte_end":17845,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This trait should be implemented by a peripheral access crate (PAC)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":17846,"byte_end":17917,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/ on its enum of available external interrupts for a specific device.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":17918,"byte_end":17989,"line_start":8,"line_end":8,"column_start":1,"column_end":72}},{"value":"/ Each variant must convert to a u16 of its interrupt number,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":17990,"byte_end":18053,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ which is its exception number - 16.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":18054,"byte_end":18093,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":18094,"byte_end":18097,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":18098,"byte_end":18110,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":18111,"byte_end":18114,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This trait must only be implemented on enums of device interrupts. Each","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":18115,"byte_end":18190,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ enum variant must represent a distinct value (no duplicates are permitted),","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":18191,"byte_end":18270,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ and must always return the same value (do not change at runtime).","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":18271,"byte_end":18340,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":18341,"byte_end":18344,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ These requirements ensure safe nesting of critical sections.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":18345,"byte_end":18409,"line_start":18,"line_end":18,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":18589,"byte_end":18595,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"number","qualname":"::interrupt::InterruptNumber::number","value":"pub fn number(Self) -> u16","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":" Return the interrupt number associated with this variant.","sig":null,"attributes":[{"value":"/ Return the interrupt number associated with this variant.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":18455,"byte_end":18516,"line_start":20,"line_end":20,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":18521,"byte_end":18524,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ See trait documentation for safety requirements.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":18529,"byte_end":18581,"line_start":22,"line_end":22,"column_start":5,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":18946,"byte_end":18953,"line_start":37,"line_end":37,"column_start":8,"column_end":15},"name":"disable","qualname":"::interrupt::disable","value":"pub fn disable()","parent":null,"children":[],"decl_id":null,"docs":" Disables all interrupts\n","sig":null,"attributes":[{"value":"/ Disables all interrupts","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":18901,"byte_end":18928,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":18929,"byte_end":18938,"line_start":36,"line_end":36,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":19140,"byte_end":19146,"line_start":47,"line_end":47,"column_start":15,"column_end":21},"name":"enable","qualname":"::interrupt::enable","value":"pub unsafe fn enable()","parent":null,"children":[],"decl_id":null,"docs":" Enables all the interrupts","sig":null,"attributes":[{"value":"/ Enables all the interrupts","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":18987,"byte_end":19017,"line_start":41,"line_end":41,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":19018,"byte_end":19021,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":19022,"byte_end":19034,"line_start":43,"line_end":43,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":19035,"byte_end":19038,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ - Do not call this function inside an `interrupt::free` critical section","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":19039,"byte_end":19115,"line_start":45,"line_end":45,"column_start":1,"column_end":77}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":19116,"byte_end":19125,"line_start":46,"line_end":46,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":19303,"byte_end":19307,"line_start":55,"line_end":55,"column_start":8,"column_end":12},"name":"free","qualname":"::interrupt::free","value":"pub fn free<F, R>(F) -> R where F: FnOnce(&CriticalSection) -> R","parent":null,"children":[],"decl_id":null,"docs":" Execute closure `f` in an interrupt-free context.","sig":null,"attributes":[{"value":"/ Execute closure `f` in an interrupt-free context.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":19180,"byte_end":19233,"line_start":51,"line_end":51,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":19234,"byte_end":19237,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ This as also known as a \"critical section\".","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":19238,"byte_end":19285,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":19286,"byte_end":19295,"line_start":54,"line_end":54,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"itm","qualname":"::itm","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":122}],"decl_id":null,"docs":" Instrumentation Trace Macrocell","sig":null,"attributes":[{"value":"cfg(all(not(armv6m), not(armv8m_base)))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":3710,"byte_end":3752,"line_start":95,"line_end":95,"column_start":1,"column_end":43}},{"value":"/ Instrumentation Trace Macrocell","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":19713,"byte_end":19748,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":19749,"byte_end":19752,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ **NOTE** This module is only available on ARMv7-M and newer.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":19753,"byte_end":19817,"line_start":3,"line_end":3,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":21473,"byte_end":21480,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"Aligned","qualname":"::itm::Aligned","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper type that aligns its contents on a 4-Byte boundary.","sig":null,"attributes":[{"value":"/ A wrapper type that aligns its contents on a 4-Byte boundary.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":21224,"byte_end":21289,"line_start":68,"line_end":68,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":21290,"byte_end":21293,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ITM transfers are most efficient when the data is 4-Byte-aligned. This type provides an easy","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":21294,"byte_end":21390,"line_start":70,"line_end":70,"column_start":1,"column_end":97}},{"value":"/ way to accomplish and enforce such an alignment.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":21391,"byte_end":21443,"line_start":71,"line_end":71,"column_start":1,"column_end":53}},{"value":"repr(align(4))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":21444,"byte_end":21461,"line_start":72,"line_end":72,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":21492,"byte_end":21497,"line_start":73,"line_end":73,"column_start":31,"column_end":36},"name":"0","qualname":"::itm::Aligned::0","value":"T","parent":{"krate":0,"index":112},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":21593,"byte_end":21602,"line_start":77,"line_end":77,"column_start":8,"column_end":17},"name":"write_all","qualname":"::itm::write_all","value":"pub fn write_all(&mut Stim, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Writes `buffer` to an ITM port.\n","sig":null,"attributes":[{"value":"/ Writes `buffer` to an ITM port.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":21501,"byte_end":21536,"line_start":75,"line_end":75,"column_start":1,"column_end":36}},{"value":"allow(clippy :: missing_inline_in_public_items)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":21537,"byte_end":21585,"line_start":76,"line_end":76,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":23342,"byte_end":23355,"line_start":142,"line_end":142,"column_start":8,"column_end":21},"name":"write_aligned","qualname":"::itm::write_aligned","value":"pub fn write_aligned(&mut Stim, &Aligned<[u8]>)","parent":null,"children":[],"decl_id":null,"docs":" Writes a 4-byte aligned `buffer` to an ITM port.","sig":null,"attributes":[{"value":"/ Writes a 4-byte aligned `buffer` to an ITM port.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":22847,"byte_end":22899,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":22900,"byte_end":22903,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":22904,"byte_end":22918,"line_start":127,"line_end":127,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":22919,"byte_end":22922,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":22923,"byte_end":22936,"line_start":129,"line_end":129,"column_start":1,"column_end":14}},{"value":"/ # use cortex_m::{itm::{self, Aligned}, peripheral::ITM};","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":22937,"byte_end":22997,"line_start":130,"line_end":130,"column_start":1,"column_end":61}},{"value":"/ # let port = unsafe { &mut (*ITM::ptr()).stim[0] };","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":22998,"byte_end":23053,"line_start":131,"line_end":131,"column_start":1,"column_end":56}},{"value":"/ let mut buffer = Aligned([0; 14]);","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":23054,"byte_end":23092,"line_start":132,"line_end":132,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":23093,"byte_end":23096,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ buffer.0.copy_from_slice(b\"Hello, world!\\n\");","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":23097,"byte_end":23146,"line_start":134,"line_end":134,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":23147,"byte_end":23150,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ itm::write_aligned(port, &buffer);","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":23151,"byte_end":23189,"line_start":136,"line_end":136,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":23190,"byte_end":23193,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ // Or equivalently","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":23194,"byte_end":23216,"line_start":138,"line_end":138,"column_start":1,"column_end":23}},{"value":"/ itm::write_aligned(port, &Aligned(*b\"Hello, world!\\n\"));","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":23217,"byte_end":23277,"line_start":139,"line_end":139,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":23278,"byte_end":23285,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"allow(clippy :: missing_inline_in_public_items)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":23286,"byte_end":23334,"line_start":141,"line_end":141,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":23516,"byte_end":23525,"line_start":148,"line_end":148,"column_start":8,"column_end":17},"name":"write_fmt","qualname":"::itm::write_fmt","value":"pub fn write_fmt(&mut Stim, fmt::Arguments)","parent":null,"children":[],"decl_id":null,"docs":" Writes `fmt::Arguments` to the ITM `port`\n","sig":null,"attributes":[{"value":"/ Writes `fmt::Arguments` to the ITM `port`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":23453,"byte_end":23498,"line_start":146,"line_end":146,"column_start":1,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":23499,"byte_end":23508,"line_start":147,"line_end":147,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":23689,"byte_end":23698,"line_start":156,"line_end":156,"column_start":8,"column_end":17},"name":"write_str","qualname":"::itm::write_str","value":"pub fn write_str(&mut Stim, &str)","parent":null,"children":[],"decl_id":null,"docs":" Writes a string to the ITM `port`\n","sig":null,"attributes":[{"value":"/ Writes a string to the ITM `port`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":23634,"byte_end":23671,"line_start":154,"line_end":154,"column_start":1,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":23672,"byte_end":23681,"line_start":155,"line_end":155,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"peripheral","qualname":"::peripheral","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":167},{"krate":0,"index":211},{"krate":0,"index":237},{"krate":0,"index":302},{"krate":0,"index":322},{"krate":0,"index":337},{"krate":0,"index":347},{"krate":0,"index":388},{"krate":0,"index":408},{"krate":0,"index":472},{"krate":0,"index":596},{"krate":0,"index":642},{"krate":0,"index":672},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":694},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":701},{"krate":0,"index":704},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":710},{"krate":0,"index":713},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":719},{"krate":0,"index":722},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":728},{"krate":0,"index":731},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":737},{"krate":0,"index":740},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":746},{"krate":0,"index":749},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":755},{"krate":0,"index":758},{"krate":0,"index":760},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":766},{"krate":0,"index":769},{"krate":0,"index":771},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":789},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":798},{"krate":0,"index":801},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":816}],"decl_id":null,"docs":" Core peripherals.","sig":null,"attributes":[{"value":"/ Core peripherals.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":23774,"byte_end":23795,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":23796,"byte_end":23799,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # API","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":23800,"byte_end":23809,"line_start":3,"line_end":3,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":23810,"byte_end":23813,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ To use (most of) the peripheral API first you must get an *instance* of the peripheral. All the","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":23814,"byte_end":23913,"line_start":5,"line_end":5,"column_start":1,"column_end":100}},{"value":"/ core peripherals are modeled as singletons (there can only ever be, at most, one instance of any","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":23914,"byte_end":24014,"line_start":6,"line_end":6,"column_start":1,"column_end":101}},{"value":"/ one of them at any given point in time) and the only way to get an instance of them is through","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":24015,"byte_end":24113,"line_start":7,"line_end":7,"column_start":1,"column_end":99}},{"value":"/ the [`Peripherals::take`](struct.Peripherals.html#method.take) method.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":24114,"byte_end":24188,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":24189,"byte_end":24192,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ``` no_run","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":24193,"byte_end":24207,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/ # use cortex_m::peripheral::Peripherals;","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":24208,"byte_end":24252,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/ let mut peripherals = Peripherals::take().unwrap();","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":24253,"byte_end":24308,"line_start":12,"line_end":12,"column_start":1,"column_end":56}},{"value":"/ peripherals.DCB.enable_trace();","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":24309,"byte_end":24344,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":24345,"byte_end":24352,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":24353,"byte_end":24356,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This method can only be successfully called *once* -- this is why the method returns an","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":24357,"byte_end":24448,"line_start":16,"line_end":16,"column_start":1,"column_end":92}},{"value":"/ `Option`. Subsequent calls to the method will result in a `None` value being returned.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":24449,"byte_end":24539,"line_start":17,"line_end":17,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":24540,"byte_end":24543,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ``` no_run, should_panic","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":24544,"byte_end":24572,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ # use cortex_m::peripheral::Peripherals;","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":24573,"byte_end":24617,"line_start":20,"line_end":20,"column_start":1,"column_end":45}},{"value":"/ let ok = Peripherals::take().unwrap();","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":24618,"byte_end":24660,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ let panics = Peripherals::take().unwrap();","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":24661,"byte_end":24707,"line_start":22,"line_end":22,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":24708,"byte_end":24715,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ A part of the peripheral API doesn't require access to a peripheral instance. This part of the","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":24716,"byte_end":24814,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ API is provided as static methods on the peripheral types. One example is the","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":24815,"byte_end":24896,"line_start":25,"line_end":25,"column_start":1,"column_end":82}},{"value":"/ [`DWT::cycle_count`](struct.DWT.html#method.cycle_count) method.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":24897,"byte_end":24965,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":24966,"byte_end":24969,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ``` no_run","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":24970,"byte_end":24984,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/ # use cortex_m::peripheral::{DWT, Peripherals};","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":24985,"byte_end":25036,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ {","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":25037,"byte_end":25042,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/     let mut peripherals = Peripherals::take().unwrap();","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":25043,"byte_end":25102,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/     peripherals.DCB.enable_trace();","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":25103,"byte_end":25142,"line_start":32,"line_end":32,"column_start":1,"column_end":40}},{"value":"/     peripherals.DWT.enable_cycle_counter();","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":25143,"byte_end":25190,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/ } // all the peripheral singletons are destroyed here","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":25191,"byte_end":25248,"line_start":34,"line_end":34,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":25249,"byte_end":25252,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // but this method can be called without a DWT instance","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":25253,"byte_end":25312,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/ let cyccnt = DWT::cycle_count();","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":25313,"byte_end":25349,"line_start":37,"line_end":37,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":25350,"byte_end":25357,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":25358,"byte_end":25361,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The singleton property can be *unsafely* bypassed using the `ptr` static method which is","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":25362,"byte_end":25454,"line_start":40,"line_end":40,"column_start":1,"column_end":93}},{"value":"/ available on all the peripheral types. This method is a useful building block for implementing","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":25455,"byte_end":25553,"line_start":41,"line_end":41,"column_start":1,"column_end":99}},{"value":"/ safe higher level abstractions.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":25554,"byte_end":25589,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":25590,"byte_end":25593,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ``` no_run","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":25594,"byte_end":25608,"line_start":44,"line_end":44,"column_start":1,"column_end":15}},{"value":"/ # use cortex_m::peripheral::{DWT, Peripherals};","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":25609,"byte_end":25660,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/ {","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":25661,"byte_end":25666,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/     let mut peripherals = Peripherals::take().unwrap();","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":25667,"byte_end":25726,"line_start":47,"line_end":47,"column_start":1,"column_end":60}},{"value":"/     peripherals.DCB.enable_trace();","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":25727,"byte_end":25766,"line_start":48,"line_end":48,"column_start":1,"column_end":40}},{"value":"/     peripherals.DWT.enable_cycle_counter();","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":25767,"byte_end":25814,"line_start":49,"line_end":49,"column_start":1,"column_end":48}},{"value":"/ } // all the peripheral singletons are destroyed here","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":25815,"byte_end":25872,"line_start":50,"line_end":50,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":25873,"byte_end":25876,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // actually safe because this is an atomic read with no side effects","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":25877,"byte_end":25949,"line_start":52,"line_end":52,"column_start":1,"column_end":73}},{"value":"/ let cyccnt = unsafe { (*DWT::ptr()).cyccnt.read() };","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":25950,"byte_end":26006,"line_start":53,"line_end":53,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":26007,"byte_end":26014,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":26015,"byte_end":26018,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ # References","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":26019,"byte_end":26035,"line_start":56,"line_end":56,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":26036,"byte_end":26039,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ - ARMv7-M Architecture Reference Manual (Issue E.b) - Chapter B3","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":26040,"byte_end":26108,"line_start":58,"line_end":58,"column_start":1,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cbp","qualname":"::peripheral::cbp","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":140},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156}],"decl_id":null,"docs":" Cache and branch predictor maintenance operations","sig":null,"attributes":[{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":26204,"byte_end":26223,"line_start":67,"line_end":67,"column_start":1,"column_end":20}},{"value":"/ Cache and branch predictor maintenance operations","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":39833,"byte_end":39886,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":39887,"byte_end":39890,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ *NOTE* Not available on Armv6-M.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":39891,"byte_end":39927,"line_start":3,"line_end":3,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":40027,"byte_end":40040,"line_start":11,"line_end":11,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::cbp::RegisterBlock","value":"RegisterBlock { iciallu, icimvau, dcimvac, dcisw, dccmvau, dccmvac, dccsw, dccimvac, dccisw, bpiall }","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151}],"decl_id":null,"docs":" Register block\n","sig":null,"attributes":[{"value":"/ Register block","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":39986,"byte_end":40004,"line_start":9,"line_end":9,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":40005,"byte_end":40015,"line_start":10,"line_end":10,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":40089,"byte_end":40096,"line_start":13,"line_end":13,"column_start":9,"column_end":16},"name":"iciallu","qualname":"::peripheral::cbp::RegisterBlock::iciallu","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" I-cache invalidate all to PoU\n","sig":null,"attributes":[{"value":"/ I-cache invalidate all to PoU","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":40047,"byte_end":40080,"line_start":12,"line_end":12,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":40176,"byte_end":40183,"line_start":16,"line_end":16,"column_start":9,"column_end":16},"name":"icimvau","qualname":"::peripheral::cbp::RegisterBlock::icimvau","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" I-cache invalidate by MVA to PoU\n","sig":null,"attributes":[{"value":"/ I-cache invalidate by MVA to PoU","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":40131,"byte_end":40167,"line_start":15,"line_end":15,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":40243,"byte_end":40250,"line_start":18,"line_end":18,"column_start":9,"column_end":16},"name":"dcimvac","qualname":"::peripheral::cbp::RegisterBlock::dcimvac","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" D-cache invalidate by MVA to PoC\n","sig":null,"attributes":[{"value":"/ D-cache invalidate by MVA to PoC","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":40198,"byte_end":40234,"line_start":17,"line_end":17,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":40307,"byte_end":40312,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"name":"dcisw","qualname":"::peripheral::cbp::RegisterBlock::dcisw","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" D-cache invalidate by set-way\n","sig":null,"attributes":[{"value":"/ D-cache invalidate by set-way","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":40265,"byte_end":40298,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":40367,"byte_end":40374,"line_start":22,"line_end":22,"column_start":9,"column_end":16},"name":"dccmvau","qualname":"::peripheral::cbp::RegisterBlock::dccmvau","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" D-cache clean by MVA to PoU\n","sig":null,"attributes":[{"value":"/ D-cache clean by MVA to PoU","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":40327,"byte_end":40358,"line_start":21,"line_end":21,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":40429,"byte_end":40436,"line_start":24,"line_end":24,"column_start":9,"column_end":16},"name":"dccmvac","qualname":"::peripheral::cbp::RegisterBlock::dccmvac","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" D-cache clean by MVA to PoC\n","sig":null,"attributes":[{"value":"/ D-cache clean by MVA to PoC","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":40389,"byte_end":40420,"line_start":23,"line_end":23,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":40488,"byte_end":40493,"line_start":26,"line_end":26,"column_start":9,"column_end":14},"name":"dccsw","qualname":"::peripheral::cbp::RegisterBlock::dccsw","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" D-cache clean by set-way\n","sig":null,"attributes":[{"value":"/ D-cache clean by set-way","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":40451,"byte_end":40479,"line_start":25,"line_end":25,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":40563,"byte_end":40571,"line_start":28,"line_end":28,"column_start":9,"column_end":17},"name":"dccimvac","qualname":"::peripheral::cbp::RegisterBlock::dccimvac","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" D-cache clean and invalidate by MVA to PoC\n","sig":null,"attributes":[{"value":"/ D-cache clean and invalidate by MVA to PoC","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":40508,"byte_end":40554,"line_start":27,"line_end":27,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":40638,"byte_end":40644,"line_start":30,"line_end":30,"column_start":9,"column_end":15},"name":"dccisw","qualname":"::peripheral::cbp::RegisterBlock::dccisw","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" D-cache clean and invalidate by set-way\n","sig":null,"attributes":[{"value":"/ D-cache clean and invalidate by set-way","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":40586,"byte_end":40629,"line_start":29,"line_end":29,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":40703,"byte_end":40709,"line_start":32,"line_end":32,"column_start":9,"column_end":15},"name":"bpiall","qualname":"::peripheral::cbp::RegisterBlock::bpiall","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Branch predictor invalidate all\n","sig":null,"attributes":[{"value":"/ Branch predictor invalidate all","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":40659,"byte_end":40694,"line_start":31,"line_end":31,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":40975,"byte_end":40982,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"iciallu","qualname":"<CBP>::iciallu","value":"pub fn iciallu(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" I-cache invalidate all to PoU\n","sig":null,"attributes":[{"value":"/ I-cache invalidate all to PoU","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":40908,"byte_end":40941,"line_start":41,"line_end":41,"column_start":5,"column_end":38}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":40946,"byte_end":40963,"line_start":42,"line_end":42,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":41119,"byte_end":41126,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"icimvau","qualname":"<CBP>::icimvau","value":"pub fn icimvau(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" I-cache invalidate by MVA to PoU\n","sig":null,"attributes":[{"value":"/ I-cache invalidate by MVA to PoU","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":41049,"byte_end":41085,"line_start":47,"line_end":47,"column_start":5,"column_end":41}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":41090,"byte_end":41107,"line_start":48,"line_end":48,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":41282,"byte_end":41289,"line_start":55,"line_end":55,"column_start":19,"column_end":26},"name":"dcimvac","qualname":"<CBP>::dcimvac","value":"pub unsafe fn dcimvac(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" D-cache invalidate by MVA to PoC\n","sig":null,"attributes":[{"value":"/ D-cache invalidate by MVA to PoC","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":41205,"byte_end":41241,"line_start":53,"line_end":53,"column_start":5,"column_end":41}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":41246,"byte_end":41263,"line_start":54,"line_end":54,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":41515,"byte_end":41520,"line_start":63,"line_end":63,"column_start":19,"column_end":24},"name":"dcisw","qualname":"<CBP>::dcisw","value":"pub unsafe fn dcisw(&mut Self, u16, u16)","parent":null,"children":[],"decl_id":null,"docs":" D-cache invalidate by set-way","sig":null,"attributes":[{"value":"/ D-cache invalidate by set-way","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":41357,"byte_end":41390,"line_start":59,"line_end":59,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":41395,"byte_end":41398,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ `set` is masked to be between 0 and 3, and `way` between 0 and 511.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":41403,"byte_end":41474,"line_start":61,"line_end":61,"column_start":5,"column_end":76}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":41479,"byte_end":41496,"line_start":62,"line_end":62,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":42553,"byte_end":42560,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"dccmvau","qualname":"<CBP>::dccmvau","value":"pub fn dccmvau(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" D-cache clean by MVA to PoU\n","sig":null,"attributes":[{"value":"/ D-cache clean by MVA to PoU","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":42488,"byte_end":42519,"line_start":79,"line_end":79,"column_start":5,"column_end":36}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":42524,"byte_end":42541,"line_start":80,"line_end":80,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":42724,"byte_end":42731,"line_start":89,"line_end":89,"column_start":12,"column_end":19},"name":"dccmvac","qualname":"<CBP>::dccmvac","value":"pub fn dccmvac(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" D-cache clean by MVA to PoC\n","sig":null,"attributes":[{"value":"/ D-cache clean by MVA to PoC","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":42659,"byte_end":42690,"line_start":87,"line_end":87,"column_start":5,"column_end":36}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":42695,"byte_end":42712,"line_start":88,"line_end":88,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":42976,"byte_end":42981,"line_start":99,"line_end":99,"column_start":12,"column_end":17},"name":"dccsw","qualname":"<CBP>::dccsw","value":"pub fn dccsw(&mut Self, u16, u16)","parent":null,"children":[],"decl_id":null,"docs":" D-cache clean by set-way","sig":null,"attributes":[{"value":"/ D-cache clean by set-way","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":42830,"byte_end":42858,"line_start":95,"line_end":95,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":42863,"byte_end":42866,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ `set` is masked to be between 0 and 3, and `way` between 0 and 511.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":42871,"byte_end":42942,"line_start":97,"line_end":97,"column_start":5,"column_end":76}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":42947,"byte_end":42964,"line_start":98,"line_end":98,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":43424,"byte_end":43432,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"dccimvac","qualname":"<CBP>::dccimvac","value":"pub fn dccimvac(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" D-cache clean and invalidate by MVA to PoC\n","sig":null,"attributes":[{"value":"/ D-cache clean and invalidate by MVA to PoC","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":43344,"byte_end":43390,"line_start":109,"line_end":109,"column_start":5,"column_end":51}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":43395,"byte_end":43412,"line_start":110,"line_end":110,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":43693,"byte_end":43699,"line_start":121,"line_end":121,"column_start":12,"column_end":18},"name":"dccisw","qualname":"<CBP>::dccisw","value":"pub fn dccisw(&mut Self, u16, u16)","parent":null,"children":[],"decl_id":null,"docs":" D-cache clean and invalidate by set-way","sig":null,"attributes":[{"value":"/ D-cache clean and invalidate by set-way","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":43532,"byte_end":43575,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":43580,"byte_end":43583,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ `set` is masked to be between 0 and 3, and `way` between 0 and 511.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":43588,"byte_end":43659,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":43664,"byte_end":43681,"line_start":120,"line_end":120,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":44132,"byte_end":44138,"line_start":133,"line_end":133,"column_start":12,"column_end":18},"name":"bpiall","qualname":"<CBP>::bpiall","value":"pub fn bpiall(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Branch predictor invalidate all\n","sig":null,"attributes":[{"value":"/ Branch predictor invalidate all","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":44063,"byte_end":44098,"line_start":131,"line_end":131,"column_start":5,"column_end":40}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":44103,"byte_end":44120,"line_start":132,"line_end":132,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cpuid","qualname":"::peripheral::cpuid","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":171},{"krate":0,"index":174},{"krate":0,"index":177},{"krate":0,"index":934},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":944},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":194}],"decl_id":null,"docs":" CPUID\n","sig":null,"attributes":[{"value":"/ CPUID","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":44222,"byte_end":44231,"line_start":1,"line_end":1,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":44400,"byte_end":44413,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::cpuid::RegisterBlock","value":"RegisterBlock { base, pfr, dfr, afr, mmfr, isar, clidr, ctr, ccsidr, csselr }","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193}],"decl_id":null,"docs":" Register block\n","sig":null,"attributes":[{"value":"/ Register block","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":44359,"byte_end":44377,"line_start":10,"line_end":10,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":44378,"byte_end":44388,"line_start":11,"line_end":11,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":44443,"byte_end":44447,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"name":"base","qualname":"::peripheral::cpuid::RegisterBlock::base","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" CPUID base\n","sig":null,"attributes":[{"value":"/ CPUID base","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":44420,"byte_end":44434,"line_start":13,"line_end":13,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":44581,"byte_end":44584,"line_start":20,"line_end":20,"column_start":9,"column_end":12},"name":"pfr","qualname":"::peripheral::cpuid::RegisterBlock::pfr","value":"[volatile_register::RO<u32>; 2]","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Processor Feature (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Processor Feature (not present on Cortex-M0 variants)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":44491,"byte_end":44548,"line_start":18,"line_end":18,"column_start":5,"column_end":62}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":44553,"byte_end":44572,"line_start":19,"line_end":19,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":44736,"byte_end":44739,"line_start":26,"line_end":26,"column_start":9,"column_end":12},"name":"dfr","qualname":"::peripheral::cpuid::RegisterBlock::dfr","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Debug Feature (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Debug Feature (not present on Cortex-M0 variants)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":44650,"byte_end":44703,"line_start":24,"line_end":24,"column_start":5,"column_end":58}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":44708,"byte_end":44727,"line_start":25,"line_end":25,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":44885,"byte_end":44888,"line_start":32,"line_end":32,"column_start":9,"column_end":12},"name":"afr","qualname":"::peripheral::cpuid::RegisterBlock::afr","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Auxiliary Feature (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Auxiliary Feature (not present on Cortex-M0 variants)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":44795,"byte_end":44852,"line_start":30,"line_end":30,"column_start":5,"column_end":62}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":44857,"byte_end":44876,"line_start":31,"line_end":31,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":45037,"byte_end":45041,"line_start":38,"line_end":38,"column_start":9,"column_end":13},"name":"mmfr","qualname":"::peripheral::cpuid::RegisterBlock::mmfr","value":"[volatile_register::RO<u32>; 4]","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Memory Model Feature (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Memory Model Feature (not present on Cortex-M0 variants)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":44944,"byte_end":45004,"line_start":36,"line_end":36,"column_start":5,"column_end":65}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":45009,"byte_end":45028,"line_start":37,"line_end":37,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":45205,"byte_end":45209,"line_start":44,"line_end":44,"column_start":9,"column_end":13},"name":"isar","qualname":"::peripheral::cpuid::RegisterBlock::isar","value":"[volatile_register::RO<u32>; 5]","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Instruction Set Attribute (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Instruction Set Attribute (not present on Cortex-M0 variants)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":45107,"byte_end":45172,"line_start":42,"line_end":42,"column_start":5,"column_end":70}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":45177,"byte_end":45196,"line_start":43,"line_end":43,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":45376,"byte_end":45381,"line_start":52,"line_end":52,"column_start":9,"column_end":14},"name":"clidr","qualname":"::peripheral::cpuid::RegisterBlock::clidr","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Cache Level ID (only present on Cortex-M7)\n","sig":null,"attributes":[{"value":"/ Cache Level ID (only present on Cortex-M7)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":45297,"byte_end":45343,"line_start":50,"line_end":50,"column_start":5,"column_end":51}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":45348,"byte_end":45367,"line_start":51,"line_end":51,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":45472,"byte_end":45475,"line_start":56,"line_end":56,"column_start":9,"column_end":12},"name":"ctr","qualname":"::peripheral::cpuid::RegisterBlock::ctr","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Cache Type (only present on Cortex-M7)\n","sig":null,"attributes":[{"value":"/ Cache Type (only present on Cortex-M7)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":45397,"byte_end":45439,"line_start":54,"line_end":54,"column_start":5,"column_end":47}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":45444,"byte_end":45463,"line_start":55,"line_end":55,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":45569,"byte_end":45575,"line_start":60,"line_end":60,"column_start":9,"column_end":15},"name":"ccsidr","qualname":"::peripheral::cpuid::RegisterBlock::ccsidr","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Cache Size ID (only present on Cortex-M7)\n","sig":null,"attributes":[{"value":"/ Cache Size ID (only present on Cortex-M7)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":45491,"byte_end":45536,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":45541,"byte_end":45560,"line_start":59,"line_end":59,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":45676,"byte_end":45682,"line_start":64,"line_end":64,"column_start":9,"column_end":15},"name":"csselr","qualname":"::peripheral::cpuid::RegisterBlock::csselr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Cache Size Selection (only present on Cortex-M7)\n","sig":null,"attributes":[{"value":"/ Cache Size Selection (only present on Cortex-M7)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":45591,"byte_end":45643,"line_start":62,"line_end":62,"column_start":5,"column_end":57}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":45648,"byte_end":45667,"line_start":63,"line_end":63,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":935},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":45877,"byte_end":45890,"line_start":72,"line_end":72,"column_start":5,"column_end":18},"name":"DataOrUnified","qualname":"::peripheral::cpuid::CsselrCacheType::DataOrUnified","value":"CsselrCacheType::DataOrUnified","parent":{"krate":0,"index":934},"children":[],"decl_id":null,"docs":" Select DCache or unified cache\n","sig":null,"attributes":[{"value":"/ Select DCache or unified cache","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":45838,"byte_end":45872,"line_start":71,"line_end":71,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":938},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":45922,"byte_end":45933,"line_start":74,"line_end":74,"column_start":5,"column_end":16},"name":"Instruction","qualname":"::peripheral::cpuid::CsselrCacheType::Instruction","value":"CsselrCacheType::Instruction","parent":{"krate":0,"index":934},"children":[],"decl_id":null,"docs":" Select ICache\n","sig":null,"attributes":[{"value":"/ Select ICache","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":45900,"byte_end":45917,"line_start":73,"line_end":73,"column_start":5,"column_end":22}}]},{"kind":"Enum","id":{"krate":0,"index":934},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":45816,"byte_end":45831,"line_start":70,"line_end":70,"column_start":10,"column_end":25},"name":"CsselrCacheType","qualname":"::peripheral::cpuid::CsselrCacheType","value":"pub enum CsselrCacheType { DataOrUnified = , Instruction = , }","parent":null,"children":[{"krate":0,"index":935},{"krate":0,"index":938}],"decl_id":null,"docs":" Type of cache to select on CSSELR writes.\n","sig":null,"attributes":[{"value":"/ Type of cache to select on CSSELR writes.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":45696,"byte_end":45741,"line_start":67,"line_end":67,"column_start":1,"column_end":46}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":45742,"byte_end":45761,"line_start":68,"line_end":68,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":46241,"byte_end":46253,"line_start":86,"line_end":86,"column_start":12,"column_end":24},"name":"select_cache","qualname":"<CPUID>::select_cache","value":"pub fn select_cache(&mut Self, u8, CsselrCacheType)","parent":null,"children":[],"decl_id":null,"docs":" Selects the current CCSIDR","sig":null,"attributes":[{"value":"/ Selects the current CCSIDR","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":45979,"byte_end":46009,"line_start":79,"line_end":79,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":46014,"byte_end":46017,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ * `level`: the required cache level minus 1, e.g. 0 for L1, 1 for L2","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":46022,"byte_end":46094,"line_start":81,"line_end":81,"column_start":5,"column_end":77}},{"value":"/ * `ind`: select instruction cache or data/unified cache","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":46099,"byte_end":46158,"line_start":82,"line_end":82,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":46163,"byte_end":46166,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ `level` is masked to be between 0 and 7.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":46171,"byte_end":46215,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":46220,"byte_end":46229,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":46826,"byte_end":46845,"line_start":102,"line_end":102,"column_start":12,"column_end":31},"name":"cache_num_sets_ways","qualname":"<CPUID>::cache_num_sets_ways","value":"pub fn cache_num_sets_ways(&mut Self, u8, CsselrCacheType) -> (u16, u16)","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of sets and ways in the selected cache\n","sig":null,"attributes":[{"value":"/ Returns the number of sets and ways in the selected cache","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":46739,"byte_end":46800,"line_start":100,"line_end":100,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":46805,"byte_end":46814,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":47718,"byte_end":47732,"line_start":122,"line_end":122,"column_start":12,"column_end":26},"name":"cache_dminline","qualname":"<CPUID>::cache_dminline","value":"pub fn cache_dminline() -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns log2 of the number of words in the smallest cache line of all the data cache and\n unified caches that are controlled by the processor.","sig":null,"attributes":[{"value":"/ Returns log2 of the number of words in the smallest cache line of all the data cache and","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":47465,"byte_end":47557,"line_start":117,"line_end":117,"column_start":5,"column_end":97}},{"value":"/ unified caches that are controlled by the processor.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":47562,"byte_end":47618,"line_start":118,"line_end":118,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":47623,"byte_end":47626,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This is the `DminLine` field of the CTR register.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":47631,"byte_end":47684,"line_start":120,"line_end":120,"column_start":5,"column_end":58}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":47689,"byte_end":47706,"line_start":121,"line_end":121,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":48213,"byte_end":48227,"line_start":134,"line_end":134,"column_start":12,"column_end":26},"name":"cache_iminline","qualname":"<CPUID>::cache_iminline","value":"pub fn cache_iminline() -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns log2 of the number of words in the smallest cache line of all the instruction\n caches that are controlled by the processor.","sig":null,"attributes":[{"value":"/ Returns log2 of the number of words in the smallest cache line of all the instruction","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":47971,"byte_end":48060,"line_start":129,"line_end":129,"column_start":5,"column_end":94}},{"value":"/ caches that are controlled by the processor.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":48065,"byte_end":48113,"line_start":130,"line_end":130,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":48118,"byte_end":48121,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This is the `IminLine` field of the CTR register.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":48126,"byte_end":48179,"line_start":132,"line_end":132,"column_start":5,"column_end":58}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":48184,"byte_end":48201,"line_start":133,"line_end":133,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dcb","qualname":"::peripheral::dcb","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":219},{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":231}],"decl_id":null,"docs":" Debug Control Block\n","sig":null,"attributes":[{"value":"/ Debug Control Block","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","byte_start":48463,"byte_end":48486,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","byte_start":48647,"byte_end":48660,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::dcb::RegisterBlock","value":"RegisterBlock { dhcsr, dcrsr, dcrdr, demcr }","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230}],"decl_id":null,"docs":" Register block\n","sig":null,"attributes":[{"value":"/ Register block","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","byte_start":48606,"byte_end":48624,"line_start":10,"line_end":10,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","byte_start":48625,"byte_end":48635,"line_start":11,"line_end":11,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","byte_start":48712,"byte_end":48717,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"dhcsr","qualname":"::peripheral::dcb::RegisterBlock::dhcsr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Debug Halting Control and Status\n","sig":null,"attributes":[{"value":"/ Debug Halting Control and Status","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","byte_start":48667,"byte_end":48703,"line_start":13,"line_end":13,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","byte_start":48773,"byte_end":48778,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"dcrsr","qualname":"::peripheral::dcb::RegisterBlock::dcrsr","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Debug Core Register Selector\n","sig":null,"attributes":[{"value":"/ Debug Core Register Selector","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","byte_start":48732,"byte_end":48764,"line_start":15,"line_end":15,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","byte_start":48830,"byte_end":48835,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"name":"dcrdr","qualname":"::peripheral::dcb::RegisterBlock::dcrdr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Debug Core Register Data\n","sig":null,"attributes":[{"value":"/ Debug Core Register Data","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","byte_start":48793,"byte_end":48821,"line_start":17,"line_end":17,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","byte_start":48898,"byte_end":48903,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"name":"demcr","qualname":"::peripheral::dcb::RegisterBlock::demcr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Debug Exception and Monitor Control\n","sig":null,"attributes":[{"value":"/ Debug Exception and Monitor Control","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","byte_start":48850,"byte_end":48889,"line_start":19,"line_end":19,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","byte_start":49170,"byte_end":49182,"line_start":29,"line_end":29,"column_start":12,"column_end":24},"name":"enable_trace","qualname":"<DCB>::enable_trace","value":"pub fn enable_trace(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Enables TRACE. This is for example required by the\n `peripheral::DWT` cycle counter to work properly.\n As by STM documentation, this flag is not reset on\n soft-reset, only on power reset.\n","sig":null,"attributes":[{"value":"/ Enables TRACE. This is for example required by the","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","byte_start":48932,"byte_end":48986,"line_start":24,"line_end":24,"column_start":5,"column_end":59}},{"value":"/ `peripheral::DWT` cycle counter to work properly.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","byte_start":48991,"byte_end":49044,"line_start":25,"line_end":25,"column_start":5,"column_end":58}},{"value":"/ As by STM documentation, this flag is not reset on","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","byte_start":49049,"byte_end":49103,"line_start":26,"line_end":26,"column_start":5,"column_end":59}},{"value":"/ soft-reset, only on power reset.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","byte_start":49108,"byte_end":49144,"line_start":27,"line_end":27,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","byte_start":49149,"byte_end":49158,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","byte_start":49410,"byte_end":49423,"line_start":38,"line_end":38,"column_start":12,"column_end":25},"name":"disable_trace","qualname":"<DCB>::disable_trace","value":"pub fn disable_trace(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disables TRACE. See `DCB::enable_trace()` for more details\n","sig":null,"attributes":[{"value":"/ Disables TRACE. See `DCB::enable_trace()` for more details","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","byte_start":49322,"byte_end":49384,"line_start":36,"line_end":36,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","byte_start":49389,"byte_end":49398,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","byte_start":50184,"byte_end":50204,"line_start":53,"line_end":53,"column_start":12,"column_end":32},"name":"is_debugger_attached","qualname":"<DCB>::is_debugger_attached","value":"pub fn is_debugger_attached() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is there a debugger attached? (see note)","sig":null,"attributes":[{"value":"/ Is there a debugger attached? (see note)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","byte_start":49566,"byte_end":49610,"line_start":45,"line_end":45,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","byte_start":49615,"byte_end":49618,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Note: This function is [reported not to","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","byte_start":49623,"byte_end":49666,"line_start":47,"line_end":47,"column_start":5,"column_end":48}},{"value":"/ work](http://web.archive.org/web/20180821191012/https://community.nxp.com/thread/424925#comment-782843)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","byte_start":49671,"byte_end":49778,"line_start":48,"line_end":48,"column_start":5,"column_end":112}},{"value":"/ on Cortex-M0 devices. Per the ARM v6-M Architecture Reference Manual, \"Access to the DHCSR","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","byte_start":49783,"byte_end":49877,"line_start":49,"line_end":49,"column_start":5,"column_end":99}},{"value":"/ from software running on the processor is IMPLEMENTATION DEFINED\". Indeed, from the","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","byte_start":49882,"byte_end":49969,"line_start":50,"line_end":50,"column_start":5,"column_end":92}},{"value":"/ [Cortex-M0+ r0p1 Technical Reference Manual](http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.ddi0484c/BABJHEIG.html), \"Note Software cannot access the debug registers.\"","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","byte_start":49974,"byte_end":50158,"line_start":51,"line_end":51,"column_start":5,"column_end":189}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","byte_start":50163,"byte_end":50172,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dwt","qualname":"::peripheral::dwt","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":266},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277}],"decl_id":null,"docs":" Data Watchpoint and Trace unit\n","sig":null,"attributes":[{"value":"/ Data Watchpoint and Trace unit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":50430,"byte_end":50464,"line_start":1,"line_end":1,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":50617,"byte_end":50630,"line_start":11,"line_end":11,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::dwt::RegisterBlock","value":"RegisterBlock { ctrl, cyccnt, cpicnt, exccnt, sleepcnt, lsucnt, foldcnt, pcsr, c, lar, lsr }","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":265}],"decl_id":null,"docs":" Register block\n","sig":null,"attributes":[{"value":"/ Register block","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":50576,"byte_end":50594,"line_start":9,"line_end":9,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":50595,"byte_end":50605,"line_start":10,"line_end":10,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":50657,"byte_end":50661,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"ctrl","qualname":"::peripheral::dwt::RegisterBlock::ctrl","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":" Control\n","sig":null,"attributes":[{"value":"/ Control","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":50637,"byte_end":50648,"line_start":12,"line_end":12,"column_start":5,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":50724,"byte_end":50730,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"name":"cyccnt","qualname":"::peripheral::dwt::RegisterBlock::cyccnt","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":" Cycle Count\n","sig":null,"attributes":[{"value":"/ Cycle Count","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":50676,"byte_end":50691,"line_start":14,"line_end":14,"column_start":5,"column_end":20}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":50696,"byte_end":50715,"line_start":15,"line_end":15,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":50791,"byte_end":50797,"line_start":19,"line_end":19,"column_start":9,"column_end":15},"name":"cpicnt","qualname":"::peripheral::dwt::RegisterBlock::cpicnt","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":" CPI Count\n","sig":null,"attributes":[{"value":"/ CPI Count","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":50745,"byte_end":50758,"line_start":17,"line_end":17,"column_start":5,"column_end":18}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":50763,"byte_end":50782,"line_start":18,"line_end":18,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":50873,"byte_end":50879,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"name":"exccnt","qualname":"::peripheral::dwt::RegisterBlock::exccnt","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":" Exception Overhead Count\n","sig":null,"attributes":[{"value":"/ Exception Overhead Count","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":50812,"byte_end":50840,"line_start":20,"line_end":20,"column_start":5,"column_end":33}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":50845,"byte_end":50864,"line_start":21,"line_end":21,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":50942,"byte_end":50950,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"name":"sleepcnt","qualname":"::peripheral::dwt::RegisterBlock::sleepcnt","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":" Sleep Count\n","sig":null,"attributes":[{"value":"/ Sleep Count","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":50894,"byte_end":50909,"line_start":23,"line_end":23,"column_start":5,"column_end":20}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":50914,"byte_end":50933,"line_start":24,"line_end":24,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":51011,"byte_end":51017,"line_start":28,"line_end":28,"column_start":9,"column_end":15},"name":"lsucnt","qualname":"::peripheral::dwt::RegisterBlock::lsucnt","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":" LSU Count\n","sig":null,"attributes":[{"value":"/ LSU Count","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":50965,"byte_end":50978,"line_start":26,"line_end":26,"column_start":5,"column_end":18}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":50983,"byte_end":51002,"line_start":27,"line_end":27,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":51093,"byte_end":51100,"line_start":31,"line_end":31,"column_start":9,"column_end":16},"name":"foldcnt","qualname":"::peripheral::dwt::RegisterBlock::foldcnt","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":" Folded-instruction Count\n","sig":null,"attributes":[{"value":"/ Folded-instruction Count","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":51032,"byte_end":51060,"line_start":29,"line_end":29,"column_start":5,"column_end":33}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":51065,"byte_end":51084,"line_start":30,"line_end":30,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":51241,"byte_end":51245,"line_start":36,"line_end":36,"column_start":9,"column_end":13},"name":"pcsr","qualname":"::peripheral::dwt::RegisterBlock::pcsr","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":" Program Counter Sample\n","sig":null,"attributes":[{"value":"/ Program Counter Sample","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":51206,"byte_end":51232,"line_start":35,"line_end":35,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":51375,"byte_end":51376,"line_start":42,"line_end":42,"column_start":9,"column_end":10},"name":"c","qualname":"::peripheral::dwt::RegisterBlock::c","value":"[peripheral::dwt::Comparator; 16]","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":" Comparators\n","sig":null,"attributes":[{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":51327,"byte_end":51346,"line_start":40,"line_end":40,"column_start":5,"column_end":24}},{"value":"/ Comparators","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":51351,"byte_end":51366,"line_start":41,"line_end":41,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":51498,"byte_end":51501,"line_start":47,"line_end":47,"column_start":9,"column_end":12},"name":"lar","qualname":"::peripheral::dwt::RegisterBlock::lar","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":" Lock Access\n","sig":null,"attributes":[{"value":"/ Lock Access","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":51450,"byte_end":51465,"line_start":45,"line_end":45,"column_start":5,"column_end":20}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":51470,"byte_end":51489,"line_start":46,"line_end":46,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":51564,"byte_end":51567,"line_start":50,"line_end":50,"column_start":9,"column_end":12},"name":"lsr","qualname":"::peripheral::dwt::RegisterBlock::lsr","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":" Lock Status\n","sig":null,"attributes":[{"value":"/ Lock Status","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":51516,"byte_end":51531,"line_start":48,"line_end":48,"column_start":5,"column_end":20}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":51536,"byte_end":51555,"line_start":49,"line_end":49,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":51618,"byte_end":51628,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"Comparator","qualname":"::peripheral::dwt::Comparator","value":"Comparator { comp, mask, function }","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270}],"decl_id":null,"docs":" Comparator\n","sig":null,"attributes":[{"value":"/ Comparator","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":51581,"byte_end":51595,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":51596,"byte_end":51606,"line_start":54,"line_end":54,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":51658,"byte_end":51662,"line_start":57,"line_end":57,"column_start":9,"column_end":13},"name":"comp","qualname":"::peripheral::dwt::Comparator::comp","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":266},"children":[],"decl_id":null,"docs":" Comparator\n","sig":null,"attributes":[{"value":"/ Comparator","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":51635,"byte_end":51649,"line_start":56,"line_end":56,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":51705,"byte_end":51709,"line_start":59,"line_end":59,"column_start":9,"column_end":13},"name":"mask","qualname":"::peripheral::dwt::Comparator::mask","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":266},"children":[],"decl_id":null,"docs":" Comparator Mask\n","sig":null,"attributes":[{"value":"/ Comparator Mask","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":51677,"byte_end":51696,"line_start":58,"line_end":58,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":51756,"byte_end":51764,"line_start":61,"line_end":61,"column_start":9,"column_end":17},"name":"function","qualname":"::peripheral::dwt::Comparator::function","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":266},"children":[],"decl_id":null,"docs":" Comparator Function\n","sig":null,"attributes":[{"value":"/ Comparator Function","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":51724,"byte_end":51747,"line_start":60,"line_end":60,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":52157,"byte_end":52165,"line_start":78,"line_end":78,"column_start":12,"column_end":20},"name":"num_comp","qualname":"<DWT>::num_comp","value":"pub fn num_comp() -> u8","parent":null,"children":[],"decl_id":null,"docs":" Number of comparators implemented","sig":null,"attributes":[{"value":"/ Number of comparators implemented","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":52029,"byte_end":52066,"line_start":74,"line_end":74,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":52071,"byte_end":52074,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ A value of zero indicates no comparator support.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":52079,"byte_end":52131,"line_start":76,"line_end":76,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":52136,"byte_end":52145,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":52450,"byte_end":52469,"line_start":86,"line_end":86,"column_start":12,"column_end":31},"name":"has_exception_trace","qualname":"<DWT>::has_exception_trace","value":"pub fn has_exception_trace() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the the implementation supports sampling and exception tracing\n","sig":null,"attributes":[{"value":"/ Returns `true` if the the implementation supports sampling and exception tracing","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":52316,"byte_end":52400,"line_start":83,"line_end":83,"column_start":5,"column_end":89}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":52405,"byte_end":52424,"line_start":84,"line_end":84,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":52429,"byte_end":52438,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":52734,"byte_end":52752,"line_start":94,"line_end":94,"column_start":12,"column_end":30},"name":"has_external_match","qualname":"<DWT>::has_external_match","value":"pub fn has_external_match() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the implementation includes external match signals\n","sig":null,"attributes":[{"value":"/ Returns `true` if the implementation includes external match signals","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":52612,"byte_end":52684,"line_start":91,"line_end":91,"column_start":5,"column_end":77}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":52689,"byte_end":52708,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":52713,"byte_end":52722,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":53011,"byte_end":53028,"line_start":102,"line_end":102,"column_start":12,"column_end":29},"name":"has_cycle_counter","qualname":"<DWT>::has_cycle_counter","value":"pub fn has_cycle_counter() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the implementation supports a cycle counter\n","sig":null,"attributes":[{"value":"/ Returns `true` if the implementation supports a cycle counter","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":52896,"byte_end":52961,"line_start":99,"line_end":99,"column_start":5,"column_end":70}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":52966,"byte_end":52985,"line_start":100,"line_end":100,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":52990,"byte_end":52999,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":53284,"byte_end":53305,"line_start":110,"line_end":110,"column_start":12,"column_end":33},"name":"has_profiling_counter","qualname":"<DWT>::has_profiling_counter","value":"pub fn has_profiling_counter() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the implementation the profiling counters\n","sig":null,"attributes":[{"value":"/ Returns `true` if the implementation the profiling counters","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":53171,"byte_end":53234,"line_start":107,"line_end":107,"column_start":5,"column_end":68}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":53239,"byte_end":53258,"line_start":108,"line_end":108,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":53263,"byte_end":53272,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":53868,"byte_end":53888,"line_start":125,"line_end":125,"column_start":12,"column_end":32},"name":"enable_cycle_counter","qualname":"<DWT>::enable_cycle_counter","value":"pub fn enable_cycle_counter(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Enables the cycle counter","sig":null,"attributes":[{"value":"/ Enables the cycle counter","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":53448,"byte_end":53477,"line_start":115,"line_end":115,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":53482,"byte_end":53485,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ The global trace enable ([`DCB::enable_trace`]) should be set before","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":53490,"byte_end":53562,"line_start":117,"line_end":117,"column_start":5,"column_end":77}},{"value":"/ enabling the cycle counter, the processor may ignore writes to the","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":53567,"byte_end":53637,"line_start":118,"line_end":118,"column_start":5,"column_end":75}},{"value":"/ cycle counter enable if the global trace is disabled","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":53642,"byte_end":53698,"line_start":119,"line_end":119,"column_start":5,"column_end":61}},{"value":"/ (implementation defined behaviour).","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":53703,"byte_end":53742,"line_start":120,"line_end":120,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":53747,"byte_end":53750,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ [`DCB::enable_trace`]: crate::peripheral::DCB::enable_trace","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":53755,"byte_end":53818,"line_start":122,"line_end":122,"column_start":5,"column_end":68}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":53823,"byte_end":53842,"line_start":123,"line_end":123,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":53847,"byte_end":53856,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":54048,"byte_end":54069,"line_start":132,"line_end":132,"column_start":12,"column_end":33},"name":"disable_cycle_counter","qualname":"<DWT>::disable_cycle_counter","value":"pub fn disable_cycle_counter(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disables the cycle counter\n","sig":null,"attributes":[{"value":"/ Disables the cycle counter","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":53968,"byte_end":53998,"line_start":129,"line_end":129,"column_start":5,"column_end":35}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":54003,"byte_end":54022,"line_start":130,"line_end":130,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":54027,"byte_end":54036,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":54250,"byte_end":54271,"line_start":139,"line_end":139,"column_start":12,"column_end":33},"name":"cycle_counter_enabled","qualname":"<DWT>::cycle_counter_enabled","value":"pub fn cycle_counter_enabled() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the cycle counter is enabled\n","sig":null,"attributes":[{"value":"/ Returns `true` if the cycle counter is enabled","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":54150,"byte_end":54200,"line_start":136,"line_end":136,"column_start":5,"column_end":55}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":54205,"byte_end":54224,"line_start":137,"line_end":137,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":54229,"byte_end":54238,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":54629,"byte_end":54644,"line_start":151,"line_end":151,"column_start":12,"column_end":27},"name":"get_cycle_count","qualname":"<DWT>::get_cycle_count","value":"pub fn get_cycle_count() -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the current clock cycle count\n","sig":null,"attributes":[{"value":"/ Returns the current clock cycle count","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":54415,"byte_end":54456,"line_start":144,"line_end":144,"column_start":5,"column_end":46}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":54461,"byte_end":54480,"line_start":145,"line_end":145,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":54485,"byte_end":54494,"line_start":146,"line_end":146,"column_start":5,"column_end":14}},{"value":"deprecated(since = \"0.7.4\", note =\n\"Use `cycle_count` which follows the C-GETTER convention\")","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":54499,"byte_end":54617,"line_start":147,"line_end":150,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":54786,"byte_end":54797,"line_start":158,"line_end":158,"column_start":12,"column_end":23},"name":"cycle_count","qualname":"<DWT>::cycle_count","value":"pub fn cycle_count() -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the current clock cycle count\n","sig":null,"attributes":[{"value":"/ Returns the current clock cycle count","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":54695,"byte_end":54736,"line_start":155,"line_end":155,"column_start":5,"column_end":46}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":54741,"byte_end":54760,"line_start":156,"line_end":156,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":54765,"byte_end":54774,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":54998,"byte_end":55013,"line_start":166,"line_end":166,"column_start":12,"column_end":27},"name":"set_cycle_count","qualname":"<DWT>::set_cycle_count","value":"pub fn set_cycle_count(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Set the cycle count\n","sig":null,"attributes":[{"value":"/ Set the cycle count","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":54925,"byte_end":54948,"line_start":163,"line_end":163,"column_start":5,"column_end":28}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":54953,"byte_end":54972,"line_start":164,"line_end":164,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":54977,"byte_end":54986,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":55275,"byte_end":55281,"line_start":175,"line_end":175,"column_start":12,"column_end":18},"name":"unlock","qualname":"<DWT>::unlock","value":"pub fn unlock()","parent":null,"children":[],"decl_id":null,"docs":" Removes the software lock on the DWT","sig":null,"attributes":[{"value":"/ Removes the software lock on the DWT","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":55094,"byte_end":55134,"line_start":170,"line_end":170,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":55139,"byte_end":55142,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Some devices, like the STM32F7, software lock the DWT after a power cycle.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":55147,"byte_end":55225,"line_start":172,"line_end":172,"column_start":5,"column_end":83}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":55230,"byte_end":55249,"line_start":173,"line_end":173,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":55254,"byte_end":55263,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":55728,"byte_end":55737,"line_start":189,"line_end":189,"column_start":12,"column_end":21},"name":"cpi_count","qualname":"<DWT>::cpi_count","value":"pub fn cpi_count() -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the CPI count","sig":null,"attributes":[{"value":"/ Get the CPI count","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":55427,"byte_end":55448,"line_start":180,"line_end":180,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":55453,"byte_end":55456,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Counts additional cycles required to execute multi-cycle instructions,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":55461,"byte_end":55535,"line_start":182,"line_end":182,"column_start":5,"column_end":79}},{"value":"/ except those recorded by [`lsu_count`], and counts any instruction fetch","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":55540,"byte_end":55616,"line_start":183,"line_end":183,"column_start":5,"column_end":81}},{"value":"/ stalls.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":55621,"byte_end":55632,"line_start":184,"line_end":184,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":55637,"byte_end":55640,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`lsu_count`]: DWT::lsu_count","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":55645,"byte_end":55678,"line_start":186,"line_end":186,"column_start":5,"column_end":38}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":55683,"byte_end":55702,"line_start":187,"line_end":187,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":55707,"byte_end":55716,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":55941,"byte_end":55954,"line_start":197,"line_end":197,"column_start":12,"column_end":25},"name":"set_cpi_count","qualname":"<DWT>::set_cpi_count","value":"pub fn set_cpi_count(&mut Self, u8)","parent":null,"children":[],"decl_id":null,"docs":" Set the CPI count\n","sig":null,"attributes":[{"value":"/ Set the CPI count","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":55870,"byte_end":55891,"line_start":194,"line_end":194,"column_start":5,"column_end":26}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":55896,"byte_end":55915,"line_start":195,"line_end":195,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":55920,"byte_end":55929,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":56145,"byte_end":56160,"line_start":204,"line_end":204,"column_start":12,"column_end":27},"name":"exception_count","qualname":"<DWT>::exception_count","value":"pub fn exception_count() -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the total cycles spent in exception processing\n","sig":null,"attributes":[{"value":"/ Get the total cycles spent in exception processing","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":56041,"byte_end":56095,"line_start":201,"line_end":201,"column_start":5,"column_end":59}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":56100,"byte_end":56119,"line_start":202,"line_end":202,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":56124,"byte_end":56133,"line_start":203,"line_end":203,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":56370,"byte_end":56389,"line_start":212,"line_end":212,"column_start":12,"column_end":31},"name":"set_exception_count","qualname":"<DWT>::set_exception_count","value":"pub fn set_exception_count(&mut Self, u8)","parent":null,"children":[],"decl_id":null,"docs":" Set the exception count\n","sig":null,"attributes":[{"value":"/ Set the exception count","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":56293,"byte_end":56320,"line_start":209,"line_end":209,"column_start":5,"column_end":32}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":56325,"byte_end":56344,"line_start":210,"line_end":210,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":56349,"byte_end":56358,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":56959,"byte_end":56970,"line_start":225,"line_end":225,"column_start":12,"column_end":23},"name":"sleep_count","qualname":"<DWT>::sleep_count","value":"pub fn sleep_count() -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the total number of cycles that the processor is sleeping","sig":null,"attributes":[{"value":"/ Get the total number of cycles that the processor is sleeping","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":56476,"byte_end":56541,"line_start":216,"line_end":216,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":56546,"byte_end":56549,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ ARM recommends that this counter counts all cycles when the processor is sleeping,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":56554,"byte_end":56640,"line_start":218,"line_end":218,"column_start":5,"column_end":91}},{"value":"/ regardless of whether a WFI or WFE instruction, or the sleep-on-exit functionality,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":56645,"byte_end":56732,"line_start":219,"line_end":219,"column_start":5,"column_end":92}},{"value":"/ caused the entry to sleep mode.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":56737,"byte_end":56772,"line_start":220,"line_end":220,"column_start":5,"column_end":40}},{"value":"/ However, all sleep features are implementation defined and therefore when","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":56777,"byte_end":56854,"line_start":221,"line_end":221,"column_start":5,"column_end":82}},{"value":"/ this counter counts is implementation defined.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":56859,"byte_end":56909,"line_start":222,"line_end":222,"column_start":5,"column_end":55}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":56914,"byte_end":56933,"line_start":223,"line_end":223,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":56938,"byte_end":56947,"line_start":224,"line_end":224,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":57178,"byte_end":57193,"line_start":233,"line_end":233,"column_start":12,"column_end":27},"name":"set_sleep_count","qualname":"<DWT>::set_sleep_count","value":"pub fn set_sleep_count(&mut Self, u8)","parent":null,"children":[],"decl_id":null,"docs":" Set the sleep count\n","sig":null,"attributes":[{"value":"/ Set the sleep count","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":57105,"byte_end":57128,"line_start":230,"line_end":230,"column_start":5,"column_end":28}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":57133,"byte_end":57152,"line_start":231,"line_end":231,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":57157,"byte_end":57166,"line_start":232,"line_end":232,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":57412,"byte_end":57421,"line_start":240,"line_end":240,"column_start":12,"column_end":21},"name":"lsu_count","qualname":"<DWT>::lsu_count","value":"pub fn lsu_count() -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the additional cycles required to execute all load or store instructions\n","sig":null,"attributes":[{"value":"/ Get the additional cycles required to execute all load or store instructions","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":57282,"byte_end":57362,"line_start":237,"line_end":237,"column_start":5,"column_end":85}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":57367,"byte_end":57386,"line_start":238,"line_end":238,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":57391,"byte_end":57400,"line_start":239,"line_end":239,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":57625,"byte_end":57638,"line_start":248,"line_end":248,"column_start":12,"column_end":25},"name":"set_lsu_count","qualname":"<DWT>::set_lsu_count","value":"pub fn set_lsu_count(&mut Self, u8)","parent":null,"children":[],"decl_id":null,"docs":" Set the lsu count\n","sig":null,"attributes":[{"value":"/ Set the lsu count","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":57554,"byte_end":57575,"line_start":245,"line_end":245,"column_start":5,"column_end":26}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":57580,"byte_end":57599,"line_start":246,"line_end":246,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":57604,"byte_end":57613,"line_start":247,"line_end":247,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":57879,"byte_end":57889,"line_start":257,"line_end":257,"column_start":12,"column_end":22},"name":"fold_count","qualname":"<DWT>::fold_count","value":"pub fn fold_count() -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the folded instruction count","sig":null,"attributes":[{"value":"/ Get the folded instruction count","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":57725,"byte_end":57761,"line_start":252,"line_end":252,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":57766,"byte_end":57769,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ Increments on each instruction that takes 0 cycles.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":57774,"byte_end":57829,"line_start":254,"line_end":254,"column_start":5,"column_end":60}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":57834,"byte_end":57853,"line_start":255,"line_end":255,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":57858,"byte_end":57867,"line_start":256,"line_end":256,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":58109,"byte_end":58123,"line_start":265,"line_end":265,"column_start":12,"column_end":26},"name":"set_fold_count","qualname":"<DWT>::set_fold_count","value":"pub fn set_fold_count(&mut Self, u8)","parent":null,"children":[],"decl_id":null,"docs":" Set the folded instruction count\n","sig":null,"attributes":[{"value":"/ Set the folded instruction count","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":58023,"byte_end":58059,"line_start":262,"line_end":262,"column_start":5,"column_end":41}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":58064,"byte_end":58083,"line_start":263,"line_end":263,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":58088,"byte_end":58097,"line_start":264,"line_end":264,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpb.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fpb","qualname":"::peripheral::fpb","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpb.rs","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":307},{"krate":0,"index":310},{"krate":0,"index":313}],"decl_id":null,"docs":" Flash Patch and Breakpoint unit","sig":null,"attributes":[{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":26278,"byte_end":26297,"line_start":72,"line_end":72,"column_start":1,"column_end":20}},{"value":"/ Flash Patch and Breakpoint unit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpb.rs","byte_start":58209,"byte_end":58244,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpb.rs","byte_start":58245,"byte_end":58248,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ *NOTE* Not available on Armv6-M.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpb.rs","byte_start":58249,"byte_end":58285,"line_start":3,"line_end":3,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":313},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpb.rs","byte_start":58366,"byte_end":58379,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::fpb::RegisterBlock","value":"RegisterBlock { ctrl, remap, comp, lar, lsr }","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":321}],"decl_id":null,"docs":" Register block\n","sig":null,"attributes":[{"value":"/ Register block","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpb.rs","byte_start":58325,"byte_end":58343,"line_start":7,"line_end":7,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpb.rs","byte_start":58344,"byte_end":58354,"line_start":8,"line_end":8,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":314},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpb.rs","byte_start":58406,"byte_end":58410,"line_start":11,"line_end":11,"column_start":9,"column_end":13},"name":"ctrl","qualname":"::peripheral::fpb::RegisterBlock::ctrl","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Control\n","sig":null,"attributes":[{"value":"/ Control","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpb.rs","byte_start":58386,"byte_end":58397,"line_start":10,"line_end":10,"column_start":5,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":315},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpb.rs","byte_start":58443,"byte_end":58448,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"remap","qualname":"::peripheral::fpb::RegisterBlock::remap","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Remap\n","sig":null,"attributes":[{"value":"/ Remap","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpb.rs","byte_start":58425,"byte_end":58434,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpb.rs","byte_start":58486,"byte_end":58490,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"comp","qualname":"::peripheral::fpb::RegisterBlock::comp","value":"[volatile_register::RW<u32>; 127]","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Comparator\n","sig":null,"attributes":[{"value":"/ Comparator","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpb.rs","byte_start":58463,"byte_end":58477,"line_start":14,"line_end":14,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":320},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpb.rs","byte_start":58562,"byte_end":58565,"line_start":18,"line_end":18,"column_start":9,"column_end":12},"name":"lar","qualname":"::peripheral::fpb::RegisterBlock::lar","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Lock Access\n","sig":null,"attributes":[{"value":"/ Lock Access","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpb.rs","byte_start":58538,"byte_end":58553,"line_start":17,"line_end":17,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":321},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpb.rs","byte_start":58604,"byte_end":58607,"line_start":20,"line_end":20,"column_start":9,"column_end":12},"name":"lsr","qualname":"::peripheral::fpb::RegisterBlock::lsr","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":313},"children":[],"decl_id":null,"docs":" Lock Status\n","sig":null,"attributes":[{"value":"/ Lock Status","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpb.rs","byte_start":58580,"byte_end":58595,"line_start":19,"line_end":19,"column_start":5,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":322},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpu.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fpu","qualname":"::peripheral::fpu","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpu.rs","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":327},{"krate":0,"index":330}],"decl_id":null,"docs":" Floating Point Unit","sig":null,"attributes":[{"value":"cfg(any(has_fpu, native))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":26357,"byte_end":26385,"line_start":75,"line_end":75,"column_start":1,"column_end":29}},{"value":"/ Floating Point Unit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpu.rs","byte_start":58621,"byte_end":58644,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpu.rs","byte_start":58645,"byte_end":58648,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ *NOTE* Available only on targets with a Floating Point Unit (FPU) extension.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpu.rs","byte_start":58649,"byte_end":58729,"line_start":3,"line_end":3,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpu.rs","byte_start":58806,"byte_end":58819,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::fpu::RegisterBlock","value":"RegisterBlock { fpccr, fpcar, fpdscr, mvfr }","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335}],"decl_id":null,"docs":" Register block\n","sig":null,"attributes":[{"value":"/ Register block","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpu.rs","byte_start":58765,"byte_end":58783,"line_start":7,"line_end":7,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpu.rs","byte_start":58784,"byte_end":58794,"line_start":8,"line_end":8,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpu.rs","byte_start":58888,"byte_end":58893,"line_start":12,"line_end":12,"column_start":9,"column_end":14},"name":"fpccr","qualname":"::peripheral::fpu::RegisterBlock::fpccr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Floating Point Context Control\n","sig":null,"attributes":[{"value":"/ Floating Point Context Control","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpu.rs","byte_start":58845,"byte_end":58879,"line_start":11,"line_end":11,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":333},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpu.rs","byte_start":58951,"byte_end":58956,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"fpcar","qualname":"::peripheral::fpu::RegisterBlock::fpcar","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Floating Point Context Address\n","sig":null,"attributes":[{"value":"/ Floating Point Context Address","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpu.rs","byte_start":58908,"byte_end":58942,"line_start":13,"line_end":13,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpu.rs","byte_start":59021,"byte_end":59027,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"name":"fpdscr","qualname":"::peripheral::fpu::RegisterBlock::fpdscr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Floating Point Default Status Control\n","sig":null,"attributes":[{"value":"/ Floating Point Default Status Control","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpu.rs","byte_start":58971,"byte_end":59012,"line_start":15,"line_end":15,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpu.rs","byte_start":59075,"byte_end":59079,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"name":"mvfr","qualname":"::peripheral::fpu::RegisterBlock::mvfr","value":"[volatile_register::RO<u32>; 3]","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Media and FP Feature\n","sig":null,"attributes":[{"value":"/ Media and FP Feature","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\fpu.rs","byte_start":59042,"byte_end":59066,"line_start":17,"line_end":17,"column_start":5,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":337},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\icb.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"icb","qualname":"::peripheral::icb","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\icb.rs","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":341},{"krate":0,"index":344}],"decl_id":null,"docs":" Implementation Control Block\n","sig":null,"attributes":[{"value":"/ Implementation Control Block","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\icb.rs","byte_start":59098,"byte_end":59130,"line_start":1,"line_end":1,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\icb.rs","byte_start":59264,"byte_end":59277,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::icb::RegisterBlock","value":"RegisterBlock { ictr, actlr }","parent":null,"children":[{"krate":0,"index":345},{"krate":0,"index":346}],"decl_id":null,"docs":" Register block\n","sig":null,"attributes":[{"value":"/ Register block","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\icb.rs","byte_start":59223,"byte_end":59241,"line_start":7,"line_end":7,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\icb.rs","byte_start":59242,"byte_end":59252,"line_start":8,"line_end":8,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\icb.rs","byte_start":59552,"byte_end":59556,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"name":"ictr","qualname":"::peripheral::icb::RegisterBlock::ictr","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":344},"children":[],"decl_id":null,"docs":" Interrupt Controller Type Register","sig":null,"attributes":[{"value":"/ Interrupt Controller Type Register","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\icb.rs","byte_start":59284,"byte_end":59322,"line_start":10,"line_end":10,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\icb.rs","byte_start":59327,"byte_end":59330,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ The bottom four bits of this register give the number of implemented","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\icb.rs","byte_start":59335,"byte_end":59407,"line_start":12,"line_end":12,"column_start":5,"column_end":77}},{"value":"/ interrupt lines, divided by 32. So a value of `0b0010` indicates 64","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\icb.rs","byte_start":59412,"byte_end":59483,"line_start":13,"line_end":13,"column_start":5,"column_end":76}},{"value":"/ interrupts.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\icb.rs","byte_start":59488,"byte_end":59503,"line_start":14,"line_end":14,"column_start":5,"column_end":20}},{"value":"cfg(any(armv7m, armv8m, native))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\icb.rs","byte_start":59508,"byte_end":59543,"line_start":15,"line_end":15,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":346},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\icb.rs","byte_start":59943,"byte_end":59948,"line_start":27,"line_end":27,"column_start":9,"column_end":14},"name":"actlr","qualname":"::peripheral::icb::RegisterBlock::actlr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":344},"children":[],"decl_id":null,"docs":" Auxiliary Control Register","sig":null,"attributes":[{"value":"/ Auxiliary Control Register","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\icb.rs","byte_start":59752,"byte_end":59782,"line_start":23,"line_end":23,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\icb.rs","byte_start":59787,"byte_end":59790,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ This register is entirely implementation defined -- the standard gives","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\icb.rs","byte_start":59795,"byte_end":59869,"line_start":25,"line_end":25,"column_start":5,"column_end":79}},{"value":"/ it an address, but does not define its role or contents.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\icb.rs","byte_start":59874,"byte_end":59934,"line_start":26,"line_end":26,"column_start":5,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":347},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"itm","qualname":"::peripheral::itm","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":364},{"krate":0,"index":381},{"krate":0,"index":383}],"decl_id":null,"docs":" Instrumentation Trace Macrocell","sig":null,"attributes":[{"value":"cfg(all(not(armv6m), not(armv8m_base)))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":26412,"byte_end":26454,"line_start":78,"line_end":78,"column_start":1,"column_end":43}},{"value":"/ Instrumentation Trace Macrocell","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":60049,"byte_end":60084,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":60085,"byte_end":60088,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ *NOTE* Not available on Armv6-M and Armv8-M Baseline.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":60089,"byte_end":60146,"line_start":3,"line_end":3,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":60271,"byte_end":60284,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::itm::RegisterBlock","value":"RegisterBlock { stim, ter, tpr, tcr, lar, lsr }","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":369},{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":379},{"krate":0,"index":380}],"decl_id":null,"docs":" Register block\n","sig":null,"attributes":[{"value":"/ Register block","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":60230,"byte_end":60248,"line_start":10,"line_end":10,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":60249,"byte_end":60259,"line_start":11,"line_end":11,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":60317,"byte_end":60321,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"name":"stim","qualname":"::peripheral::itm::RegisterBlock::stim","value":"[peripheral::itm::Stim; 256]","parent":{"krate":0,"index":364},"children":[],"decl_id":null,"docs":" Stimulus Port\n","sig":null,"attributes":[{"value":"/ Stimulus Port","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":60291,"byte_end":60308,"line_start":13,"line_end":13,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":60392,"byte_end":60395,"line_start":17,"line_end":17,"column_start":9,"column_end":12},"name":"ter","qualname":"::peripheral::itm::RegisterBlock::ter","value":"[volatile_register::RW<u32>; 8]","parent":{"krate":0,"index":364},"children":[],"decl_id":null,"docs":" Trace Enable\n","sig":null,"attributes":[{"value":"/ Trace Enable","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":60367,"byte_end":60383,"line_start":16,"line_end":16,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":60468,"byte_end":60471,"line_start":20,"line_end":20,"column_start":9,"column_end":12},"name":"tpr","qualname":"::peripheral::itm::RegisterBlock::tpr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":364},"children":[],"decl_id":null,"docs":" Trace Privilege\n","sig":null,"attributes":[{"value":"/ Trace Privilege","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":60440,"byte_end":60459,"line_start":19,"line_end":19,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":376},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":60538,"byte_end":60541,"line_start":23,"line_end":23,"column_start":9,"column_end":12},"name":"tcr","qualname":"::peripheral::itm::RegisterBlock::tcr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":364},"children":[],"decl_id":null,"docs":" Trace Control\n","sig":null,"attributes":[{"value":"/ Trace Control","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":60512,"byte_end":60529,"line_start":22,"line_end":22,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":60606,"byte_end":60609,"line_start":26,"line_end":26,"column_start":9,"column_end":12},"name":"lar","qualname":"::peripheral::itm::RegisterBlock::lar","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":364},"children":[],"decl_id":null,"docs":" Lock Access\n","sig":null,"attributes":[{"value":"/ Lock Access","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":60582,"byte_end":60597,"line_start":25,"line_end":25,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":60648,"byte_end":60651,"line_start":28,"line_end":28,"column_start":9,"column_end":12},"name":"lsr","qualname":"::peripheral::itm::RegisterBlock::lsr","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":364},"children":[],"decl_id":null,"docs":" Lock Status\n","sig":null,"attributes":[{"value":"/ Lock Status","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":60624,"byte_end":60639,"line_start":27,"line_end":27,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":381},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":60694,"byte_end":60698,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Stim","qualname":"::peripheral::itm::Stim","value":"Stim {  }","parent":null,"children":[{"krate":0,"index":382}],"decl_id":null,"docs":" Stimulus Port\n","sig":null,"attributes":[{"value":"/ Stimulus Port","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":60665,"byte_end":60682,"line_start":31,"line_end":31,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":60826,"byte_end":60834,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"write_u8","qualname":"<Stim>::write_u8","value":"pub fn write_u8(&mut Self, u8)","parent":null,"children":[],"decl_id":null,"docs":" Writes an `u8` payload into the stimulus port\n","sig":null,"attributes":[{"value":"/ Writes an `u8` payload into the stimulus port","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":60751,"byte_end":60800,"line_start":37,"line_end":37,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":60805,"byte_end":60814,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":61024,"byte_end":61033,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"write_u16","qualname":"<Stim>::write_u16","value":"pub fn write_u16(&mut Self, u16)","parent":null,"children":[],"decl_id":null,"docs":" Writes an `u16` payload into the stimulus port\n","sig":null,"attributes":[{"value":"/ Writes an `u16` payload into the stimulus port","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":60948,"byte_end":60998,"line_start":43,"line_end":43,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":61003,"byte_end":61012,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":61225,"byte_end":61234,"line_start":51,"line_end":51,"column_start":12,"column_end":21},"name":"write_u32","qualname":"<Stim>::write_u32","value":"pub fn write_u32(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Writes an `u32` payload into the stimulus port\n","sig":null,"attributes":[{"value":"/ Writes an `u32` payload into the stimulus port","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":61149,"byte_end":61199,"line_start":49,"line_end":49,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":61204,"byte_end":61213,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":61456,"byte_end":61469,"line_start":58,"line_end":58,"column_start":12,"column_end":25},"name":"is_fifo_ready","qualname":"<Stim>::is_fifo_ready","value":"pub fn is_fifo_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the stimulus port is ready to accept more data\n","sig":null,"attributes":[{"value":"/ Returns `true` if the stimulus port is ready to accept more data","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":61338,"byte_end":61406,"line_start":55,"line_end":55,"column_start":5,"column_end":73}},{"value":"cfg(not(armv8m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":61411,"byte_end":61430,"line_start":56,"line_end":56,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":61435,"byte_end":61444,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":388},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mpu.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpu","qualname":"::peripheral::mpu","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mpu.rs","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":396}],"decl_id":null,"docs":" Memory Protection Unit\n","sig":null,"attributes":[{"value":"/ Memory Protection Unit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mpu.rs","byte_start":61974,"byte_end":62000,"line_start":1,"line_end":1,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mpu.rs","byte_start":62109,"byte_end":62122,"line_start":8,"line_end":8,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::mpu::RegisterBlock","value":"RegisterBlock { _type, ctrl, rnr, rbar, rasr, rbar_a1, rasr_a1, rbar_a2, rasr_a2, rbar_a3, rasr_a3 }","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407}],"decl_id":null,"docs":" Register block for ARMv7-M\n","sig":null,"attributes":[{"value":"/ Register block for ARMv7-M","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mpu.rs","byte_start":62036,"byte_end":62066,"line_start":5,"line_end":5,"column_start":1,"column_end":31}},{"value":"cfg(not(armv8m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mpu.rs","byte_start":62067,"byte_end":62086,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mpu.rs","byte_start":62087,"byte_end":62097,"line_start":7,"line_end":7,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mpu.rs","byte_start":62146,"byte_end":62151,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"name":"_type","qualname":"::peripheral::mpu::RegisterBlock::_type","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":396},"children":[],"decl_id":null,"docs":" Type\n","sig":null,"attributes":[{"value":"/ Type","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mpu.rs","byte_start":62129,"byte_end":62137,"line_start":9,"line_end":9,"column_start":5,"column_end":13}}]},{"kind":"Field","id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mpu.rs","byte_start":62186,"byte_end":62190,"line_start":12,"line_end":12,"column_start":9,"column_end":13},"name":"ctrl","qualname":"::peripheral::mpu::RegisterBlock::ctrl","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":396},"children":[],"decl_id":null,"docs":" Control\n","sig":null,"attributes":[{"value":"/ Control","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mpu.rs","byte_start":62166,"byte_end":62177,"line_start":11,"line_end":11,"column_start":5,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mpu.rs","byte_start":62231,"byte_end":62234,"line_start":14,"line_end":14,"column_start":9,"column_end":12},"name":"rnr","qualname":"::peripheral::mpu::RegisterBlock::rnr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":396},"children":[],"decl_id":null,"docs":" Region Number\n","sig":null,"attributes":[{"value":"/ Region Number","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mpu.rs","byte_start":62205,"byte_end":62222,"line_start":13,"line_end":13,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mpu.rs","byte_start":62281,"byte_end":62285,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"name":"rbar","qualname":"::peripheral::mpu::RegisterBlock::rbar","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":396},"children":[],"decl_id":null,"docs":" Region Base Address\n","sig":null,"attributes":[{"value":"/ Region Base Address","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mpu.rs","byte_start":62249,"byte_end":62272,"line_start":15,"line_end":15,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mpu.rs","byte_start":62338,"byte_end":62342,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"name":"rasr","qualname":"::peripheral::mpu::RegisterBlock::rasr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":396},"children":[],"decl_id":null,"docs":" Region Attribute and Size\n","sig":null,"attributes":[{"value":"/ Region Attribute and Size","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mpu.rs","byte_start":62300,"byte_end":62329,"line_start":17,"line_end":17,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mpu.rs","byte_start":62385,"byte_end":62392,"line_start":20,"line_end":20,"column_start":9,"column_end":16},"name":"rbar_a1","qualname":"::peripheral::mpu::RegisterBlock::rbar_a1","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":396},"children":[],"decl_id":null,"docs":" Alias 1 of RBAR\n","sig":null,"attributes":[{"value":"/ Alias 1 of RBAR","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mpu.rs","byte_start":62357,"byte_end":62376,"line_start":19,"line_end":19,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mpu.rs","byte_start":62435,"byte_end":62442,"line_start":22,"line_end":22,"column_start":9,"column_end":16},"name":"rasr_a1","qualname":"::peripheral::mpu::RegisterBlock::rasr_a1","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":396},"children":[],"decl_id":null,"docs":" Alias 1 of RASR\n","sig":null,"attributes":[{"value":"/ Alias 1 of RASR","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mpu.rs","byte_start":62407,"byte_end":62426,"line_start":21,"line_end":21,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mpu.rs","byte_start":62485,"byte_end":62492,"line_start":24,"line_end":24,"column_start":9,"column_end":16},"name":"rbar_a2","qualname":"::peripheral::mpu::RegisterBlock::rbar_a2","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":396},"children":[],"decl_id":null,"docs":" Alias 2 of RBAR\n","sig":null,"attributes":[{"value":"/ Alias 2 of RBAR","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mpu.rs","byte_start":62457,"byte_end":62476,"line_start":23,"line_end":23,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mpu.rs","byte_start":62535,"byte_end":62542,"line_start":26,"line_end":26,"column_start":9,"column_end":16},"name":"rasr_a2","qualname":"::peripheral::mpu::RegisterBlock::rasr_a2","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":396},"children":[],"decl_id":null,"docs":" Alias 2 of RASR\n","sig":null,"attributes":[{"value":"/ Alias 2 of RASR","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mpu.rs","byte_start":62507,"byte_end":62526,"line_start":25,"line_end":25,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":406},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mpu.rs","byte_start":62585,"byte_end":62592,"line_start":28,"line_end":28,"column_start":9,"column_end":16},"name":"rbar_a3","qualname":"::peripheral::mpu::RegisterBlock::rbar_a3","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":396},"children":[],"decl_id":null,"docs":" Alias 3 of RBAR\n","sig":null,"attributes":[{"value":"/ Alias 3 of RBAR","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mpu.rs","byte_start":62557,"byte_end":62576,"line_start":27,"line_end":27,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":407},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mpu.rs","byte_start":62635,"byte_end":62642,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"name":"rasr_a3","qualname":"::peripheral::mpu::RegisterBlock::rasr_a3","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":396},"children":[],"decl_id":null,"docs":" Alias 3 of RASR\n","sig":null,"attributes":[{"value":"/ Alias 3 of RASR","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mpu.rs","byte_start":62607,"byte_end":62626,"line_start":29,"line_end":29,"column_start":5,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"nvic","qualname":"::peripheral::nvic","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":416},{"krate":0,"index":419},{"krate":0,"index":422},{"krate":0,"index":425},{"krate":0,"index":451}],"decl_id":null,"docs":" Nested Vector Interrupt Controller\n","sig":null,"attributes":[{"value":"/ Nested Vector Interrupt Controller","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":63406,"byte_end":63444,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":425},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":63637,"byte_end":63650,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::nvic::RegisterBlock","value":"RegisterBlock { iser, icer, ispr, icpr, iabr, ipr, stir }","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":440},{"krate":0,"index":442},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":448},{"krate":0,"index":450}],"decl_id":null,"docs":" Register block\n","sig":null,"attributes":[{"value":"/ Register block","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":63596,"byte_end":63614,"line_start":10,"line_end":10,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":63615,"byte_end":63625,"line_start":11,"line_end":11,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":426},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":63690,"byte_end":63694,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"name":"iser","qualname":"::peripheral::nvic::RegisterBlock::iser","value":"[volatile_register::RW<u32>; 16]","parent":{"krate":0,"index":425},"children":[],"decl_id":null,"docs":" Interrupt Set-Enable\n","sig":null,"attributes":[{"value":"/ Interrupt Set-Enable","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":63657,"byte_end":63681,"line_start":13,"line_end":13,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":430},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":63779,"byte_end":63783,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"name":"icer","qualname":"::peripheral::nvic::RegisterBlock::icer","value":"[volatile_register::RW<u32>; 16]","parent":{"krate":0,"index":425},"children":[],"decl_id":null,"docs":" Interrupt Clear-Enable\n","sig":null,"attributes":[{"value":"/ Interrupt Clear-Enable","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":63744,"byte_end":63770,"line_start":18,"line_end":18,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":63867,"byte_end":63871,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"name":"ispr","qualname":"::peripheral::nvic::RegisterBlock::ispr","value":"[volatile_register::RW<u32>; 16]","parent":{"krate":0,"index":425},"children":[],"decl_id":null,"docs":" Interrupt Set-Pending\n","sig":null,"attributes":[{"value":"/ Interrupt Set-Pending","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":63833,"byte_end":63858,"line_start":23,"line_end":23,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":438},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":63957,"byte_end":63961,"line_start":29,"line_end":29,"column_start":9,"column_end":13},"name":"icpr","qualname":"::peripheral::nvic::RegisterBlock::icpr","value":"[volatile_register::RW<u32>; 16]","parent":{"krate":0,"index":425},"children":[],"decl_id":null,"docs":" Interrupt Clear-Pending\n","sig":null,"attributes":[{"value":"/ Interrupt Clear-Pending","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":63921,"byte_end":63948,"line_start":28,"line_end":28,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":442},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":64104,"byte_end":64108,"line_start":35,"line_end":35,"column_start":9,"column_end":13},"name":"iabr","qualname":"::peripheral::nvic::RegisterBlock::iabr","value":"[volatile_register::RO<u32>; 16]","parent":{"krate":0,"index":425},"children":[],"decl_id":null,"docs":" Interrupt Active Bit (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Interrupt Active Bit (not present on Cortex-M0 variants)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":64011,"byte_end":64071,"line_start":33,"line_end":33,"column_start":5,"column_end":65}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":64076,"byte_end":64095,"line_start":34,"line_end":34,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":64786,"byte_end":64789,"line_start":53,"line_end":53,"column_start":9,"column_end":12},"name":"ipr","qualname":"::peripheral::nvic::RegisterBlock::ipr","value":"[volatile_register::RW<u8>; 496]","parent":{"krate":0,"index":425},"children":[],"decl_id":null,"docs":" Interrupt Priority","sig":null,"attributes":[{"value":"/ Interrupt Priority","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":64204,"byte_end":64226,"line_start":41,"line_end":41,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":64231,"byte_end":64234,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ On ARMv7-M, 124 word-sized registers are available. Each of those","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":64239,"byte_end":64308,"line_start":43,"line_end":43,"column_start":5,"column_end":74}},{"value":"/ contains of 4 interrupt priorities of 8 byte each.The architecture","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":64313,"byte_end":64383,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/ specifically allows accessing those along byte boundaries, so they are","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":64388,"byte_end":64462,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ represented as 496 byte-sized registers, for convenience, and to allow","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":64467,"byte_end":64541,"line_start":46,"line_end":46,"column_start":5,"column_end":79}},{"value":"/ atomic priority updates.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":64546,"byte_end":64574,"line_start":47,"line_end":47,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":64579,"byte_end":64582,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ On ARMv6-M, the registers must only be accessed along word boundaries,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":64587,"byte_end":64661,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ so convenient byte-sized representation wouldn't work on that","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":64666,"byte_end":64731,"line_start":50,"line_end":50,"column_start":5,"column_end":70}},{"value":"/ architecture.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":64736,"byte_end":64753,"line_start":51,"line_end":51,"column_start":5,"column_end":22}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":64758,"byte_end":64777,"line_start":52,"line_end":52,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":65528,"byte_end":65532,"line_start":74,"line_end":74,"column_start":9,"column_end":13},"name":"stir","qualname":"::peripheral::nvic::RegisterBlock::stir","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":425},"children":[],"decl_id":null,"docs":" Software Trigger Interrupt\n","sig":null,"attributes":[{"value":"/ Software Trigger Interrupt","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":65465,"byte_end":65495,"line_start":72,"line_end":72,"column_start":5,"column_end":35}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":65500,"byte_end":65519,"line_start":73,"line_end":73,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":65978,"byte_end":65985,"line_start":89,"line_end":89,"column_start":12,"column_end":19},"name":"request","qualname":"<NVIC>::request","value":"pub fn request<I>(&mut Self, I) where I: InterruptNumber","parent":null,"children":[],"decl_id":null,"docs":" Request an IRQ in software","sig":null,"attributes":[{"value":"/ Request an IRQ in software","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":65562,"byte_end":65592,"line_start":78,"line_end":78,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":65597,"byte_end":65600,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Writing a value to the INTID field is the same as manually pending an interrupt by setting","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":65605,"byte_end":65699,"line_start":80,"line_end":80,"column_start":5,"column_end":99}},{"value":"/ the corresponding interrupt bit in an Interrupt Set Pending Register. This is similar to","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":65704,"byte_end":65796,"line_start":81,"line_end":81,"column_start":5,"column_end":97}},{"value":"/ [`NVIC::pend`].","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":65801,"byte_end":65820,"line_start":82,"line_end":82,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":65825,"byte_end":65828,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This method is not available on ARMv6-M chips.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":65833,"byte_end":65883,"line_start":84,"line_end":84,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":65888,"byte_end":65891,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ [`NVIC::pend`]: #method.pend","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":65896,"byte_end":65928,"line_start":86,"line_end":86,"column_start":5,"column_end":37}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":65933,"byte_end":65952,"line_start":87,"line_end":87,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":65957,"byte_end":65966,"line_start":88,"line_end":88,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":66228,"byte_end":66232,"line_start":102,"line_end":102,"column_start":12,"column_end":16},"name":"mask","qualname":"<NVIC>::mask","value":"pub fn mask<I>(I) where I: InterruptNumber","parent":null,"children":[],"decl_id":null,"docs":" Disables `interrupt`\n","sig":null,"attributes":[{"value":"/ Disables `interrupt`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":66178,"byte_end":66202,"line_start":100,"line_end":100,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":66207,"byte_end":66216,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":66637,"byte_end":66643,"line_start":115,"line_end":115,"column_start":19,"column_end":25},"name":"unmask","qualname":"<NVIC>::unmask","value":"pub unsafe fn unmask<I>(I) where I: InterruptNumber","parent":null,"children":[],"decl_id":null,"docs":" Enables `interrupt`","sig":null,"attributes":[{"value":"/ Enables `interrupt`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":66489,"byte_end":66512,"line_start":111,"line_end":111,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":66517,"byte_end":66520,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ This function is `unsafe` because it can break mask-based critical sections","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":66525,"byte_end":66604,"line_start":113,"line_end":113,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":66609,"byte_end":66618,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":67215,"byte_end":67227,"line_start":130,"line_end":130,"column_start":12,"column_end":24},"name":"get_priority","qualname":"<NVIC>::get_priority","value":"pub fn get_priority<I>(I) -> u8 where I: InterruptNumber","parent":null,"children":[],"decl_id":null,"docs":" Returns the NVIC priority of `interrupt`","sig":null,"attributes":[{"value":"/ Returns the NVIC priority of `interrupt`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":66886,"byte_end":66930,"line_start":124,"line_end":124,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":66935,"byte_end":66938,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ *NOTE* NVIC encodes priority in the highest bits of a byte so values like `1` and `2` map","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":66943,"byte_end":67036,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ to the same priority. Also for NVIC priorities, a lower value (e.g. `16`) has higher","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":67041,"byte_end":67129,"line_start":127,"line_end":127,"column_start":5,"column_end":93}},{"value":"/ priority (urgency) than a larger value (e.g. `32`).","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":67134,"byte_end":67189,"line_start":128,"line_end":128,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":67194,"byte_end":67203,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":67917,"byte_end":67926,"line_start":153,"line_end":153,"column_start":12,"column_end":21},"name":"is_active","qualname":"<NVIC>::is_active","value":"pub fn is_active<I>(I) -> bool where I: InterruptNumber","parent":null,"children":[],"decl_id":null,"docs":" Is `interrupt` active or pre-empted and stacked\n","sig":null,"attributes":[{"value":"/ Is `interrupt` active or pre-empted and stacked","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":67816,"byte_end":67867,"line_start":150,"line_end":150,"column_start":5,"column_end":56}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":67872,"byte_end":67891,"line_start":151,"line_end":151,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":67896,"byte_end":67905,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":68284,"byte_end":68294,"line_start":166,"line_end":166,"column_start":12,"column_end":22},"name":"is_enabled","qualname":"<NVIC>::is_enabled","value":"pub fn is_enabled<I>(I) -> bool where I: InterruptNumber","parent":null,"children":[],"decl_id":null,"docs":" Checks if `interrupt` is enabled\n","sig":null,"attributes":[{"value":"/ Checks if `interrupt` is enabled","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":68222,"byte_end":68258,"line_start":164,"line_end":164,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":68263,"byte_end":68272,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":68652,"byte_end":68662,"line_start":179,"line_end":179,"column_start":12,"column_end":22},"name":"is_pending","qualname":"<NVIC>::is_pending","value":"pub fn is_pending<I>(I) -> bool where I: InterruptNumber","parent":null,"children":[],"decl_id":null,"docs":" Checks if `interrupt` is pending\n","sig":null,"attributes":[{"value":"/ Checks if `interrupt` is pending","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":68590,"byte_end":68626,"line_start":177,"line_end":177,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":68631,"byte_end":68640,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":69025,"byte_end":69029,"line_start":192,"line_end":192,"column_start":12,"column_end":16},"name":"pend","qualname":"<NVIC>::pend","value":"pub fn pend<I>(I) where I: InterruptNumber","parent":null,"children":[],"decl_id":null,"docs":" Forces `interrupt` into pending state\n","sig":null,"attributes":[{"value":"/ Forces `interrupt` into pending state","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":68958,"byte_end":68999,"line_start":190,"line_end":190,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":69004,"byte_end":69013,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":69911,"byte_end":69923,"line_start":215,"line_end":215,"column_start":19,"column_end":31},"name":"set_priority","qualname":"<NVIC>::set_priority","value":"pub unsafe fn set_priority<I>(&mut Self, I, u8) where I: InterruptNumber","parent":null,"children":[],"decl_id":null,"docs":" Sets the \"priority\" of `interrupt` to `prio`","sig":null,"attributes":[{"value":"/ Sets the \"priority\" of `interrupt` to `prio`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":69300,"byte_end":69348,"line_start":202,"line_end":202,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":69353,"byte_end":69356,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ *NOTE* See [`get_priority`](struct.NVIC.html#method.get_priority) method for an explanation","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":69361,"byte_end":69456,"line_start":204,"line_end":204,"column_start":5,"column_end":100}},{"value":"/ of how NVIC priorities work.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":69461,"byte_end":69493,"line_start":205,"line_end":205,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":69498,"byte_end":69501,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ On ARMv6-M, updating an interrupt priority requires a read-modify-write operation. On","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":69506,"byte_end":69595,"line_start":207,"line_end":207,"column_start":5,"column_end":94}},{"value":"/ ARMv7-M, the operation is performed in a single atomic write operation.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":69600,"byte_end":69675,"line_start":208,"line_end":208,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":69680,"byte_end":69683,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Unsafety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":69688,"byte_end":69702,"line_start":210,"line_end":210,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":69707,"byte_end":69710,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ Changing priority levels can break priority-based critical sections (see","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":69715,"byte_end":69791,"line_start":212,"line_end":212,"column_start":5,"column_end":81}},{"value":"/ [`register::basepri`](crate::register::basepri)) and compromise memory safety.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":69796,"byte_end":69878,"line_start":213,"line_end":213,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":69883,"byte_end":69892,"line_start":214,"line_end":214,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":70529,"byte_end":70535,"line_start":238,"line_end":238,"column_start":12,"column_end":18},"name":"unpend","qualname":"<NVIC>::unpend","value":"pub fn unpend<I>(I) where I: InterruptNumber","parent":null,"children":[],"decl_id":null,"docs":" Clears `interrupt`'s pending state\n","sig":null,"attributes":[{"value":"/ Clears `interrupt`'s pending state","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":70465,"byte_end":70503,"line_start":236,"line_end":236,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":70508,"byte_end":70517,"line_start":237,"line_end":237,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":472},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"scb","qualname":"::peripheral::scb","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","parent":null,"children":[{"krate":0,"index":473},{"krate":0,"index":476},{"krate":0,"index":479},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":491},{"krate":0,"index":952},{"krate":0,"index":959},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":509},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":519},{"krate":0,"index":970},{"krate":0,"index":989},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":521},{"krate":0,"index":1000},{"krate":0,"index":1008},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":523},{"krate":0,"index":525},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":1020},{"krate":0,"index":1042},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":587}],"decl_id":null,"docs":" System Control Block\n","sig":null,"attributes":[{"value":"/ System Control Block","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":71152,"byte_end":71176,"line_start":1,"line_end":1,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":491},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":71472,"byte_end":71485,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::scb::RegisterBlock","value":"RegisterBlock { icsr, vtor, aircr, scr, ccr, shpr, shcsr, cfsr, hfsr, dfsr, mmfar, bfar, afsr, cpacr }","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":508}],"decl_id":null,"docs":" Register block\n","sig":null,"attributes":[{"value":"/ Register block","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":71431,"byte_end":71449,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":71450,"byte_end":71460,"line_start":18,"line_end":18,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":71532,"byte_end":71536,"line_start":21,"line_end":21,"column_start":9,"column_end":13},"name":"icsr","qualname":"::peripheral::scb::RegisterBlock::icsr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":491},"children":[],"decl_id":null,"docs":" Interrupt Control and State\n","sig":null,"attributes":[{"value":"/ Interrupt Control and State","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":71492,"byte_end":71523,"line_start":20,"line_end":20,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":71620,"byte_end":71624,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"name":"vtor","qualname":"::peripheral::scb::RegisterBlock::vtor","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":491},"children":[],"decl_id":null,"docs":" Vector Table Offset (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Vector Table Offset (not present on Cortex-M0 variants)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":71552,"byte_end":71611,"line_start":23,"line_end":23,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":71692,"byte_end":71697,"line_start":27,"line_end":27,"column_start":9,"column_end":14},"name":"aircr","qualname":"::peripheral::scb::RegisterBlock::aircr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":491},"children":[],"decl_id":null,"docs":" Application Interrupt and Reset Control\n","sig":null,"attributes":[{"value":"/ Application Interrupt and Reset Control","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":71640,"byte_end":71683,"line_start":26,"line_end":26,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":495},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":71740,"byte_end":71743,"line_start":30,"line_end":30,"column_start":9,"column_end":12},"name":"scr","qualname":"::peripheral::scb::RegisterBlock::scr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":491},"children":[],"decl_id":null,"docs":" System Control\n","sig":null,"attributes":[{"value":"/ System Control","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":71713,"byte_end":71731,"line_start":29,"line_end":29,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":496},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":71797,"byte_end":71800,"line_start":33,"line_end":33,"column_start":9,"column_end":12},"name":"ccr","qualname":"::peripheral::scb::RegisterBlock::ccr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":491},"children":[],"decl_id":null,"docs":" Configuration and Control\n","sig":null,"attributes":[{"value":"/ Configuration and Control","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":71759,"byte_end":71788,"line_start":32,"line_end":32,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":72029,"byte_end":72033,"line_start":41,"line_end":41,"column_start":9,"column_end":13},"name":"shpr","qualname":"::peripheral::scb::RegisterBlock::shpr","value":"[volatile_register::RW<u8>; 12]","parent":{"krate":0,"index":491},"children":[],"decl_id":null,"docs":" System Handler Priority (word accessible only on Cortex-M0 variants)","sig":null,"attributes":[{"value":"/ System Handler Priority (word accessible only on Cortex-M0 variants)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":71816,"byte_end":71888,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":71893,"byte_end":71896,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ On ARMv7-M, `shpr[0]` points to SHPR1","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":71901,"byte_end":71942,"line_start":37,"line_end":37,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":71947,"byte_end":71950,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ On ARMv6-M, `shpr[0]` points to SHPR2","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":71955,"byte_end":71996,"line_start":39,"line_end":39,"column_start":5,"column_end":46}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":72001,"byte_end":72020,"line_start":40,"line_end":40,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":72371,"byte_end":72376,"line_start":53,"line_end":53,"column_start":9,"column_end":14},"name":"shcsr","qualname":"::peripheral::scb::RegisterBlock::shcsr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":491},"children":[],"decl_id":null,"docs":" System Handler Control and State\n","sig":null,"attributes":[{"value":"/ System Handler Control and State","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":72326,"byte_end":72362,"line_start":52,"line_end":52,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":500},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":72490,"byte_end":72494,"line_start":57,"line_end":57,"column_start":9,"column_end":13},"name":"cfsr","qualname":"::peripheral::scb::RegisterBlock::cfsr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":491},"children":[],"decl_id":null,"docs":" Configurable Fault Status (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Configurable Fault Status (not present on Cortex-M0 variants)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":72392,"byte_end":72457,"line_start":55,"line_end":55,"column_start":5,"column_end":70}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":72462,"byte_end":72481,"line_start":56,"line_end":56,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":501},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":72639,"byte_end":72643,"line_start":63,"line_end":63,"column_start":9,"column_end":13},"name":"hfsr","qualname":"::peripheral::scb::RegisterBlock::hfsr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":491},"children":[],"decl_id":null,"docs":" HardFault Status (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ HardFault Status (not present on Cortex-M0 variants)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":72550,"byte_end":72606,"line_start":61,"line_end":61,"column_start":5,"column_end":61}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":72611,"byte_end":72630,"line_start":62,"line_end":62,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":502},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":72790,"byte_end":72794,"line_start":69,"line_end":69,"column_start":9,"column_end":13},"name":"dfsr","qualname":"::peripheral::scb::RegisterBlock::dfsr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":491},"children":[],"decl_id":null,"docs":" Debug Fault Status (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Debug Fault Status (not present on Cortex-M0 variants)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":72699,"byte_end":72757,"line_start":67,"line_end":67,"column_start":5,"column_end":63}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":72762,"byte_end":72781,"line_start":68,"line_end":68,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":72946,"byte_end":72951,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"name":"mmfar","qualname":"::peripheral::scb::RegisterBlock::mmfar","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":491},"children":[],"decl_id":null,"docs":" MemManage Fault Address (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ MemManage Fault Address (not present on Cortex-M0 variants)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":72850,"byte_end":72913,"line_start":73,"line_end":73,"column_start":5,"column_end":68}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":72918,"byte_end":72937,"line_start":74,"line_end":74,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":73096,"byte_end":73100,"line_start":81,"line_end":81,"column_start":9,"column_end":13},"name":"bfar","qualname":"::peripheral::scb::RegisterBlock::bfar","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":491},"children":[],"decl_id":null,"docs":" BusFault Address (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ BusFault Address (not present on Cortex-M0 variants)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":73007,"byte_end":73063,"line_start":79,"line_end":79,"column_start":5,"column_end":61}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":73068,"byte_end":73087,"line_start":80,"line_end":80,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":505},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":73251,"byte_end":73255,"line_start":87,"line_end":87,"column_start":9,"column_end":13},"name":"afsr","qualname":"::peripheral::scb::RegisterBlock::afsr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":491},"children":[],"decl_id":null,"docs":" Auxiliary Fault Status (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Auxiliary Fault Status (not present on Cortex-M0 variants)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":73156,"byte_end":73218,"line_start":85,"line_end":85,"column_start":5,"column_end":67}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":73223,"byte_end":73242,"line_start":86,"line_end":86,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":508},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":73438,"byte_end":73443,"line_start":95,"line_end":95,"column_start":9,"column_end":14},"name":"cpacr","qualname":"::peripheral::scb::RegisterBlock::cpacr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":491},"children":[],"decl_id":null,"docs":" Coprocessor Access Control (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Coprocessor Access Control (not present on Cortex-M0 variants)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":73339,"byte_end":73405,"line_start":93,"line_end":93,"column_start":5,"column_end":71}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":73410,"byte_end":73429,"line_start":94,"line_end":94,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":953},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":73637,"byte_end":73645,"line_start":105,"line_end":105,"column_start":5,"column_end":13},"name":"Disabled","qualname":"::peripheral::scb::FpuAccessMode::Disabled","value":"FpuAccessMode::Disabled","parent":{"krate":0,"index":952},"children":[],"decl_id":null,"docs":" FPU is not accessible\n","sig":null,"attributes":[{"value":"/ FPU is not accessible","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":73607,"byte_end":73632,"line_start":104,"line_end":104,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":955},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":73705,"byte_end":73712,"line_start":107,"line_end":107,"column_start":5,"column_end":12},"name":"Enabled","qualname":"::peripheral::scb::FpuAccessMode::Enabled","value":"FpuAccessMode::Enabled","parent":{"krate":0,"index":952},"children":[],"decl_id":null,"docs":" FPU is accessible in Privileged and User mode\n","sig":null,"attributes":[{"value":"/ FPU is accessible in Privileged and User mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":73651,"byte_end":73700,"line_start":106,"line_end":106,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":957},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":73768,"byte_end":73778,"line_start":109,"line_end":109,"column_start":5,"column_end":15},"name":"Privileged","qualname":"::peripheral::scb::FpuAccessMode::Privileged","value":"FpuAccessMode::Privileged","parent":{"krate":0,"index":952},"children":[],"decl_id":null,"docs":" FPU is accessible in Privileged mode only\n","sig":null,"attributes":[{"value":"/ FPU is accessible in Privileged mode only","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":73718,"byte_end":73763,"line_start":108,"line_end":108,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":952},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":73587,"byte_end":73600,"line_start":103,"line_end":103,"column_start":10,"column_end":23},"name":"FpuAccessMode","qualname":"::peripheral::scb::FpuAccessMode","value":"pub enum FpuAccessMode { Disabled, Enabled, Privileged, }","parent":null,"children":[{"krate":0,"index":953},{"krate":0,"index":955},{"krate":0,"index":957}],"decl_id":null,"docs":" FPU access mode\n","sig":null,"attributes":[{"value":"/ FPU access mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":73497,"byte_end":73516,"line_start":100,"line_end":100,"column_start":1,"column_end":20}},{"value":"cfg(has_fpu)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":73517,"byte_end":73532,"line_start":101,"line_end":101,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":74149,"byte_end":74160,"line_start":126,"line_end":126,"column_start":12,"column_end":23},"name":"disable_fpu","qualname":"<SCB>::disable_fpu","value":"pub fn disable_fpu(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `set_fpu_access_mode(FpuAccessMode::Disabled)`\n","sig":null,"attributes":[{"value":"/ Shorthand for `set_fpu_access_mode(FpuAccessMode::Disabled)`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":74059,"byte_end":74123,"line_start":124,"line_end":124,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":74128,"byte_end":74137,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":74332,"byte_end":74342,"line_start":132,"line_end":132,"column_start":12,"column_end":22},"name":"enable_fpu","qualname":"<SCB>::enable_fpu","value":"pub fn enable_fpu(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `set_fpu_access_mode(FpuAccessMode::Enabled)`\n","sig":null,"attributes":[{"value":"/ Shorthand for `set_fpu_access_mode(FpuAccessMode::Enabled)`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":74243,"byte_end":74306,"line_start":130,"line_end":130,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":74311,"byte_end":74320,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":74474,"byte_end":74489,"line_start":138,"line_end":138,"column_start":12,"column_end":27},"name":"fpu_access_mode","qualname":"<SCB>::fpu_access_mode","value":"pub fn fpu_access_mode() -> FpuAccessMode","parent":null,"children":[],"decl_id":null,"docs":" Gets FPU access mode\n","sig":null,"attributes":[{"value":"/ Gets FPU access mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":74424,"byte_end":74448,"line_start":136,"line_end":136,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":74453,"byte_end":74462,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":75368,"byte_end":75387,"line_start":158,"line_end":158,"column_start":12,"column_end":31},"name":"set_fpu_access_mode","qualname":"<SCB>::set_fpu_access_mode","value":"pub fn set_fpu_access_mode(&mut Self, FpuAccessMode)","parent":null,"children":[],"decl_id":null,"docs":" Sets FPU access mode","sig":null,"attributes":[{"value":"/ Sets FPU access mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":74942,"byte_end":74966,"line_start":151,"line_end":151,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":74971,"byte_end":74974,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ *IMPORTANT* Any function that runs fully or partly with the FPU disabled must *not* take any","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":74979,"byte_end":75075,"line_start":153,"line_end":153,"column_start":5,"column_end":101}},{"value":"/ floating-point arguments or have any floating-point local variables. Because the compiler","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":75080,"byte_end":75173,"line_start":154,"line_end":154,"column_start":5,"column_end":98}},{"value":"/ might inline such a function into a caller that does have floating-point arguments or","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":75178,"byte_end":75267,"line_start":155,"line_end":155,"column_start":5,"column_end":94}},{"value":"/ variables, any such function must be also marked #[inline(never)].","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":75272,"byte_end":75342,"line_start":156,"line_end":156,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":75347,"byte_end":75356,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":75855,"byte_end":75866,"line_start":172,"line_end":172,"column_start":12,"column_end":23},"name":"vect_active","qualname":"<SCB>::vect_active","value":"pub fn vect_active() -> VectActive","parent":null,"children":[],"decl_id":null,"docs":" Returns the active exception number\n","sig":null,"attributes":[{"value":"/ Returns the active exception number","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":75790,"byte_end":75829,"line_start":170,"line_end":170,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":75834,"byte_end":75843,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":971},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":77196,"byte_end":77210,"line_start":203,"line_end":203,"column_start":5,"column_end":19},"name":"NonMaskableInt","qualname":"::peripheral::scb::Exception::NonMaskableInt","value":"Exception::NonMaskableInt","parent":{"krate":0,"index":970},"children":[],"decl_id":null,"docs":" Non maskable interrupt\n","sig":null,"attributes":[{"value":"/ Non maskable interrupt","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":77165,"byte_end":77191,"line_start":202,"line_end":202,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":973},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":77246,"byte_end":77255,"line_start":206,"line_end":206,"column_start":5,"column_end":14},"name":"HardFault","qualname":"::peripheral::scb::Exception::HardFault","value":"Exception::HardFault","parent":{"krate":0,"index":970},"children":[],"decl_id":null,"docs":" Hard fault interrupt\n","sig":null,"attributes":[{"value":"/ Hard fault interrupt","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":77217,"byte_end":77241,"line_start":205,"line_end":205,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":975},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":77358,"byte_end":77374,"line_start":210,"line_end":210,"column_start":5,"column_end":21},"name":"MemoryManagement","qualname":"::peripheral::scb::Exception::MemoryManagement","value":"Exception::MemoryManagement","parent":{"krate":0,"index":970},"children":[],"decl_id":null,"docs":" Memory management interrupt (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Memory management interrupt (not present on Cortex-M0 variants)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":77262,"byte_end":77329,"line_start":208,"line_end":208,"column_start":5,"column_end":72}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":77334,"byte_end":77353,"line_start":209,"line_end":209,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":977},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":77469,"byte_end":77477,"line_start":214,"line_end":214,"column_start":5,"column_end":13},"name":"BusFault","qualname":"::peripheral::scb::Exception::BusFault","value":"Exception::BusFault","parent":{"krate":0,"index":970},"children":[],"decl_id":null,"docs":" Bus fault interrupt (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Bus fault interrupt (not present on Cortex-M0 variants)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":77381,"byte_end":77440,"line_start":212,"line_end":212,"column_start":5,"column_end":64}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":77445,"byte_end":77464,"line_start":213,"line_end":213,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":979},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":77574,"byte_end":77584,"line_start":218,"line_end":218,"column_start":5,"column_end":15},"name":"UsageFault","qualname":"::peripheral::scb::Exception::UsageFault","value":"Exception::UsageFault","parent":{"krate":0,"index":970},"children":[],"decl_id":null,"docs":" Usage fault interrupt (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Usage fault interrupt (not present on Cortex-M0 variants)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":77484,"byte_end":77545,"line_start":216,"line_end":216,"column_start":5,"column_end":66}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":77550,"byte_end":77569,"line_start":217,"line_end":217,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":981},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":77716,"byte_end":77722,"line_start":225,"line_end":225,"column_start":5,"column_end":11},"name":"SVCall","qualname":"::peripheral::scb::Exception::SVCall","value":"Exception::SVCall","parent":{"krate":0,"index":970},"children":[],"decl_id":null,"docs":" SV call interrupt\n","sig":null,"attributes":[{"value":"/ SV call interrupt","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":77690,"byte_end":77711,"line_start":224,"line_end":224,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":983},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":77821,"byte_end":77833,"line_start":229,"line_end":229,"column_start":5,"column_end":17},"name":"DebugMonitor","qualname":"::peripheral::scb::Exception::DebugMonitor","value":"Exception::DebugMonitor","parent":{"krate":0,"index":970},"children":[],"decl_id":null,"docs":" Debug monitor interrupt (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Debug monitor interrupt (not present on Cortex-M0 variants)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":77729,"byte_end":77792,"line_start":227,"line_end":227,"column_start":5,"column_end":68}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":77797,"byte_end":77816,"line_start":228,"line_end":228,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":985},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":77866,"byte_end":77872,"line_start":232,"line_end":232,"column_start":5,"column_end":11},"name":"PendSV","qualname":"::peripheral::scb::Exception::PendSV","value":"Exception::PendSV","parent":{"krate":0,"index":970},"children":[],"decl_id":null,"docs":" Pend SV interrupt\n","sig":null,"attributes":[{"value":"/ Pend SV interrupt","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":77840,"byte_end":77861,"line_start":231,"line_end":231,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":987},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":77909,"byte_end":77916,"line_start":235,"line_end":235,"column_start":5,"column_end":12},"name":"SysTick","qualname":"::peripheral::scb::Exception::SysTick","value":"Exception::SysTick","parent":{"krate":0,"index":970},"children":[],"decl_id":null,"docs":" System Tick interrupt\n","sig":null,"attributes":[{"value":"/ System Tick interrupt","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":77879,"byte_end":77904,"line_start":234,"line_end":234,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":970},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":77149,"byte_end":77158,"line_start":201,"line_end":201,"column_start":10,"column_end":19},"name":"Exception","qualname":"::peripheral::scb::Exception","value":"pub enum Exception {\n    NonMaskableInt,\n    HardFault,\n    MemoryManagement,\n    BusFault,\n    UsageFault,\n    SVCall,\n    DebugMonitor,\n    PendSV,\n    SysTick,\n}","parent":null,"children":[{"krate":0,"index":971},{"krate":0,"index":973},{"krate":0,"index":975},{"krate":0,"index":977},{"krate":0,"index":979},{"krate":0,"index":981},{"krate":0,"index":983},{"krate":0,"index":985},{"krate":0,"index":987}],"decl_id":null,"docs":" Processor core exceptions (internal interrupts)\n","sig":null,"attributes":[{"value":"/ Processor core exceptions (internal interrupts)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":76925,"byte_end":76976,"line_start":197,"line_end":197,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":78093,"byte_end":78097,"line_start":243,"line_end":243,"column_start":12,"column_end":16},"name":"irqn","qualname":"<Exception>::irqn","value":"pub fn irqn(Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Returns the IRQ number of this `Exception`","sig":null,"attributes":[{"value":"/ Returns the IRQ number of this `Exception`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":77942,"byte_end":77988,"line_start":239,"line_end":239,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":77993,"byte_end":77996,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ The return value is always within the closed range `[-1, -14]`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":78001,"byte_end":78067,"line_start":241,"line_end":241,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":78072,"byte_end":78081,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1001},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":78971,"byte_end":78981,"line_start":270,"line_end":270,"column_start":5,"column_end":15},"name":"ThreadMode","qualname":"::peripheral::scb::VectActive::ThreadMode","value":"VectActive::ThreadMode","parent":{"krate":0,"index":1000},"children":[],"decl_id":null,"docs":" Thread mode\n","sig":null,"attributes":[{"value":"/ Thread mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":78951,"byte_end":78966,"line_start":269,"line_end":269,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1003},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":79043,"byte_end":79052,"line_start":273,"line_end":273,"column_start":5,"column_end":14},"name":"Exception","qualname":"::peripheral::scb::VectActive::Exception","value":"VectActive::Exception(Exception)","parent":{"krate":0,"index":1000},"children":[],"decl_id":null,"docs":" Processor core exception (internal interrupts)\n","sig":null,"attributes":[{"value":"/ Processor core exception (internal interrupts)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":78988,"byte_end":79038,"line_start":272,"line_end":272,"column_start":5,"column_end":55}}]},{"kind":"StructVariant","id":{"krate":0,"index":1006},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":79126,"byte_end":79135,"line_start":276,"line_end":276,"column_start":5,"column_end":14},"name":"Interrupt","qualname":"::peripheral::scb::VectActive::Interrupt","value":"VectActive::Interrupt { irqn }","parent":{"krate":0,"index":1000},"children":[],"decl_id":null,"docs":" Device specific exception (external interrupts)\n","sig":null,"attributes":[{"value":"/ Device specific exception (external interrupts)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":79070,"byte_end":79121,"line_start":275,"line_end":275,"column_start":5,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":1000},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":78934,"byte_end":78944,"line_start":268,"line_end":268,"column_start":10,"column_end":20},"name":"VectActive","qualname":"::peripheral::scb::VectActive","value":"pub enum VectActive {\n    ThreadMode,\n    Exception(Exception),\n    Interrupt {\n            irqn: u8,\n        },\n}","parent":null,"children":[{"krate":0,"index":1001},{"krate":0,"index":1003},{"krate":0,"index":1006}],"decl_id":null,"docs":" Active exception number\n","sig":null,"attributes":[{"value":"/ Active exception number","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":78734,"byte_end":78761,"line_start":264,"line_end":264,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":79339,"byte_end":79343,"line_start":285,"line_end":285,"column_start":12,"column_end":16},"name":"from","qualname":"<VectActive>::from","value":"pub fn from(u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `byte` into `VectActive`\n","sig":null,"attributes":[{"value":"/ Converts a `byte` into `VectActive`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":79274,"byte_end":79313,"line_start":283,"line_end":283,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":79318,"byte_end":79327,"line_start":284,"line_end":284,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":80720,"byte_end":80733,"line_start":324,"line_end":324,"column_start":12,"column_end":25},"name":"enable_icache","qualname":"<SCB>::enable_icache","value":"pub fn enable_icache(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Enables I-cache if currently disabled.","sig":null,"attributes":[{"value":"/ Enables I-cache if currently disabled.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":80583,"byte_end":80625,"line_start":320,"line_end":320,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":80630,"byte_end":80633,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ This operation first invalidates the entire I-cache.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":80638,"byte_end":80694,"line_start":322,"line_end":322,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":80699,"byte_end":80708,"line_start":323,"line_end":323,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":81624,"byte_end":81638,"line_start":354,"line_end":354,"column_start":12,"column_end":26},"name":"disable_icache","qualname":"<SCB>::disable_icache","value":"pub fn disable_icache(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disables I-cache if currently enabled.","sig":null,"attributes":[{"value":"/ Disables I-cache if currently enabled.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":81477,"byte_end":81519,"line_start":350,"line_end":350,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":81524,"byte_end":81527,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ This operation invalidates the entire I-cache after disabling.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":81532,"byte_end":81598,"line_start":352,"line_end":352,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":81603,"byte_end":81612,"line_start":353,"line_end":353,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":82272,"byte_end":82286,"line_start":376,"line_end":376,"column_start":12,"column_end":26},"name":"icache_enabled","qualname":"<SCB>::icache_enabled","value":"pub fn icache_enabled() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the I-cache is currently enabled.\n","sig":null,"attributes":[{"value":"/ Returns whether the I-cache is currently enabled.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":82185,"byte_end":82238,"line_start":374,"line_end":374,"column_start":5,"column_end":58}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":82243,"byte_end":82260,"line_start":375,"line_end":375,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":82566,"byte_end":82583,"line_start":386,"line_end":386,"column_start":12,"column_end":29},"name":"invalidate_icache","qualname":"<SCB>::invalidate_icache","value":"pub fn invalidate_icache(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Invalidates the entire I-cache.\n","sig":null,"attributes":[{"value":"/ Invalidates the entire I-cache.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":82505,"byte_end":82540,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":82545,"byte_end":82554,"line_start":385,"line_end":385,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":83055,"byte_end":83068,"line_start":402,"line_end":402,"column_start":12,"column_end":25},"name":"enable_dcache","qualname":"<SCB>::enable_dcache","value":"pub fn enable_dcache(&mut Self, &mut CPUID)","parent":null,"children":[],"decl_id":null,"docs":" Enables D-cache if currently disabled.","sig":null,"attributes":[{"value":"/ Enables D-cache if currently disabled.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":82846,"byte_end":82888,"line_start":397,"line_end":397,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":82893,"byte_end":82896,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ This operation first invalidates the entire D-cache, ensuring it does","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":82901,"byte_end":82974,"line_start":399,"line_end":399,"column_start":5,"column_end":78}},{"value":"/ not contain stale values before being enabled.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":82979,"byte_end":83029,"line_start":400,"line_end":400,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":83034,"byte_end":83043,"line_start":401,"line_end":401,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":84004,"byte_end":84018,"line_start":430,"line_end":430,"column_start":12,"column_end":26},"name":"disable_dcache","qualname":"<SCB>::disable_dcache","value":"pub fn disable_dcache(&mut Self, &mut CPUID)","parent":null,"children":[],"decl_id":null,"docs":" Disables D-cache if currently enabled.","sig":null,"attributes":[{"value":"/ Disables D-cache if currently enabled.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":83763,"byte_end":83805,"line_start":425,"line_end":425,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":83810,"byte_end":83813,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ This operation subsequently cleans and invalidates the entire D-cache,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":83818,"byte_end":83892,"line_start":427,"line_end":427,"column_start":5,"column_end":79}},{"value":"/ ensuring all contents are safely written back to main memory after disabling.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":83897,"byte_end":83978,"line_start":428,"line_end":428,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":83983,"byte_end":83992,"line_start":429,"line_end":429,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":84531,"byte_end":84545,"line_start":446,"line_end":446,"column_start":12,"column_end":26},"name":"dcache_enabled","qualname":"<SCB>::dcache_enabled","value":"pub fn dcache_enabled() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the D-cache is currently enabled.\n","sig":null,"attributes":[{"value":"/ Returns whether the D-cache is currently enabled.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":84452,"byte_end":84505,"line_start":444,"line_end":444,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":84510,"byte_end":84519,"line_start":445,"line_end":445,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":85831,"byte_end":85843,"line_start":484,"line_end":484,"column_start":12,"column_end":24},"name":"clean_dcache","qualname":"<SCB>::clean_dcache","value":"pub fn clean_dcache(&mut Self, &mut CPUID)","parent":null,"children":[],"decl_id":null,"docs":" Cleans the entire D-cache.","sig":null,"attributes":[{"value":"/ Cleans the entire D-cache.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":85630,"byte_end":85660,"line_start":479,"line_end":479,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":85665,"byte_end":85668,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ This function causes everything in the D-cache to be written back to main memory,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":85673,"byte_end":85758,"line_start":481,"line_end":481,"column_start":5,"column_end":90}},{"value":"/ overwriting whatever is already there.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":85763,"byte_end":85805,"line_start":482,"line_end":482,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":85810,"byte_end":85819,"line_start":483,"line_end":483,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":86611,"byte_end":86634,"line_start":507,"line_end":507,"column_start":12,"column_end":35},"name":"clean_invalidate_dcache","qualname":"<SCB>::clean_invalidate_dcache","value":"pub fn clean_invalidate_dcache(&mut Self, &mut CPUID)","parent":null,"children":[],"decl_id":null,"docs":" Cleans and invalidates the entire D-cache.","sig":null,"attributes":[{"value":"/ Cleans and invalidates the entire D-cache.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":86325,"byte_end":86371,"line_start":501,"line_end":501,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":86376,"byte_end":86379,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ This function causes everything in the D-cache to be written back to main memory,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":86384,"byte_end":86469,"line_start":503,"line_end":503,"column_start":5,"column_end":90}},{"value":"/ and then marks the entire D-cache as invalid, causing future reads to first fetch","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":86474,"byte_end":86559,"line_start":504,"line_end":504,"column_start":5,"column_end":90}},{"value":"/ from main memory.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":86564,"byte_end":86585,"line_start":505,"line_end":505,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":86590,"byte_end":86599,"line_start":506,"line_end":506,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":89130,"byte_end":89158,"line_start":559,"line_end":559,"column_start":19,"column_end":47},"name":"invalidate_dcache_by_address","qualname":"<SCB>::invalidate_dcache_by_address","value":"pub unsafe fn invalidate_dcache_by_address(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Invalidates D-cache by address.","sig":null,"attributes":[{"value":"/ Invalidates D-cache by address.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":87117,"byte_end":87152,"line_start":524,"line_end":524,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":87157,"byte_end":87160,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ * `addr`: The address to invalidate, which must be cache-line aligned.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":87165,"byte_end":87239,"line_start":526,"line_end":526,"column_start":5,"column_end":79}},{"value":"/ * `size`: Number of bytes to invalidate, which must be a multiple of the cache line size.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":87244,"byte_end":87337,"line_start":527,"line_end":527,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":87342,"byte_end":87345,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ Invalidates D-cache cache lines, starting from the first line containing `addr`,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":87350,"byte_end":87434,"line_start":529,"line_end":529,"column_start":5,"column_end":89}},{"value":"/ finishing once at least `size` bytes have been invalidated.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":87439,"byte_end":87502,"line_start":530,"line_end":530,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":87507,"byte_end":87510,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ Invalidation causes the next read access to memory to be fetched from main memory instead","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":87515,"byte_end":87608,"line_start":532,"line_end":532,"column_start":5,"column_end":98}},{"value":"/ of the cache.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":87613,"byte_end":87630,"line_start":533,"line_end":533,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":87635,"byte_end":87638,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ # Cache Line Sizes","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":87643,"byte_end":87665,"line_start":535,"line_end":535,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":87670,"byte_end":87673,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ Cache line sizes vary by core. For all Cortex-M7 cores, the cache line size is fixed","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":87678,"byte_end":87766,"line_start":537,"line_end":537,"column_start":5,"column_end":93}},{"value":"/ to 32 bytes, which means `addr` must be 32-byte aligned and `size` must be a multiple","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":87771,"byte_end":87860,"line_start":538,"line_end":538,"column_start":5,"column_end":94}},{"value":"/ of 32. At the time of writing, no other Cortex-M cores have data caches.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":87865,"byte_end":87941,"line_start":539,"line_end":539,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":87946,"byte_end":87949,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ If `addr` is not cache-line aligned, or `size` is not a multiple of the cache line size,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":87954,"byte_end":88046,"line_start":541,"line_end":541,"column_start":5,"column_end":97}},{"value":"/ other data before or after the desired memory would also be invalidated, which can very","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":88051,"byte_end":88142,"line_start":542,"line_end":542,"column_start":5,"column_end":96}},{"value":"/ easily cause memory corruption and undefined behaviour.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":88147,"byte_end":88206,"line_start":543,"line_end":543,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":88211,"byte_end":88214,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":88219,"byte_end":88231,"line_start":545,"line_end":545,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":88236,"byte_end":88239,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ After invalidating, the next read of invalidated data will be from main memory. This may","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":88244,"byte_end":88336,"line_start":547,"line_end":547,"column_start":5,"column_end":97}},{"value":"/ cause recent writes to be lost, potentially including writes that initialized objects.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":88341,"byte_end":88431,"line_start":548,"line_end":548,"column_start":5,"column_end":95}},{"value":"/ Therefore, this method may cause uninitialized memory or invalid values to be read,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":88436,"byte_end":88523,"line_start":549,"line_end":549,"column_start":5,"column_end":92}},{"value":"/ resulting in undefined behaviour. You must ensure that main memory contains valid and","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":88528,"byte_end":88617,"line_start":550,"line_end":550,"column_start":5,"column_end":94}},{"value":"/ initialized values before invalidating.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":88622,"byte_end":88665,"line_start":551,"line_end":551,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":88670,"byte_end":88673,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ `addr` **must** be aligned to the size of the cache lines, and `size` **must** be a","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":88678,"byte_end":88765,"line_start":553,"line_end":553,"column_start":5,"column_end":92}},{"value":"/ multiple of the cache line size, otherwise this function will invalidate other memory,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":88770,"byte_end":88860,"line_start":554,"line_end":554,"column_start":5,"column_end":95}},{"value":"/ easily leading to memory corruption and undefined behaviour. This precondition is checked","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":88865,"byte_end":88958,"line_start":555,"line_end":555,"column_start":5,"column_end":98}},{"value":"/ in debug builds using a `debug_assert!()`, but not checked in release builds to avoid","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":88963,"byte_end":89052,"line_start":556,"line_end":556,"column_start":5,"column_end":94}},{"value":"/ a runtime-dependent `panic!()` call.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":89057,"byte_end":89097,"line_start":557,"line_end":557,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":89102,"byte_end":89111,"line_start":558,"line_end":558,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":92057,"byte_end":92081,"line_start":627,"line_end":627,"column_start":19,"column_end":43},"name":"invalidate_dcache_by_ref","qualname":"<SCB>::invalidate_dcache_by_ref","value":"pub unsafe fn invalidate_dcache_by_ref<T>(&mut Self, &mut T)","parent":null,"children":[],"decl_id":null,"docs":" Invalidates an object from the D-cache.","sig":null,"attributes":[{"value":"/ Invalidates an object from the D-cache.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":90138,"byte_end":90181,"line_start":593,"line_end":593,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":90186,"byte_end":90189,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ * `obj`: The object to invalidate.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":90194,"byte_end":90232,"line_start":595,"line_end":595,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":90237,"byte_end":90240,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ Invalidates D-cache starting from the first cache line containing `obj`,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":90245,"byte_end":90321,"line_start":597,"line_end":597,"column_start":5,"column_end":81}},{"value":"/ continuing to invalidate cache lines until all of `obj` has been invalidated.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":90326,"byte_end":90407,"line_start":598,"line_end":598,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":90412,"byte_end":90415,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ Invalidation causes the next read access to memory to be fetched from main memory instead","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":90420,"byte_end":90513,"line_start":600,"line_end":600,"column_start":5,"column_end":98}},{"value":"/ of the cache.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":90518,"byte_end":90535,"line_start":601,"line_end":601,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":90540,"byte_end":90543,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ # Cache Line Sizes","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":90548,"byte_end":90570,"line_start":603,"line_end":603,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":90575,"byte_end":90578,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ Cache line sizes vary by core. For all Cortex-M7 cores, the cache line size is fixed","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":90583,"byte_end":90671,"line_start":605,"line_end":605,"column_start":5,"column_end":93}},{"value":"/ to 32 bytes, which means `obj` must be 32-byte aligned, and its size must be a multiple","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":90676,"byte_end":90767,"line_start":606,"line_end":606,"column_start":5,"column_end":96}},{"value":"/ of 32 bytes. At the time of writing, no other Cortex-M cores have data caches.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":90772,"byte_end":90854,"line_start":607,"line_end":607,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":90859,"byte_end":90862,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ If `obj` is not cache-line aligned, or its size is not a multiple of the cache line size,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":90867,"byte_end":90960,"line_start":609,"line_end":609,"column_start":5,"column_end":98}},{"value":"/ other data before or after the desired memory would also be invalidated, which can very","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":90965,"byte_end":91056,"line_start":610,"line_end":610,"column_start":5,"column_end":96}},{"value":"/ easily cause memory corruption and undefined behaviour.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":91061,"byte_end":91120,"line_start":611,"line_end":611,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":91125,"byte_end":91128,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":91133,"byte_end":91145,"line_start":613,"line_end":613,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":91150,"byte_end":91153,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ After invalidating, `obj` will be read from main memory on next access. This may cause","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":91158,"byte_end":91248,"line_start":615,"line_end":615,"column_start":5,"column_end":95}},{"value":"/ recent writes to `obj` to be lost, potentially including the write that initialized it.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":91253,"byte_end":91344,"line_start":616,"line_end":616,"column_start":5,"column_end":96}},{"value":"/ Therefore, this method may cause uninitialized memory or invalid values to be read,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":91349,"byte_end":91436,"line_start":617,"line_end":617,"column_start":5,"column_end":92}},{"value":"/ resulting in undefined behaviour. You must ensure that main memory contains a valid and","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":91441,"byte_end":91532,"line_start":618,"line_end":618,"column_start":5,"column_end":96}},{"value":"/ initialized value for T before invalidating `obj`.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":91537,"byte_end":91591,"line_start":619,"line_end":619,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":91596,"byte_end":91599,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ `obj` **must** be aligned to the size of the cache lines, and its size **must** be a","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":91604,"byte_end":91692,"line_start":621,"line_end":621,"column_start":5,"column_end":93}},{"value":"/ multiple of the cache line size, otherwise this function will invalidate other memory,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":91697,"byte_end":91787,"line_start":622,"line_end":622,"column_start":5,"column_end":95}},{"value":"/ easily leading to memory corruption and undefined behaviour. This precondition is checked","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":91792,"byte_end":91885,"line_start":623,"line_end":623,"column_start":5,"column_end":98}},{"value":"/ in debug builds using a `debug_assert!()`, but not checked in release builds to avoid","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":91890,"byte_end":91979,"line_start":624,"line_end":624,"column_start":5,"column_end":94}},{"value":"/ a runtime-dependent `panic!()` call.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":91984,"byte_end":92024,"line_start":625,"line_end":625,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":92029,"byte_end":92038,"line_start":626,"line_end":626,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":94162,"byte_end":94188,"line_start":665,"line_end":665,"column_start":19,"column_end":45},"name":"invalidate_dcache_by_slice","qualname":"<SCB>::invalidate_dcache_by_slice","value":"pub unsafe fn invalidate_dcache_by_slice<T>(&mut Self, &mut [T])","parent":null,"children":[],"decl_id":null,"docs":" Invalidates a slice from the D-cache.","sig":null,"attributes":[{"value":"/ Invalidates a slice from the D-cache.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":92218,"byte_end":92259,"line_start":631,"line_end":631,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":92264,"byte_end":92267,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ * `slice`: The slice to invalidate.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":92272,"byte_end":92311,"line_start":633,"line_end":633,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":92316,"byte_end":92319,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ Invalidates D-cache starting from the first cache line containing members of `slice`,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":92324,"byte_end":92413,"line_start":635,"line_end":635,"column_start":5,"column_end":94}},{"value":"/ continuing to invalidate cache lines until all of `slice` has been invalidated.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":92418,"byte_end":92501,"line_start":636,"line_end":636,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":92506,"byte_end":92509,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ Invalidation causes the next read access to memory to be fetched from main memory instead","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":92514,"byte_end":92607,"line_start":638,"line_end":638,"column_start":5,"column_end":98}},{"value":"/ of the cache.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":92612,"byte_end":92629,"line_start":639,"line_end":639,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":92634,"byte_end":92637,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ # Cache Line Sizes","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":92642,"byte_end":92664,"line_start":641,"line_end":641,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":92669,"byte_end":92672,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ Cache line sizes vary by core. For all Cortex-M7 cores, the cache line size is fixed","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":92677,"byte_end":92765,"line_start":643,"line_end":643,"column_start":5,"column_end":93}},{"value":"/ to 32 bytes, which means `slice` must be 32-byte aligned, and its size must be a multiple","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":92770,"byte_end":92863,"line_start":644,"line_end":644,"column_start":5,"column_end":98}},{"value":"/ of 32 bytes. At the time of writing, no other Cortex-M cores have data caches.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":92868,"byte_end":92950,"line_start":645,"line_end":645,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":92955,"byte_end":92958,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ If `slice` is not cache-line aligned, or its size is not a multiple of the cache line size,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":92963,"byte_end":93058,"line_start":647,"line_end":647,"column_start":5,"column_end":100}},{"value":"/ other data before or after the desired memory would also be invalidated, which can very","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":93063,"byte_end":93154,"line_start":648,"line_end":648,"column_start":5,"column_end":96}},{"value":"/ easily cause memory corruption and undefined behaviour.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":93159,"byte_end":93218,"line_start":649,"line_end":649,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":93223,"byte_end":93226,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":93231,"byte_end":93243,"line_start":651,"line_end":651,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":93248,"byte_end":93251,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ After invalidating, `slice` will be read from main memory on next access. This may cause","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":93256,"byte_end":93348,"line_start":653,"line_end":653,"column_start":5,"column_end":97}},{"value":"/ recent writes to `slice` to be lost, potentially including the write that initialized it.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":93353,"byte_end":93446,"line_start":654,"line_end":654,"column_start":5,"column_end":98}},{"value":"/ Therefore, this method may cause uninitialized memory or invalid values to be read,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":93451,"byte_end":93538,"line_start":655,"line_end":655,"column_start":5,"column_end":92}},{"value":"/ resulting in undefined behaviour. You must ensure that main memory contains valid and","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":93543,"byte_end":93632,"line_start":656,"line_end":656,"column_start":5,"column_end":94}},{"value":"/ initialized values for T before invalidating `slice`.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":93637,"byte_end":93694,"line_start":657,"line_end":657,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":93699,"byte_end":93702,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ `slice` **must** be aligned to the size of the cache lines, and its size **must** be a","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":93707,"byte_end":93797,"line_start":659,"line_end":659,"column_start":5,"column_end":95}},{"value":"/ multiple of the cache line size, otherwise this function will invalidate other memory,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":93802,"byte_end":93892,"line_start":660,"line_end":660,"column_start":5,"column_end":95}},{"value":"/ easily leading to memory corruption and undefined behaviour. This precondition is checked","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":93897,"byte_end":93990,"line_start":661,"line_end":661,"column_start":5,"column_end":98}},{"value":"/ in debug builds using a `debug_assert!()`, but not checked in release builds to avoid","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":93995,"byte_end":94084,"line_start":662,"line_end":662,"column_start":5,"column_end":94}},{"value":"/ a runtime-dependent `panic!()` call.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":94089,"byte_end":94129,"line_start":663,"line_end":663,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":94134,"byte_end":94143,"line_start":664,"line_end":664,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":95533,"byte_end":95556,"line_start":694,"line_end":694,"column_start":12,"column_end":35},"name":"clean_dcache_by_address","qualname":"<SCB>::clean_dcache_by_address","value":"pub fn clean_dcache_by_address(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Cleans D-cache by address.","sig":null,"attributes":[{"value":"/ Cleans D-cache by address.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":94377,"byte_end":94407,"line_start":672,"line_end":672,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":94412,"byte_end":94415,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ * `addr`: The address to start cleaning at.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":94420,"byte_end":94467,"line_start":674,"line_end":674,"column_start":5,"column_end":52}},{"value":"/ * `size`: The number of bytes to clean.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":94472,"byte_end":94515,"line_start":675,"line_end":675,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":94520,"byte_end":94523,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ Cleans D-cache cache lines, starting from the first line containing `addr`,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":94528,"byte_end":94607,"line_start":677,"line_end":677,"column_start":5,"column_end":84}},{"value":"/ finishing once at least `size` bytes have been invalidated.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":94612,"byte_end":94675,"line_start":678,"line_end":678,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":94680,"byte_end":94683,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ Cleaning the cache causes whatever data is present in the cache to be immediately written","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":94688,"byte_end":94781,"line_start":680,"line_end":680,"column_start":5,"column_end":98}},{"value":"/ to main memory, overwriting whatever was in main memory.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":94786,"byte_end":94846,"line_start":681,"line_end":681,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":94851,"byte_end":94854,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ # Cache Line Sizes","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":94859,"byte_end":94881,"line_start":683,"line_end":683,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":94886,"byte_end":94889,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ Cache line sizes vary by core. For all Cortex-M7 cores, the cache line size is fixed","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":94894,"byte_end":94982,"line_start":685,"line_end":685,"column_start":5,"column_end":93}},{"value":"/ to 32 bytes, which means `addr` should generally be 32-byte aligned and `size` should be a","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":94987,"byte_end":95081,"line_start":686,"line_end":686,"column_start":5,"column_end":99}},{"value":"/ multiple of 32. At the time of writing, no other Cortex-M cores have data caches.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":95086,"byte_end":95171,"line_start":687,"line_end":687,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":95176,"byte_end":95179,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ If `addr` is not cache-line aligned, or `size` is not a multiple of the cache line size,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":95184,"byte_end":95276,"line_start":689,"line_end":689,"column_start":5,"column_end":97}},{"value":"/ other data before or after the desired memory will also be cleaned. From the point of view","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":95281,"byte_end":95375,"line_start":690,"line_end":690,"column_start":5,"column_end":99}},{"value":"/ of the core executing this function, memory remains consistent, so this is not unsound,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":95380,"byte_end":95471,"line_start":691,"line_end":691,"column_start":5,"column_end":96}},{"value":"/ but is worth knowing about.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":95476,"byte_end":95507,"line_start":692,"line_end":692,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":95512,"byte_end":95521,"line_start":693,"line_end":693,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":96886,"byte_end":96905,"line_start":734,"line_end":734,"column_start":12,"column_end":31},"name":"clean_dcache_by_ref","qualname":"<SCB>::clean_dcache_by_ref","value":"pub fn clean_dcache_by_ref<T>(&mut Self, &T)","parent":null,"children":[],"decl_id":null,"docs":" Cleans an object from the D-cache.","sig":null,"attributes":[{"value":"/ Cleans an object from the D-cache.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":96259,"byte_end":96297,"line_start":721,"line_end":721,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":96302,"byte_end":96305,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ * `obj`: The object to clean.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":96310,"byte_end":96343,"line_start":723,"line_end":723,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":96348,"byte_end":96351,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ Cleans D-cache starting from the first cache line containing `obj`,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":96356,"byte_end":96427,"line_start":725,"line_end":725,"column_start":5,"column_end":76}},{"value":"/ continuing to clean cache lines until all of `obj` has been cleaned.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":96432,"byte_end":96504,"line_start":726,"line_end":726,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":96509,"byte_end":96512,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ It is recommended that `obj` is both aligned to the cache line size and a multiple of","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":96517,"byte_end":96606,"line_start":728,"line_end":728,"column_start":5,"column_end":94}},{"value":"/ the cache line size long, otherwise surrounding data will also be cleaned.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":96611,"byte_end":96689,"line_start":729,"line_end":729,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":96694,"byte_end":96697,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ Cleaning the cache causes whatever data is present in the cache to be immediately written","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":96702,"byte_end":96795,"line_start":731,"line_end":731,"column_start":5,"column_end":98}},{"value":"/ to main memory, overwriting whatever was in main memory.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":96800,"byte_end":96860,"line_start":732,"line_end":732,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":96865,"byte_end":96874,"line_start":733,"line_end":733,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":97672,"byte_end":97693,"line_start":751,"line_end":751,"column_start":12,"column_end":33},"name":"clean_dcache_by_slice","qualname":"<SCB>::clean_dcache_by_slice","value":"pub fn clean_dcache_by_slice<T>(&mut Self, &[T])","parent":null,"children":[],"decl_id":null,"docs":" Cleans a slice from D-cache.","sig":null,"attributes":[{"value":"/ Cleans a slice from D-cache.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":97033,"byte_end":97065,"line_start":738,"line_end":738,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":97070,"byte_end":97073,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ * `slice`: The slice to clean.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":97078,"byte_end":97112,"line_start":740,"line_end":740,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":97117,"byte_end":97120,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ Cleans D-cache starting from the first cache line containing members of `slice`,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":97125,"byte_end":97209,"line_start":742,"line_end":742,"column_start":5,"column_end":89}},{"value":"/ continuing to clean cache lines until all of `slice` has been cleaned.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":97214,"byte_end":97288,"line_start":743,"line_end":743,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":97293,"byte_end":97296,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ It is recommended that `slice` is both aligned to the cache line size and a multiple of","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":97301,"byte_end":97392,"line_start":745,"line_end":745,"column_start":5,"column_end":96}},{"value":"/ the cache line size long, otherwise surrounding data will also be cleaned.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":97397,"byte_end":97475,"line_start":746,"line_end":746,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":97480,"byte_end":97483,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ Cleaning the cache causes whatever data is present in the cache to be immediately written","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":97488,"byte_end":97581,"line_start":748,"line_end":748,"column_start":5,"column_end":98}},{"value":"/ to main memory, overwriting whatever was in main memory.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":97586,"byte_end":97646,"line_start":749,"line_end":749,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":97651,"byte_end":97660,"line_start":750,"line_end":750,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":98664,"byte_end":98698,"line_start":773,"line_end":773,"column_start":12,"column_end":46},"name":"clean_invalidate_dcache_by_address","qualname":"<SCB>::clean_invalidate_dcache_by_address","value":"pub fn clean_invalidate_dcache_by_address(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Cleans and invalidates D-cache by address.","sig":null,"attributes":[{"value":"/ Cleans and invalidates D-cache by address.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":97873,"byte_end":97919,"line_start":758,"line_end":758,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":97924,"byte_end":97927,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ * `addr`: The address to clean and invalidate.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":97932,"byte_end":97982,"line_start":760,"line_end":760,"column_start":5,"column_end":55}},{"value":"/ * `size`: The number of bytes to clean and invalidate.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":97987,"byte_end":98045,"line_start":761,"line_end":761,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":98050,"byte_end":98053,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ Cleans and invalidates D-cache starting from the first cache line containing `addr`,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":98058,"byte_end":98146,"line_start":763,"line_end":763,"column_start":5,"column_end":93}},{"value":"/ finishing once at least `size` bytes have been cleaned and invalidated.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":98151,"byte_end":98226,"line_start":764,"line_end":764,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":98231,"byte_end":98234,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ It is recommended that `addr` is aligned to the cache line size and `size` is a multiple of","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":98239,"byte_end":98334,"line_start":766,"line_end":766,"column_start":5,"column_end":100}},{"value":"/ the cache line size, otherwise surrounding data will also be cleaned.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":98339,"byte_end":98412,"line_start":767,"line_end":767,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":98417,"byte_end":98420,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ Cleaning and invalidating causes data in the D-cache to be written back to main memory,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":98425,"byte_end":98516,"line_start":769,"line_end":769,"column_start":5,"column_end":96}},{"value":"/ and then marks that data in the D-cache as invalid, causing future reads to first fetch","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":98521,"byte_end":98612,"line_start":770,"line_end":770,"column_start":5,"column_end":96}},{"value":"/ from main memory.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":98617,"byte_end":98638,"line_start":771,"line_end":771,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":98643,"byte_end":98652,"line_start":772,"line_end":772,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":99518,"byte_end":99531,"line_start":805,"line_end":805,"column_start":12,"column_end":25},"name":"set_sleepdeep","qualname":"<SCB>::set_sleepdeep","value":"pub fn set_sleepdeep(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Set the SLEEPDEEP bit in the SCR register\n","sig":null,"attributes":[{"value":"/ Set the SLEEPDEEP bit in the SCR register","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":99447,"byte_end":99492,"line_start":803,"line_end":803,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":99497,"byte_end":99506,"line_start":804,"line_end":804,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":99716,"byte_end":99731,"line_start":813,"line_end":813,"column_start":12,"column_end":27},"name":"clear_sleepdeep","qualname":"<SCB>::clear_sleepdeep","value":"pub fn clear_sleepdeep(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear the SLEEPDEEP bit in the SCR register\n","sig":null,"attributes":[{"value":"/ Clear the SLEEPDEEP bit in the SCR register","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":99643,"byte_end":99690,"line_start":811,"line_end":811,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":99695,"byte_end":99704,"line_start":812,"line_end":812,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":99974,"byte_end":99989,"line_start":825,"line_end":825,"column_start":12,"column_end":27},"name":"set_sleeponexit","qualname":"<SCB>::set_sleeponexit","value":"pub fn set_sleeponexit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Set the SLEEPONEXIT bit in the SCR register\n","sig":null,"attributes":[{"value":"/ Set the SLEEPONEXIT bit in the SCR register","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":99901,"byte_end":99948,"line_start":823,"line_end":823,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":99953,"byte_end":99962,"line_start":824,"line_end":824,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":100178,"byte_end":100195,"line_start":833,"line_end":833,"column_start":12,"column_end":29},"name":"clear_sleeponexit","qualname":"<SCB>::clear_sleeponexit","value":"pub fn clear_sleeponexit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear the SLEEPONEXIT bit in the SCR register\n","sig":null,"attributes":[{"value":"/ Clear the SLEEPONEXIT bit in the SCR register","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":100103,"byte_end":100152,"line_start":831,"line_end":831,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":100157,"byte_end":100166,"line_start":832,"line_end":832,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":100537,"byte_end":100546,"line_start":847,"line_end":847,"column_start":12,"column_end":21},"name":"sys_reset","qualname":"<SCB>::sys_reset","value":"pub fn sys_reset() -> !","parent":null,"children":[],"decl_id":null,"docs":" Initiate a system reset request to reset the MCU\n","sig":null,"attributes":[{"value":"/ Initiate a system reset request to reset the MCU","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":100459,"byte_end":100511,"line_start":845,"line_end":845,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":100516,"byte_end":100525,"line_start":846,"line_end":846,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":101351,"byte_end":101361,"line_start":875,"line_end":875,"column_start":12,"column_end":22},"name":"set_pendsv","qualname":"<SCB>::set_pendsv","value":"pub fn set_pendsv()","parent":null,"children":[],"decl_id":null,"docs":" Set the PENDSVSET bit in the ICSR register which will pend the PendSV interrupt\n","sig":null,"attributes":[{"value":"/ Set the PENDSVSET bit in the ICSR register which will pend the PendSV interrupt","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":101242,"byte_end":101325,"line_start":873,"line_end":873,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":101330,"byte_end":101339,"line_start":874,"line_end":874,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":101579,"byte_end":101596,"line_start":883,"line_end":883,"column_start":12,"column_end":29},"name":"is_pendsv_pending","qualname":"<SCB>::is_pendsv_pending","value":"pub fn is_pendsv_pending() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if PENDSVSET bit in the ICSR register is set meaning PendSV interrupt is pending\n","sig":null,"attributes":[{"value":"/ Check if PENDSVSET bit in the ICSR register is set meaning PendSV interrupt is pending","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":101463,"byte_end":101553,"line_start":881,"line_end":881,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":101558,"byte_end":101567,"line_start":882,"line_end":882,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":101825,"byte_end":101837,"line_start":889,"line_end":889,"column_start":12,"column_end":24},"name":"clear_pendsv","qualname":"<SCB>::clear_pendsv","value":"pub fn clear_pendsv()","parent":null,"children":[],"decl_id":null,"docs":" Set the PENDSVCLR bit in the ICSR register which will clear a pending PendSV interrupt\n","sig":null,"attributes":[{"value":"/ Set the PENDSVCLR bit in the ICSR register which will clear a pending PendSV interrupt","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":101709,"byte_end":101799,"line_start":887,"line_end":887,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":101804,"byte_end":101813,"line_start":888,"line_end":888,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":102047,"byte_end":102057,"line_start":897,"line_end":897,"column_start":12,"column_end":22},"name":"set_pendst","qualname":"<SCB>::set_pendst","value":"pub fn set_pendst()","parent":null,"children":[],"decl_id":null,"docs":" Set the PENDSTSET bit in the ICSR register which will pend a SysTick interrupt\n","sig":null,"attributes":[{"value":"/ Set the PENDSTSET bit in the ICSR register which will pend a SysTick interrupt","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":101939,"byte_end":102021,"line_start":895,"line_end":895,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":102026,"byte_end":102035,"line_start":896,"line_end":896,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":102276,"byte_end":102293,"line_start":905,"line_end":905,"column_start":12,"column_end":29},"name":"is_pendst_pending","qualname":"<SCB>::is_pendst_pending","value":"pub fn is_pendst_pending() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if PENDSTSET bit in the ICSR register is set meaning SysTick interrupt is pending\n","sig":null,"attributes":[{"value":"/ Check if PENDSTSET bit in the ICSR register is set meaning SysTick interrupt is pending","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":102159,"byte_end":102250,"line_start":903,"line_end":903,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":102255,"byte_end":102264,"line_start":904,"line_end":904,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":102523,"byte_end":102535,"line_start":911,"line_end":911,"column_start":12,"column_end":24},"name":"clear_pendst","qualname":"<SCB>::clear_pendst","value":"pub fn clear_pendst()","parent":null,"children":[],"decl_id":null,"docs":" Set the PENDSTCLR bit in the ICSR register which will clear a pending SysTick interrupt\n","sig":null,"attributes":[{"value":"/ Set the PENDSTCLR bit in the ICSR register which will clear a pending SysTick interrupt","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":102406,"byte_end":102497,"line_start":909,"line_end":909,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":102502,"byte_end":102511,"line_start":910,"line_end":910,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1021},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":102959,"byte_end":102975,"line_start":926,"line_end":926,"column_start":5,"column_end":21},"name":"MemoryManagement","qualname":"::peripheral::scb::SystemHandler::MemoryManagement","value":"SystemHandler::MemoryManagement","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Memory management interrupt (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Memory management interrupt (not present on Cortex-M0 variants)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":102863,"byte_end":102930,"line_start":924,"line_end":924,"column_start":5,"column_end":72}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":102935,"byte_end":102954,"line_start":925,"line_end":925,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1024},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":103074,"byte_end":103082,"line_start":930,"line_end":930,"column_start":5,"column_end":13},"name":"BusFault","qualname":"::peripheral::scb::SystemHandler::BusFault","value":"SystemHandler::BusFault","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Bus fault interrupt (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Bus fault interrupt (not present on Cortex-M0 variants)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":102986,"byte_end":103045,"line_start":928,"line_end":928,"column_start":5,"column_end":64}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":103050,"byte_end":103069,"line_start":929,"line_end":929,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1027},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":103183,"byte_end":103193,"line_start":934,"line_end":934,"column_start":5,"column_end":15},"name":"UsageFault","qualname":"::peripheral::scb::SystemHandler::UsageFault","value":"SystemHandler::UsageFault","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Usage fault interrupt (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Usage fault interrupt (not present on Cortex-M0 variants)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":103093,"byte_end":103154,"line_start":932,"line_end":932,"column_start":5,"column_end":66}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":103159,"byte_end":103178,"line_start":933,"line_end":933,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1030},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":103333,"byte_end":103339,"line_start":941,"line_end":941,"column_start":5,"column_end":11},"name":"SVCall","qualname":"::peripheral::scb::SystemHandler::SVCall","value":"SystemHandler::SVCall","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" SV call interrupt\n","sig":null,"attributes":[{"value":"/ SV call interrupt","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":103307,"byte_end":103328,"line_start":940,"line_end":940,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1033},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":103443,"byte_end":103455,"line_start":945,"line_end":945,"column_start":5,"column_end":17},"name":"DebugMonitor","qualname":"::peripheral::scb::SystemHandler::DebugMonitor","value":"SystemHandler::DebugMonitor","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Debug monitor interrupt (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Debug monitor interrupt (not present on Cortex-M0 variants)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":103351,"byte_end":103414,"line_start":943,"line_end":943,"column_start":5,"column_end":68}},{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":103419,"byte_end":103438,"line_start":944,"line_end":944,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1036},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":103493,"byte_end":103499,"line_start":948,"line_end":948,"column_start":5,"column_end":11},"name":"PendSV","qualname":"::peripheral::scb::SystemHandler::PendSV","value":"SystemHandler::PendSV","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Pend SV interrupt\n","sig":null,"attributes":[{"value":"/ Pend SV interrupt","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":103467,"byte_end":103488,"line_start":947,"line_end":947,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1039},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":103541,"byte_end":103548,"line_start":951,"line_end":951,"column_start":5,"column_end":12},"name":"SysTick","qualname":"::peripheral::scb::SystemHandler::SysTick","value":"SystemHandler::SysTick","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" System Tick interrupt\n","sig":null,"attributes":[{"value":"/ System Tick interrupt","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":103511,"byte_end":103536,"line_start":950,"line_end":950,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1020},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":102760,"byte_end":102773,"line_start":921,"line_end":921,"column_start":10,"column_end":23},"name":"SystemHandler","qualname":"::peripheral::scb::SystemHandler","value":"pub enum SystemHandler {\n    MemoryManagement = ,\n    BusFault = ,\n    UsageFault = ,\n    SVCall = ,\n    DebugMonitor = ,\n    PendSV = ,\n    SysTick = ,\n}","parent":null,"children":[{"krate":0,"index":1021},{"krate":0,"index":1024},{"krate":0,"index":1027},{"krate":0,"index":1030},{"krate":0,"index":1033},{"krate":0,"index":1036},{"krate":0,"index":1039}],"decl_id":null,"docs":" System handlers, exceptions with configurable priority\n","sig":null,"attributes":[{"value":"/ System handlers, exceptions with configurable priority","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":102635,"byte_end":102693,"line_start":918,"line_end":918,"column_start":1,"column_end":59}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":102739,"byte_end":102750,"line_start":920,"line_end":920,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":103832,"byte_end":103844,"line_start":960,"line_end":960,"column_start":12,"column_end":24},"name":"get_priority","qualname":"<SCB>::get_priority","value":"pub fn get_priority(SystemHandler) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the hardware priority of `system_handler`","sig":null,"attributes":[{"value":"/ Returns the hardware priority of `system_handler`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":103573,"byte_end":103626,"line_start":955,"line_end":955,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":103631,"byte_end":103634,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ *NOTE*: Hardware priority does not exactly match logical priority levels. See","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":103639,"byte_end":103720,"line_start":957,"line_end":957,"column_start":5,"column_end":86}},{"value":"/ [`NVIC.get_priority`](struct.NVIC.html#method.get_priority) for more details.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":103725,"byte_end":103806,"line_start":958,"line_end":958,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":103811,"byte_end":103820,"line_start":959,"line_end":959,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":105585,"byte_end":105597,"line_start":1005,"line_end":1005,"column_start":19,"column_end":31},"name":"set_priority","qualname":"<SCB>::set_priority","value":"pub unsafe fn set_priority(&mut Self, SystemHandler, u8)","parent":null,"children":[],"decl_id":null,"docs":" Sets the hardware priority of `system_handler` to `prio`","sig":null,"attributes":[{"value":"/ Sets the hardware priority of `system_handler` to `prio`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":104922,"byte_end":104982,"line_start":992,"line_end":992,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":104987,"byte_end":104990,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ *NOTE*: Hardware priority does not exactly match logical priority levels. See","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":104995,"byte_end":105076,"line_start":994,"line_end":994,"column_start":5,"column_end":86}},{"value":"/ [`NVIC.get_priority`](struct.NVIC.html#method.get_priority) for more details.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":105081,"byte_end":105162,"line_start":995,"line_end":995,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":105167,"byte_end":105170,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ On ARMv6-M, updating a system handler priority requires a read-modify-write operation. On","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":105175,"byte_end":105268,"line_start":997,"line_end":997,"column_start":5,"column_end":98}},{"value":"/ ARMv7-M, the operation is performed in a single, atomic write operation.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":105273,"byte_end":105349,"line_start":998,"line_end":998,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":105354,"byte_end":105357,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ # Unsafety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":105362,"byte_end":105376,"line_start":1000,"line_end":1000,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":105381,"byte_end":105384,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/ Changing priority levels can break priority-based critical sections (see","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":105389,"byte_end":105465,"line_start":1002,"line_end":1002,"column_start":5,"column_end":81}},{"value":"/ [`register::basepri`](crate::register::basepri)) and compromise memory safety.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":105470,"byte_end":105552,"line_start":1003,"line_end":1003,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":105557,"byte_end":105566,"line_start":1004,"line_end":1004,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":107654,"byte_end":107660,"line_start":1062,"line_end":1062,"column_start":12,"column_end":18},"name":"enable","qualname":"<SCB>::enable","value":"pub fn enable(&mut Self, Exception)","parent":null,"children":[],"decl_id":null,"docs":" Enable the exception","sig":null,"attributes":[{"value":"/ Enable the exception","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":107119,"byte_end":107143,"line_start":1049,"line_end":1049,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":107148,"byte_end":107151,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ If the exception is enabled, when the exception is triggered, the exception handler will be executed instead of the","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":107156,"byte_end":107275,"line_start":1051,"line_end":1051,"column_start":5,"column_end":124}},{"value":"/ HardFault handler.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":107280,"byte_end":107302,"line_start":1052,"line_end":1052,"column_start":5,"column_end":27}},{"value":"/ This function is only allowed on the following exceptions:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":107307,"byte_end":107369,"line_start":1053,"line_end":1053,"column_start":5,"column_end":67}},{"value":"/ * `MemoryManagement`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":107374,"byte_end":107398,"line_start":1054,"line_end":1054,"column_start":5,"column_end":29}},{"value":"/ * `BusFault`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":107403,"byte_end":107419,"line_start":1055,"line_end":1055,"column_start":5,"column_end":21}},{"value":"/ * `UsageFault`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":107424,"byte_end":107442,"line_start":1056,"line_end":1056,"column_start":5,"column_end":23}},{"value":"/ * `SecureFault` (can only be enabled from Secure state)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":107447,"byte_end":107506,"line_start":1057,"line_end":1057,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":107511,"byte_end":107514,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ Calling this function with any other exception will do nothing.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":107519,"byte_end":107586,"line_start":1059,"line_end":1059,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":107591,"byte_end":107600,"line_start":1060,"line_end":1060,"column_start":5,"column_end":14}},{"value":"cfg(not(any(armv6m, armv8m_base)))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":107605,"byte_end":107642,"line_start":1061,"line_end":1061,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":108521,"byte_end":108528,"line_start":1083,"line_end":1083,"column_start":12,"column_end":19},"name":"disable","qualname":"<SCB>::disable","value":"pub fn disable(&mut Self, Exception)","parent":null,"children":[],"decl_id":null,"docs":" Disable the exception","sig":null,"attributes":[{"value":"/ Disable the exception","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":107981,"byte_end":108006,"line_start":1070,"line_end":1070,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":108011,"byte_end":108014,"line_start":1071,"line_end":1071,"column_start":5,"column_end":8}},{"value":"/ If the exception is disabled, when the exception is triggered, the HardFault handler will be executed instead of the","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":108019,"byte_end":108139,"line_start":1072,"line_end":1072,"column_start":5,"column_end":125}},{"value":"/ exception handler.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":108144,"byte_end":108166,"line_start":1073,"line_end":1073,"column_start":5,"column_end":27}},{"value":"/ This function is only allowed on the following exceptions:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":108171,"byte_end":108233,"line_start":1074,"line_end":1074,"column_start":5,"column_end":67}},{"value":"/ * `MemoryManagement`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":108238,"byte_end":108262,"line_start":1075,"line_end":1075,"column_start":5,"column_end":29}},{"value":"/ * `BusFault`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":108267,"byte_end":108283,"line_start":1076,"line_end":1076,"column_start":5,"column_end":21}},{"value":"/ * `UsageFault`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":108288,"byte_end":108306,"line_start":1077,"line_end":1077,"column_start":5,"column_end":23}},{"value":"/ * `SecureFault` (can not be changed from Non-secure state)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":108311,"byte_end":108373,"line_start":1078,"line_end":1078,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":108378,"byte_end":108381,"line_start":1079,"line_end":1079,"column_start":5,"column_end":8}},{"value":"/ Calling this function with any other exception will do nothing.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":108386,"byte_end":108453,"line_start":1080,"line_end":1080,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":108458,"byte_end":108467,"line_start":1081,"line_end":1081,"column_start":5,"column_end":14}},{"value":"cfg(not(any(armv6m, armv8m_base)))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":108472,"byte_end":108509,"line_start":1082,"line_end":1082,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":109247,"byte_end":109257,"line_start":1102,"line_end":1102,"column_start":12,"column_end":22},"name":"is_enabled","qualname":"<SCB>::is_enabled","value":"pub fn is_enabled(&Self, Exception) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if an exception is enabled","sig":null,"attributes":[{"value":"/ Check if an exception is enabled","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":108850,"byte_end":108886,"line_start":1091,"line_end":1091,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":108891,"byte_end":108894,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ This function is only allowed on the following exception:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":108899,"byte_end":108960,"line_start":1093,"line_end":1093,"column_start":5,"column_end":66}},{"value":"/ * `MemoryManagement`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":108965,"byte_end":108989,"line_start":1094,"line_end":1094,"column_start":5,"column_end":29}},{"value":"/ * `BusFault`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":108994,"byte_end":109010,"line_start":1095,"line_end":1095,"column_start":5,"column_end":21}},{"value":"/ * `UsageFault`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":109015,"byte_end":109033,"line_start":1096,"line_end":1096,"column_start":5,"column_end":23}},{"value":"/ * `SecureFault` (can not be read from Non-secure state)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":109038,"byte_end":109097,"line_start":1097,"line_end":1097,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":109102,"byte_end":109105,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ Calling this function with any other exception will read `false`.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":109110,"byte_end":109179,"line_start":1099,"line_end":1099,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":109184,"byte_end":109193,"line_start":1100,"line_end":1100,"column_start":5,"column_end":14}},{"value":"cfg(not(any(armv6m, armv8m_base)))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":109198,"byte_end":109235,"line_start":1101,"line_end":1101,"column_start":5,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":596},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"syst","qualname":"::peripheral::syst","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":601},{"krate":0,"index":604},{"krate":0,"index":607},{"krate":0,"index":1053},{"krate":0,"index":1058},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619}],"decl_id":null,"docs":" SysTick: System Timer\n","sig":null,"attributes":[{"value":"/ SysTick: System Timer","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":109468,"byte_end":109493,"line_start":1,"line_end":1,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":607},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":109600,"byte_end":109613,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::syst::RegisterBlock","value":"RegisterBlock { csr, rvr, cvr, calib }","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611}],"decl_id":null,"docs":" Register block\n","sig":null,"attributes":[{"value":"/ Register block","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":109559,"byte_end":109577,"line_start":7,"line_end":7,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":109578,"byte_end":109588,"line_start":8,"line_end":8,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":608},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":109651,"byte_end":109654,"line_start":11,"line_end":11,"column_start":9,"column_end":12},"name":"csr","qualname":"::peripheral::syst::RegisterBlock::csr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":607},"children":[],"decl_id":null,"docs":" Control and Status\n","sig":null,"attributes":[{"value":"/ Control and Status","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":109620,"byte_end":109642,"line_start":10,"line_end":10,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":609},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":109694,"byte_end":109697,"line_start":13,"line_end":13,"column_start":9,"column_end":12},"name":"rvr","qualname":"::peripheral::syst::RegisterBlock::rvr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":607},"children":[],"decl_id":null,"docs":" Reload Value\n","sig":null,"attributes":[{"value":"/ Reload Value","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":109669,"byte_end":109685,"line_start":12,"line_end":12,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":610},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":109738,"byte_end":109741,"line_start":15,"line_end":15,"column_start":9,"column_end":12},"name":"cvr","qualname":"::peripheral::syst::RegisterBlock::cvr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":607},"children":[],"decl_id":null,"docs":" Current Value\n","sig":null,"attributes":[{"value":"/ Current Value","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":109712,"byte_end":109729,"line_start":14,"line_end":14,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":611},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":109786,"byte_end":109791,"line_start":17,"line_end":17,"column_start":9,"column_end":14},"name":"calib","qualname":"::peripheral::syst::RegisterBlock::calib","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":607},"children":[],"decl_id":null,"docs":" Calibration Value\n","sig":null,"attributes":[{"value":"/ Calibration Value","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":109756,"byte_end":109777,"line_start":16,"line_end":16,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1054},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":109932,"byte_end":109936,"line_start":24,"line_end":24,"column_start":5,"column_end":9},"name":"Core","qualname":"::peripheral::syst::SystClkSource::Core","value":"SystClkSource::Core","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Core-provided clock\n","sig":null,"attributes":[{"value":"/ Core-provided clock","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":109904,"byte_end":109927,"line_start":23,"line_end":23,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1056},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":109975,"byte_end":109983,"line_start":26,"line_end":26,"column_start":5,"column_end":13},"name":"External","qualname":"::peripheral::syst::SystClkSource::External","value":"SystClkSource::External","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" External reference clock\n","sig":null,"attributes":[{"value":"/ External reference clock","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":109942,"byte_end":109970,"line_start":25,"line_end":25,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":1053},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":109884,"byte_end":109897,"line_start":22,"line_end":22,"column_start":10,"column_end":23},"name":"SystClkSource","qualname":"::peripheral::syst::SystClkSource","value":"pub enum SystClkSource { Core, External, }","parent":null,"children":[{"krate":0,"index":1054},{"krate":0,"index":1056}],"decl_id":null,"docs":" SysTick clock source\n","sig":null,"attributes":[{"value":"/ SysTick clock source","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":109805,"byte_end":109829,"line_start":20,"line_end":20,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":110442,"byte_end":110455,"line_start":44,"line_end":44,"column_start":12,"column_end":25},"name":"clear_current","qualname":"<SYST>::clear_current","value":"pub fn clear_current(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears current value to 0","sig":null,"attributes":[{"value":"/ Clears current value to 0","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":110284,"byte_end":110313,"line_start":40,"line_end":40,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":110318,"byte_end":110321,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ After calling `clear_current()`, the next call to `has_wrapped()` will return `false`.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":110326,"byte_end":110416,"line_start":42,"line_end":42,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":110421,"byte_end":110430,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":110563,"byte_end":110578,"line_start":50,"line_end":50,"column_start":12,"column_end":27},"name":"disable_counter","qualname":"<SYST>::disable_counter","value":"pub fn disable_counter(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disables counter\n","sig":null,"attributes":[{"value":"/ Disables counter","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":110517,"byte_end":110537,"line_start":48,"line_end":48,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":110542,"byte_end":110551,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":110720,"byte_end":110737,"line_start":56,"line_end":56,"column_start":12,"column_end":29},"name":"disable_interrupt","qualname":"<SYST>::disable_interrupt","value":"pub fn disable_interrupt(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disables SysTick interrupt\n","sig":null,"attributes":[{"value":"/ Disables SysTick interrupt","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":110664,"byte_end":110694,"line_start":54,"line_end":54,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":110699,"byte_end":110708,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":111312,"byte_end":111326,"line_start":73,"line_end":73,"column_start":12,"column_end":26},"name":"enable_counter","qualname":"<SYST>::enable_counter","value":"pub fn enable_counter(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Enables counter","sig":null,"attributes":[{"value":"/ Enables counter","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":110824,"byte_end":110843,"line_start":60,"line_end":60,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":110848,"byte_end":110851,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ *NOTE* The reference manual indicates that:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":110856,"byte_end":110903,"line_start":62,"line_end":62,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":110908,"byte_end":110911,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ \"The SysTick counter reload and current value are undefined at reset, the correct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":110916,"byte_end":111001,"line_start":64,"line_end":64,"column_start":5,"column_end":90}},{"value":"/ initialization sequence for the SysTick counter is:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":111006,"byte_end":111061,"line_start":65,"line_end":65,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":111066,"byte_end":111069,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ - Program reload value","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":111074,"byte_end":111100,"line_start":67,"line_end":67,"column_start":5,"column_end":31}},{"value":"/ - Clear current value","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":111105,"byte_end":111130,"line_start":68,"line_end":68,"column_start":5,"column_end":30}},{"value":"/ - Program Control and Status register\"","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":111135,"byte_end":111177,"line_start":69,"line_end":69,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":111182,"byte_end":111185,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ The sequence translates to `self.set_reload(x); self.clear_current(); self.enable_counter()`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":111190,"byte_end":111286,"line_start":71,"line_end":71,"column_start":5,"column_end":101}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":111291,"byte_end":111300,"line_start":72,"line_end":72,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":111466,"byte_end":111482,"line_start":79,"line_end":79,"column_start":12,"column_end":28},"name":"enable_interrupt","qualname":"<SYST>::enable_interrupt","value":"pub fn enable_interrupt(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Enables SysTick interrupt\n","sig":null,"attributes":[{"value":"/ Enables SysTick interrupt","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":111411,"byte_end":111440,"line_start":77,"line_end":77,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":111445,"byte_end":111454,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":111803,"byte_end":111819,"line_start":88,"line_end":88,"column_start":12,"column_end":28},"name":"get_clock_source","qualname":"<SYST>::get_clock_source","value":"pub fn get_clock_source(&mut Self) -> SystClkSource","parent":null,"children":[],"decl_id":null,"docs":" Gets clock source","sig":null,"attributes":[{"value":"/ Gets clock source","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":111568,"byte_end":111589,"line_start":83,"line_end":83,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":111594,"byte_end":111597,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ *NOTE* This takes `&mut self` because the read operation is side effectful and can clear the","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":111602,"byte_end":111698,"line_start":85,"line_end":85,"column_start":5,"column_end":101}},{"value":"/ bit that indicates that the timer has wrapped (cf. `SYST.has_wrapped`)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":111703,"byte_end":111777,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":111782,"byte_end":111791,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":112116,"byte_end":112127,"line_start":99,"line_end":99,"column_start":12,"column_end":23},"name":"get_current","qualname":"<SYST>::get_current","value":"pub fn get_current() -> u32","parent":null,"children":[],"decl_id":null,"docs":" Gets current value\n","sig":null,"attributes":[{"value":"/ Gets current value","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":112068,"byte_end":112090,"line_start":97,"line_end":97,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":112095,"byte_end":112104,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":112299,"byte_end":112309,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"get_reload","qualname":"<SYST>::get_reload","value":"pub fn get_reload() -> u32","parent":null,"children":[],"decl_id":null,"docs":" Gets reload value\n","sig":null,"attributes":[{"value":"/ Gets reload value","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":112252,"byte_end":112273,"line_start":104,"line_end":104,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":112278,"byte_end":112287,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":112656,"byte_end":112674,"line_start":117,"line_end":117,"column_start":12,"column_end":30},"name":"get_ticks_per_10ms","qualname":"<SYST>::get_ticks_per_10ms","value":"pub fn get_ticks_per_10ms() -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the reload value with which the counter would wrap once per 10\n ms","sig":null,"attributes":[{"value":"/ Returns the reload value with which the counter would wrap once per 10","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":112434,"byte_end":112508,"line_start":111,"line_end":111,"column_start":5,"column_end":79}},{"value":"/ ms","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":112513,"byte_end":112519,"line_start":112,"line_end":112,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":112524,"byte_end":112527,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Returns `0` if the value is not known (e.g. because the clock can","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":112532,"byte_end":112601,"line_start":114,"line_end":114,"column_start":5,"column_end":74}},{"value":"/ change dynamically).","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":112606,"byte_end":112630,"line_start":115,"line_end":115,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":112635,"byte_end":112644,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":112901,"byte_end":112920,"line_start":124,"line_end":124,"column_start":12,"column_end":31},"name":"has_reference_clock","qualname":"<SYST>::has_reference_clock","value":"pub fn has_reference_clock() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if an external reference clock is available\n","sig":null,"attributes":[{"value":"/ Checks if an external reference clock is available","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":112821,"byte_end":112875,"line_start":122,"line_end":122,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":112880,"byte_end":112889,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":113310,"byte_end":113321,"line_start":134,"line_end":134,"column_start":12,"column_end":23},"name":"has_wrapped","qualname":"<SYST>::has_wrapped","value":"pub fn has_wrapped(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the counter wrapped (underflowed) since the last check","sig":null,"attributes":[{"value":"/ Checks if the counter wrapped (underflowed) since the last check","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":113072,"byte_end":113140,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":113145,"byte_end":113148,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ *NOTE* This takes `&mut self` because the read operation is side effectful and will clear","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":113153,"byte_end":113246,"line_start":131,"line_end":131,"column_start":5,"column_end":98}},{"value":"/ the bit of the read register.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":113251,"byte_end":113284,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":113289,"byte_end":113298,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":113650,"byte_end":113668,"line_start":143,"line_end":143,"column_start":12,"column_end":30},"name":"is_counter_enabled","qualname":"<SYST>::is_counter_enabled","value":"pub fn is_counter_enabled(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if counter is enabled","sig":null,"attributes":[{"value":"/ Checks if counter is enabled","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":113404,"byte_end":113436,"line_start":138,"line_end":138,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":113441,"byte_end":113444,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ *NOTE* This takes `&mut self` because the read operation is side effectful and can clear the","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":113449,"byte_end":113545,"line_start":140,"line_end":140,"column_start":5,"column_end":101}},{"value":"/ bit that indicates that the timer has wrapped (cf. `SYST.has_wrapped`)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":113550,"byte_end":113624,"line_start":141,"line_end":141,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":113629,"byte_end":113638,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":114004,"byte_end":114024,"line_start":152,"line_end":152,"column_start":12,"column_end":32},"name":"is_interrupt_enabled","qualname":"<SYST>::is_interrupt_enabled","value":"pub fn is_interrupt_enabled(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if SysTick interrupt is enabled","sig":null,"attributes":[{"value":"/ Checks if SysTick interrupt is enabled","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":113748,"byte_end":113790,"line_start":147,"line_end":147,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":113795,"byte_end":113798,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ *NOTE* This takes `&mut self` because the read operation is side effectful and can clear the","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":113803,"byte_end":113899,"line_start":149,"line_end":149,"column_start":5,"column_end":101}},{"value":"/ bit that indicates that the timer has wrapped (cf. `SYST.has_wrapped`)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":113904,"byte_end":113978,"line_start":150,"line_end":150,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":113983,"byte_end":113992,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":114345,"byte_end":114355,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"is_precise","qualname":"<SYST>::is_precise","value":"pub fn is_precise() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the calibration value is precise","sig":null,"attributes":[{"value":"/ Checks if the calibration value is precise","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":114105,"byte_end":114151,"line_start":156,"line_end":156,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":114156,"byte_end":114159,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Returns `false` if using the reload value returned by","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":114164,"byte_end":114221,"line_start":158,"line_end":158,"column_start":5,"column_end":62}},{"value":"/ `get_ticks_per_10ms()` may result in a period significantly deviating","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":114226,"byte_end":114299,"line_start":159,"line_end":159,"column_start":5,"column_end":78}},{"value":"/ from 10 ms.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":114304,"byte_end":114319,"line_start":160,"line_end":160,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":114324,"byte_end":114333,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":114553,"byte_end":114569,"line_start":169,"line_end":169,"column_start":12,"column_end":28},"name":"set_clock_source","qualname":"<SYST>::set_clock_source","value":"pub fn set_clock_source(&mut Self, SystClkSource)","parent":null,"children":[],"decl_id":null,"docs":" Sets clock source\n","sig":null,"attributes":[{"value":"/ Sets clock source","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":114506,"byte_end":114527,"line_start":167,"line_end":167,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":114532,"byte_end":114541,"line_start":168,"line_end":168,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":115049,"byte_end":115059,"line_start":182,"line_end":182,"column_start":12,"column_end":22},"name":"set_reload","qualname":"<SYST>::set_reload","value":"pub fn set_reload(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Sets reload value","sig":null,"attributes":[{"value":"/ Sets reload value","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":114845,"byte_end":114866,"line_start":176,"line_end":176,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":114871,"byte_end":114874,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ Valid values are between `1` and `0x00ffffff`.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":114879,"byte_end":114929,"line_start":178,"line_end":178,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":114934,"byte_end":114937,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ *NOTE* To make the timer wrap every `N` ticks set the reload value to `N - 1`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":114942,"byte_end":115023,"line_start":180,"line_end":180,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":115028,"byte_end":115037,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":642},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\tpiu.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tpiu","qualname":"::peripheral::tpiu","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\tpiu.rs","parent":null,"children":[{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":647},{"krate":0,"index":650},{"krate":0,"index":653}],"decl_id":null,"docs":" Trace Port Interface Unit;","sig":null,"attributes":[{"value":"cfg(not(armv6m))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":26550,"byte_end":26569,"line_start":86,"line_end":86,"column_start":1,"column_end":20}},{"value":"/ Trace Port Interface Unit;","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\tpiu.rs","byte_start":115135,"byte_end":115165,"line_start":1,"line_end":1,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\tpiu.rs","byte_start":115166,"byte_end":115169,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ *NOTE* Not available on Armv6-M.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\tpiu.rs","byte_start":115170,"byte_end":115206,"line_start":3,"line_end":3,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":653},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\tpiu.rs","byte_start":115287,"byte_end":115300,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::tpiu::RegisterBlock","value":"RegisterBlock { sspsr, cspsr, acpr, sppr, ffcr, lar, lsr, _type }","parent":null,"children":[{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":671}],"decl_id":null,"docs":" Register block\n","sig":null,"attributes":[{"value":"/ Register block","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\tpiu.rs","byte_start":115246,"byte_end":115264,"line_start":7,"line_end":7,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\tpiu.rs","byte_start":115265,"byte_end":115275,"line_start":8,"line_end":8,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":654},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\tpiu.rs","byte_start":115349,"byte_end":115354,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"sspsr","qualname":"::peripheral::tpiu::RegisterBlock::sspsr","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Supported Parallel Port Sizes\n","sig":null,"attributes":[{"value":"/ Supported Parallel Port Sizes","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\tpiu.rs","byte_start":115307,"byte_end":115340,"line_start":10,"line_end":10,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":655},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\tpiu.rs","byte_start":115408,"byte_end":115413,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"cspsr","qualname":"::peripheral::tpiu::RegisterBlock::cspsr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Current Parallel Port Size\n","sig":null,"attributes":[{"value":"/ Current Parallel Port Size","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\tpiu.rs","byte_start":115369,"byte_end":115399,"line_start":12,"line_end":12,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":658},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\tpiu.rs","byte_start":115494,"byte_end":115498,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"name":"acpr","qualname":"::peripheral::tpiu::RegisterBlock::acpr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Asynchronous Clock Prescaler\n","sig":null,"attributes":[{"value":"/ Asynchronous Clock Prescaler","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\tpiu.rs","byte_start":115453,"byte_end":115485,"line_start":15,"line_end":15,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":661},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\tpiu.rs","byte_start":115572,"byte_end":115576,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"name":"sppr","qualname":"::peripheral::tpiu::RegisterBlock::sppr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Selected Pin Control\n","sig":null,"attributes":[{"value":"/ Selected Pin Control","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\tpiu.rs","byte_start":115539,"byte_end":115563,"line_start":18,"line_end":18,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":664},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\tpiu.rs","byte_start":115658,"byte_end":115662,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"name":"ffcr","qualname":"::peripheral::tpiu::RegisterBlock::ffcr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Formatter and Flush Control\n","sig":null,"attributes":[{"value":"/ Formatter and Flush Control","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\tpiu.rs","byte_start":115618,"byte_end":115649,"line_start":21,"line_end":21,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\tpiu.rs","byte_start":115728,"byte_end":115731,"line_start":25,"line_end":25,"column_start":9,"column_end":12},"name":"lar","qualname":"::peripheral::tpiu::RegisterBlock::lar","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Lock Access\n","sig":null,"attributes":[{"value":"/ Lock Access","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\tpiu.rs","byte_start":115704,"byte_end":115719,"line_start":24,"line_end":24,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":668},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\tpiu.rs","byte_start":115770,"byte_end":115773,"line_start":27,"line_end":27,"column_start":9,"column_end":12},"name":"lsr","qualname":"::peripheral::tpiu::RegisterBlock::lsr","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" Lock Status\n","sig":null,"attributes":[{"value":"/ Lock Status","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\tpiu.rs","byte_start":115746,"byte_end":115761,"line_start":26,"line_end":26,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":671},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\tpiu.rs","byte_start":115835,"byte_end":115840,"line_start":30,"line_end":30,"column_start":9,"column_end":14},"name":"_type","qualname":"::peripheral::tpiu::RegisterBlock::_type","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":" TPIU Type\n","sig":null,"attributes":[{"value":"/ TPIU Type","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\tpiu.rs","byte_start":115813,"byte_end":115826,"line_start":29,"line_end":29,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":672},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":26803,"byte_end":26814,"line_start":97,"line_end":97,"column_start":12,"column_end":23},"name":"Peripherals","qualname":"::peripheral::Peripherals","value":"Peripherals { CBP, CPUID, DCB, DWT, FPB, FPU, ICB, ITM, MPU, NVIC, SAU, SCB, SYST, TPIU }","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687}],"decl_id":null,"docs":" Core peripherals\n","sig":null,"attributes":[{"value":"/ Core peripherals","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":26706,"byte_end":26726,"line_start":94,"line_end":94,"column_start":1,"column_end":21}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":26727,"byte_end":26751,"line_start":95,"line_end":95,"column_start":1,"column_end":25}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":26752,"byte_end":26791,"line_start":96,"line_end":96,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":673},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":26999,"byte_end":27002,"line_start":104,"line_end":104,"column_start":9,"column_end":12},"name":"CBP","qualname":"::peripheral::Peripherals::CBP","value":"peripheral::CBP","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" Cache and branch predictor maintenance operations.\n Not available on Armv6-M.\n","sig":null,"attributes":[{"value":"/ Cache and branch predictor maintenance operations.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":26902,"byte_end":26956,"line_start":102,"line_end":102,"column_start":5,"column_end":59}},{"value":"/ Not available on Armv6-M.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":26961,"byte_end":26990,"line_start":103,"line_end":103,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":674},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":27032,"byte_end":27037,"line_start":107,"line_end":107,"column_start":9,"column_end":14},"name":"CPUID","qualname":"::peripheral::Peripherals::CPUID","value":"peripheral::CPUID","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" CPUID\n","sig":null,"attributes":[{"value":"/ CPUID","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":27014,"byte_end":27023,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":675},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":27083,"byte_end":27086,"line_start":110,"line_end":110,"column_start":9,"column_end":12},"name":"DCB","qualname":"::peripheral::Peripherals::DCB","value":"peripheral::DCB","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" Debug Control Block\n","sig":null,"attributes":[{"value":"/ Debug Control Block","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":27051,"byte_end":27074,"line_start":109,"line_end":109,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":676},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":27141,"byte_end":27144,"line_start":113,"line_end":113,"column_start":9,"column_end":12},"name":"DWT","qualname":"::peripheral::Peripherals::DWT","value":"peripheral::DWT","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" Data Watchpoint and Trace unit\n","sig":null,"attributes":[{"value":"/ Data Watchpoint and Trace unit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":27098,"byte_end":27132,"line_start":112,"line_end":112,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":677},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":27235,"byte_end":27238,"line_start":117,"line_end":117,"column_start":9,"column_end":12},"name":"FPB","qualname":"::peripheral::Peripherals::FPB","value":"peripheral::FPB","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" Flash Patch and Breakpoint unit.\n Not available on Armv6-M.\n","sig":null,"attributes":[{"value":"/ Flash Patch and Breakpoint unit.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":27156,"byte_end":27192,"line_start":115,"line_end":115,"column_start":5,"column_end":41}},{"value":"/ Not available on Armv6-M.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":27197,"byte_end":27226,"line_start":116,"line_end":116,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":678},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":27283,"byte_end":27286,"line_start":120,"line_end":120,"column_start":9,"column_end":12},"name":"FPU","qualname":"::peripheral::Peripherals::FPU","value":"peripheral::FPU","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" Floating Point Unit.\n","sig":null,"attributes":[{"value":"/ Floating Point Unit.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":27250,"byte_end":27274,"line_start":119,"line_end":119,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":679},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":27456,"byte_end":27459,"line_start":126,"line_end":126,"column_start":9,"column_end":12},"name":"ICB","qualname":"::peripheral::Peripherals::ICB","value":"peripheral::ICB","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" Implementation Control Block.","sig":null,"attributes":[{"value":"/ Implementation Control Block.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":27298,"byte_end":27331,"line_start":122,"line_end":122,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":27336,"byte_end":27339,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The name is from the v8-M spec, but the block existed in earlier","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":27344,"byte_end":27412,"line_start":124,"line_end":124,"column_start":5,"column_end":73}},{"value":"/ revisions, without a name.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":27417,"byte_end":27447,"line_start":125,"line_end":125,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":680},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":27571,"byte_end":27574,"line_start":130,"line_end":130,"column_start":9,"column_end":12},"name":"ITM","qualname":"::peripheral::Peripherals::ITM","value":"peripheral::ITM","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" Instrumentation Trace Macrocell.\n Not available on Armv6-M and Armv8-M Baseline.\n","sig":null,"attributes":[{"value":"/ Instrumentation Trace Macrocell.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":27471,"byte_end":27507,"line_start":128,"line_end":128,"column_start":5,"column_end":41}},{"value":"/ Not available on Armv6-M and Armv8-M Baseline.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":27512,"byte_end":27562,"line_start":129,"line_end":129,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":681},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":27621,"byte_end":27624,"line_start":133,"line_end":133,"column_start":9,"column_end":12},"name":"MPU","qualname":"::peripheral::Peripherals::MPU","value":"peripheral::MPU","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" Memory Protection Unit\n","sig":null,"attributes":[{"value":"/ Memory Protection Unit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":27586,"byte_end":27612,"line_start":132,"line_end":132,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":682},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":27683,"byte_end":27687,"line_start":136,"line_end":136,"column_start":9,"column_end":13},"name":"NVIC","qualname":"::peripheral::Peripherals::NVIC","value":"peripheral::NVIC","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" Nested Vector Interrupt Controller\n","sig":null,"attributes":[{"value":"/ Nested Vector Interrupt Controller","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":27636,"byte_end":27674,"line_start":135,"line_end":135,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":27738,"byte_end":27741,"line_start":139,"line_end":139,"column_start":9,"column_end":12},"name":"SAU","qualname":"::peripheral::Peripherals::SAU","value":"peripheral::SAU","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" Security Attribution Unit\n","sig":null,"attributes":[{"value":"/ Security Attribution Unit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":27700,"byte_end":27729,"line_start":138,"line_end":138,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":684},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":27786,"byte_end":27789,"line_start":142,"line_end":142,"column_start":9,"column_end":12},"name":"SCB","qualname":"::peripheral::Peripherals::SCB","value":"peripheral::SCB","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" System Control Block\n","sig":null,"attributes":[{"value":"/ System Control Block","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":27753,"byte_end":27777,"line_start":141,"line_end":141,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":685},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":27835,"byte_end":27839,"line_start":145,"line_end":145,"column_start":9,"column_end":13},"name":"SYST","qualname":"::peripheral::Peripherals::SYST","value":"peripheral::SYST","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" SysTick: System Timer\n","sig":null,"attributes":[{"value":"/ SysTick: System Timer","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":27801,"byte_end":27826,"line_start":144,"line_end":144,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":686},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":27925,"byte_end":27929,"line_start":149,"line_end":149,"column_start":9,"column_end":13},"name":"TPIU","qualname":"::peripheral::Peripherals::TPIU","value":"peripheral::TPIU","parent":{"krate":0,"index":672},"children":[],"decl_id":null,"docs":" Trace Port Interface Unit.\n Not available on Armv6-M.\n","sig":null,"attributes":[{"value":"/ Trace Port Interface Unit.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":27852,"byte_end":27882,"line_start":147,"line_end":147,"column_start":5,"column_end":35}},{"value":"/ Not available on Armv6-M.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":27887,"byte_end":27916,"line_start":148,"line_end":148,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":28536,"byte_end":28540,"line_start":167,"line_end":167,"column_start":12,"column_end":16},"name":"take","qualname":"<Peripherals>::take","value":"pub fn take() -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns all the core peripherals *once*\n","sig":null,"attributes":[{"value":"/ Returns all the core peripherals *once*","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":28467,"byte_end":28510,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":28515,"byte_end":28524,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":28834,"byte_end":28839,"line_start":179,"line_end":179,"column_start":19,"column_end":24},"name":"steal","qualname":"<Peripherals>::steal","value":"pub unsafe fn steal() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Unchecked version of `Peripherals::take`\n","sig":null,"attributes":[{"value":"/ Unchecked version of `Peripherals::take`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":28757,"byte_end":28801,"line_start":177,"line_end":177,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":28806,"byte_end":28815,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":694},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":30623,"byte_end":30626,"line_start":256,"line_end":256,"column_start":12,"column_end":15},"name":"CBP","qualname":"::peripheral::CBP","value":"CBP {  }","parent":null,"children":[{"krate":0,"index":695}],"decl_id":null,"docs":" Cache and branch predictor maintenance operations\n","sig":null,"attributes":[{"value":"/ Cache and branch predictor maintenance operations","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":30558,"byte_end":30611,"line_start":255,"line_end":255,"column_start":1,"column_end":54}}]},{"kind":"Const","id":{"krate":0,"index":699},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":30915,"byte_end":30918,"line_start":272,"line_end":272,"column_start":15,"column_end":18},"name":"PTR","qualname":"::peripheral::CBP::PTR","value":"*const self::cbp::RegisterBlock","parent":{"krate":0,"index":697},"children":[],"decl_id":null,"docs":" Pointer to the register block\n","sig":null,"attributes":[{"value":"/ Pointer to the register block","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":30867,"byte_end":30900,"line_start":271,"line_end":271,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":31093,"byte_end":31096,"line_start":276,"line_end":276,"column_start":18,"column_end":21},"name":"ptr","qualname":"<CBP>::ptr","value":"pub const fn ptr() -> *const self::cbp::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block (to be deprecated in 0.7)\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block (to be deprecated in 0.7)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":30984,"byte_end":31053,"line_start":274,"line_end":274,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":31058,"byte_end":31075,"line_start":275,"line_end":275,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":704},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":31376,"byte_end":31381,"line_start":292,"line_end":292,"column_start":12,"column_end":17},"name":"CPUID","qualname":"::peripheral::CPUID","value":"CPUID {  }","parent":null,"children":[{"krate":0,"index":705}],"decl_id":null,"docs":" CPUID\n","sig":null,"attributes":[{"value":"/ CPUID","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":31355,"byte_end":31364,"line_start":291,"line_end":291,"column_start":1,"column_end":10}}]},{"kind":"Const","id":{"krate":0,"index":708},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":31520,"byte_end":31523,"line_start":300,"line_end":300,"column_start":15,"column_end":18},"name":"PTR","qualname":"::peripheral::CPUID::PTR","value":"*const self::cpuid::RegisterBlock","parent":{"krate":0,"index":707},"children":[],"decl_id":null,"docs":" Pointer to the register block\n","sig":null,"attributes":[{"value":"/ Pointer to the register block","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":31472,"byte_end":31505,"line_start":299,"line_end":299,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":31700,"byte_end":31703,"line_start":304,"line_end":304,"column_start":18,"column_end":21},"name":"ptr","qualname":"<CPUID>::ptr","value":"pub const fn ptr() -> *const self::cpuid::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block (to be deprecated in 0.7)\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block (to be deprecated in 0.7)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":31591,"byte_end":31660,"line_start":302,"line_end":302,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":31665,"byte_end":31682,"line_start":303,"line_end":303,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":713},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":31983,"byte_end":31986,"line_start":319,"line_end":319,"column_start":12,"column_end":15},"name":"DCB","qualname":"::peripheral::DCB","value":"DCB {  }","parent":null,"children":[{"krate":0,"index":714}],"decl_id":null,"docs":" Debug Control Block\n","sig":null,"attributes":[{"value":"/ Debug Control Block","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":31948,"byte_end":31971,"line_start":318,"line_end":318,"column_start":1,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":717},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":32121,"byte_end":32124,"line_start":327,"line_end":327,"column_start":15,"column_end":18},"name":"PTR","qualname":"::peripheral::DCB::PTR","value":"*const dcb::RegisterBlock","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" Pointer to the register block\n","sig":null,"attributes":[{"value":"/ Pointer to the register block","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":32073,"byte_end":32106,"line_start":326,"line_end":326,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":32293,"byte_end":32296,"line_start":331,"line_end":331,"column_start":18,"column_end":21},"name":"ptr","qualname":"<DCB>::ptr","value":"pub const fn ptr() -> *const dcb::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block (to be deprecated in 0.7)\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block (to be deprecated in 0.7)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":32184,"byte_end":32253,"line_start":329,"line_end":329,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":32258,"byte_end":32275,"line_start":330,"line_end":330,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":722},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":32574,"byte_end":32577,"line_start":346,"line_end":346,"column_start":12,"column_end":15},"name":"DWT","qualname":"::peripheral::DWT","value":"DWT {  }","parent":null,"children":[{"krate":0,"index":723}],"decl_id":null,"docs":" Data Watchpoint and Trace unit\n","sig":null,"attributes":[{"value":"/ Data Watchpoint and Trace unit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":32528,"byte_end":32562,"line_start":345,"line_end":345,"column_start":1,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":726},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":32712,"byte_end":32715,"line_start":354,"line_end":354,"column_start":15,"column_end":18},"name":"PTR","qualname":"::peripheral::DWT::PTR","value":"*const dwt::RegisterBlock","parent":{"krate":0,"index":725},"children":[],"decl_id":null,"docs":" Pointer to the register block\n","sig":null,"attributes":[{"value":"/ Pointer to the register block","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":32664,"byte_end":32697,"line_start":353,"line_end":353,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":32884,"byte_end":32887,"line_start":358,"line_end":358,"column_start":18,"column_end":21},"name":"ptr","qualname":"<DWT>::ptr","value":"pub const fn ptr() -> *const dwt::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block (to be deprecated in 0.7)\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block (to be deprecated in 0.7)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":32775,"byte_end":32844,"line_start":356,"line_end":356,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":32849,"byte_end":32866,"line_start":357,"line_end":357,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":731},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":33167,"byte_end":33170,"line_start":373,"line_end":373,"column_start":12,"column_end":15},"name":"FPB","qualname":"::peripheral::FPB","value":"FPB {  }","parent":null,"children":[{"krate":0,"index":732}],"decl_id":null,"docs":" Flash Patch and Breakpoint unit\n","sig":null,"attributes":[{"value":"/ Flash Patch and Breakpoint unit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":33120,"byte_end":33155,"line_start":372,"line_end":372,"column_start":1,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":735},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":33325,"byte_end":33328,"line_start":382,"line_end":382,"column_start":15,"column_end":18},"name":"PTR","qualname":"::peripheral::FPB::PTR","value":"*const fpb::RegisterBlock","parent":{"krate":0,"index":734},"children":[],"decl_id":null,"docs":" Pointer to the register block\n","sig":null,"attributes":[{"value":"/ Pointer to the register block","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":33277,"byte_end":33310,"line_start":381,"line_end":381,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":33497,"byte_end":33500,"line_start":386,"line_end":386,"column_start":18,"column_end":21},"name":"ptr","qualname":"<FPB>::ptr","value":"pub const fn ptr() -> *const fpb::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block (to be deprecated in 0.7)\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block (to be deprecated in 0.7)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":33388,"byte_end":33457,"line_start":384,"line_end":384,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":33462,"byte_end":33479,"line_start":385,"line_end":385,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":740},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":33788,"byte_end":33791,"line_start":402,"line_end":402,"column_start":12,"column_end":15},"name":"FPU","qualname":"::peripheral::FPU","value":"FPU {  }","parent":null,"children":[{"krate":0,"index":741}],"decl_id":null,"docs":" Floating Point Unit\n","sig":null,"attributes":[{"value":"/ Floating Point Unit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":33753,"byte_end":33776,"line_start":401,"line_end":401,"column_start":1,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":744},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":33955,"byte_end":33958,"line_start":411,"line_end":411,"column_start":15,"column_end":18},"name":"PTR","qualname":"::peripheral::FPU::PTR","value":"*const fpu::RegisterBlock","parent":{"krate":0,"index":743},"children":[],"decl_id":null,"docs":" Pointer to the register block\n","sig":null,"attributes":[{"value":"/ Pointer to the register block","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":33907,"byte_end":33940,"line_start":410,"line_end":410,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":34127,"byte_end":34130,"line_start":415,"line_end":415,"column_start":18,"column_end":21},"name":"ptr","qualname":"<FPU>::ptr","value":"pub const fn ptr() -> *const fpu::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block (to be deprecated in 0.7)\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block (to be deprecated in 0.7)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":34018,"byte_end":34087,"line_start":413,"line_end":413,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":34092,"byte_end":34109,"line_start":414,"line_end":414,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":749},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":34675,"byte_end":34678,"line_start":436,"line_end":436,"column_start":12,"column_end":15},"name":"ICB","qualname":"::peripheral::ICB","value":"ICB {  }","parent":null,"children":[{"krate":0,"index":750}],"decl_id":null,"docs":" Implementation Control Block.","sig":null,"attributes":[{"value":"/ Implementation Control Block.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":34392,"byte_end":34425,"line_start":430,"line_end":430,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":34426,"byte_end":34429,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ This block contains implementation-defined registers like `ictr` and","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":34430,"byte_end":34502,"line_start":432,"line_end":432,"column_start":1,"column_end":73}},{"value":"/ `actlr`. It's called the \"implementation control block\" in the ARMv8-M","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":34503,"byte_end":34577,"line_start":433,"line_end":433,"column_start":1,"column_end":75}},{"value":"/ standard, but earlier standards contained the registers, just without a","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":34578,"byte_end":34653,"line_start":434,"line_end":434,"column_start":1,"column_end":76}},{"value":"/ name.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":34654,"byte_end":34663,"line_start":435,"line_end":435,"column_start":1,"column_end":10}}]},{"kind":"Const","id":{"krate":0,"index":753},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":34813,"byte_end":34816,"line_start":444,"line_end":444,"column_start":15,"column_end":18},"name":"PTR","qualname":"::peripheral::ICB::PTR","value":"*mut icb::RegisterBlock","parent":{"krate":0,"index":752},"children":[],"decl_id":null,"docs":" Pointer to the register block\n","sig":null,"attributes":[{"value":"/ Pointer to the register block","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":34765,"byte_end":34798,"line_start":443,"line_end":443,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":34981,"byte_end":34984,"line_start":448,"line_end":448,"column_start":18,"column_end":21},"name":"ptr","qualname":"<ICB>::ptr","value":"pub const fn ptr() -> *mut icb::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block (to be deprecated in 0.7)\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block (to be deprecated in 0.7)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":34872,"byte_end":34941,"line_start":446,"line_end":446,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":34946,"byte_end":34963,"line_start":447,"line_end":447,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":760},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":35408,"byte_end":35411,"line_start":470,"line_end":470,"column_start":12,"column_end":15},"name":"ITM","qualname":"::peripheral::ITM","value":"ITM {  }","parent":null,"children":[{"krate":0,"index":761}],"decl_id":null,"docs":" Instrumentation Trace Macrocell\n","sig":null,"attributes":[{"value":"/ Instrumentation Trace Macrocell","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":35361,"byte_end":35396,"line_start":469,"line_end":469,"column_start":1,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":764},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":35589,"byte_end":35592,"line_start":479,"line_end":479,"column_start":15,"column_end":18},"name":"PTR","qualname":"::peripheral::ITM::PTR","value":"*mut itm::RegisterBlock","parent":{"krate":0,"index":763},"children":[],"decl_id":null,"docs":" Pointer to the register block\n","sig":null,"attributes":[{"value":"/ Pointer to the register block","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":35541,"byte_end":35574,"line_start":478,"line_end":478,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":35757,"byte_end":35760,"line_start":483,"line_end":483,"column_start":18,"column_end":21},"name":"ptr","qualname":"<ITM>::ptr","value":"pub const fn ptr() -> *mut itm::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block (to be deprecated in 0.7)\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block (to be deprecated in 0.7)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":35648,"byte_end":35717,"line_start":481,"line_end":481,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":35722,"byte_end":35739,"line_start":482,"line_end":482,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":771},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":36261,"byte_end":36264,"line_start":507,"line_end":507,"column_start":12,"column_end":15},"name":"MPU","qualname":"::peripheral::MPU","value":"MPU {  }","parent":null,"children":[{"krate":0,"index":772}],"decl_id":null,"docs":" Memory Protection Unit\n","sig":null,"attributes":[{"value":"/ Memory Protection Unit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":36223,"byte_end":36249,"line_start":506,"line_end":506,"column_start":1,"column_end":27}}]},{"kind":"Const","id":{"krate":0,"index":775},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":36399,"byte_end":36402,"line_start":515,"line_end":515,"column_start":15,"column_end":18},"name":"PTR","qualname":"::peripheral::MPU::PTR","value":"*const mpu::RegisterBlock","parent":{"krate":0,"index":774},"children":[],"decl_id":null,"docs":" Pointer to the register block\n","sig":null,"attributes":[{"value":"/ Pointer to the register block","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":36351,"byte_end":36384,"line_start":514,"line_end":514,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":36571,"byte_end":36574,"line_start":519,"line_end":519,"column_start":18,"column_end":21},"name":"ptr","qualname":"<MPU>::ptr","value":"pub const fn ptr() -> *const mpu::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block (to be deprecated in 0.7)\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block (to be deprecated in 0.7)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":36462,"byte_end":36531,"line_start":517,"line_end":517,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":36536,"byte_end":36553,"line_start":518,"line_end":518,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":780},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":36857,"byte_end":36861,"line_start":534,"line_end":534,"column_start":12,"column_end":16},"name":"NVIC","qualname":"::peripheral::NVIC","value":"NVIC {  }","parent":null,"children":[{"krate":0,"index":781}],"decl_id":null,"docs":" Nested Vector Interrupt Controller\n","sig":null,"attributes":[{"value":"/ Nested Vector Interrupt Controller","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":36807,"byte_end":36845,"line_start":533,"line_end":533,"column_start":1,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":784},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":36998,"byte_end":37001,"line_start":542,"line_end":542,"column_start":15,"column_end":18},"name":"PTR","qualname":"::peripheral::NVIC::PTR","value":"*const nvic::RegisterBlock","parent":{"krate":0,"index":783},"children":[],"decl_id":null,"docs":" Pointer to the register block\n","sig":null,"attributes":[{"value":"/ Pointer to the register block","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":36950,"byte_end":36983,"line_start":541,"line_end":541,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":37171,"byte_end":37174,"line_start":546,"line_end":546,"column_start":18,"column_end":21},"name":"ptr","qualname":"<NVIC>::ptr","value":"pub const fn ptr() -> *const nvic::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block (to be deprecated in 0.7)\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block (to be deprecated in 0.7)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":37062,"byte_end":37131,"line_start":544,"line_end":544,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":37136,"byte_end":37153,"line_start":545,"line_end":545,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":789},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":37451,"byte_end":37454,"line_start":561,"line_end":561,"column_start":12,"column_end":15},"name":"SAU","qualname":"::peripheral::SAU","value":"SAU {  }","parent":null,"children":[{"krate":0,"index":790}],"decl_id":null,"docs":" Security Attribution Unit\n","sig":null,"attributes":[{"value":"/ Security Attribution Unit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":37410,"byte_end":37439,"line_start":560,"line_end":560,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":792},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":38063,"byte_end":38066,"line_start":590,"line_end":590,"column_start":12,"column_end":15},"name":"SCB","qualname":"::peripheral::SCB","value":"SCB {  }","parent":null,"children":[{"krate":0,"index":793}],"decl_id":null,"docs":" System Control Block\n","sig":null,"attributes":[{"value":"/ System Control Block","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":38027,"byte_end":38051,"line_start":589,"line_end":589,"column_start":1,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":796},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":38201,"byte_end":38204,"line_start":598,"line_end":598,"column_start":15,"column_end":18},"name":"PTR","qualname":"::peripheral::SCB::PTR","value":"*const scb::RegisterBlock","parent":{"krate":0,"index":795},"children":[],"decl_id":null,"docs":" Pointer to the register block\n","sig":null,"attributes":[{"value":"/ Pointer to the register block","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":38153,"byte_end":38186,"line_start":597,"line_end":597,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":38373,"byte_end":38376,"line_start":602,"line_end":602,"column_start":18,"column_end":21},"name":"ptr","qualname":"<SCB>::ptr","value":"pub const fn ptr() -> *const scb::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block (to be deprecated in 0.7)\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block (to be deprecated in 0.7)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":38264,"byte_end":38333,"line_start":600,"line_end":600,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":38338,"byte_end":38355,"line_start":601,"line_end":601,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":801},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":38646,"byte_end":38650,"line_start":617,"line_end":617,"column_start":12,"column_end":16},"name":"SYST","qualname":"::peripheral::SYST","value":"SYST {  }","parent":null,"children":[{"krate":0,"index":802}],"decl_id":null,"docs":" SysTick: System Timer\n","sig":null,"attributes":[{"value":"/ SysTick: System Timer","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":38609,"byte_end":38634,"line_start":616,"line_end":616,"column_start":1,"column_end":26}}]},{"kind":"Const","id":{"krate":0,"index":805},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":38787,"byte_end":38790,"line_start":625,"line_end":625,"column_start":15,"column_end":18},"name":"PTR","qualname":"::peripheral::SYST::PTR","value":"*const syst::RegisterBlock","parent":{"krate":0,"index":804},"children":[],"decl_id":null,"docs":" Pointer to the register block\n","sig":null,"attributes":[{"value":"/ Pointer to the register block","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":38739,"byte_end":38772,"line_start":624,"line_end":624,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":38960,"byte_end":38963,"line_start":629,"line_end":629,"column_start":18,"column_end":21},"name":"ptr","qualname":"<SYST>::ptr","value":"pub const fn ptr() -> *const syst::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block (to be deprecated in 0.7)\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block (to be deprecated in 0.7)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":38851,"byte_end":38920,"line_start":627,"line_end":627,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":38925,"byte_end":38942,"line_start":628,"line_end":628,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":810},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":39240,"byte_end":39244,"line_start":644,"line_end":644,"column_start":12,"column_end":16},"name":"TPIU","qualname":"::peripheral::TPIU","value":"TPIU {  }","parent":null,"children":[{"krate":0,"index":811}],"decl_id":null,"docs":" Trace Port Interface Unit\n","sig":null,"attributes":[{"value":"/ Trace Port Interface Unit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":39199,"byte_end":39228,"line_start":643,"line_end":643,"column_start":1,"column_end":30}}]},{"kind":"Const","id":{"krate":0,"index":814},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":39401,"byte_end":39404,"line_start":653,"line_end":653,"column_start":15,"column_end":18},"name":"PTR","qualname":"::peripheral::TPIU::PTR","value":"*const tpiu::RegisterBlock","parent":{"krate":0,"index":813},"children":[],"decl_id":null,"docs":" Pointer to the register block\n","sig":null,"attributes":[{"value":"/ Pointer to the register block","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":39353,"byte_end":39386,"line_start":652,"line_end":652,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":39574,"byte_end":39577,"line_start":657,"line_end":657,"column_start":18,"column_end":21},"name":"ptr","qualname":"<TPIU>::ptr","value":"pub const fn ptr() -> *const tpiu::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block (to be deprecated in 0.7)\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block (to be deprecated in 0.7)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":39465,"byte_end":39534,"line_start":655,"line_end":655,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":39539,"byte_end":39556,"line_start":656,"line_end":656,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":819},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\prelude.rs","parent":null,"children":[{"krate":0,"index":820}],"decl_id":null,"docs":" Prelude\n","sig":null,"attributes":[{"value":"/ Prelude","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\prelude.rs","byte_start":115854,"byte_end":115865,"line_start":1,"line_end":1,"column_start":1,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":821},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"register","qualname":"::register","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","parent":null,"children":[{"krate":0,"index":822},{"krate":0,"index":825},{"krate":0,"index":827},{"krate":0,"index":848},{"krate":0,"index":853},{"krate":0,"index":892},{"krate":0,"index":895},{"krate":0,"index":900}],"decl_id":null,"docs":" Processor core registers","sig":null,"attributes":[{"value":"/ Processor core registers","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":115902,"byte_end":115930,"line_start":1,"line_end":1,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":115931,"byte_end":115934,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The following registers can only be accessed in PRIVILEGED mode:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":115935,"byte_end":116003,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116004,"byte_end":116007,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - BASEPRI","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116008,"byte_end":116021,"line_start":5,"line_end":5,"column_start":1,"column_end":14}},{"value":"/ - CONTROL","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116022,"byte_end":116035,"line_start":6,"line_end":6,"column_start":1,"column_end":14}},{"value":"/ - FAULTMASK","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116036,"byte_end":116051,"line_start":7,"line_end":7,"column_start":1,"column_end":16}},{"value":"/ - MSP","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116052,"byte_end":116061,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/ - PRIMASK","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116062,"byte_end":116075,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116076,"byte_end":116079,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The rest of registers (see list below) can be accessed in either, PRIVILEGED","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116080,"byte_end":116160,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ or UNPRIVILEGED, mode.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116161,"byte_end":116187,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116188,"byte_end":116191,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ - APSR","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116192,"byte_end":116202,"line_start":14,"line_end":14,"column_start":1,"column_end":11}},{"value":"/ - LR","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116203,"byte_end":116211,"line_start":15,"line_end":15,"column_start":1,"column_end":9}},{"value":"/ - PC","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116212,"byte_end":116220,"line_start":16,"line_end":16,"column_start":1,"column_end":9}},{"value":"/ - PSP","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116221,"byte_end":116230,"line_start":17,"line_end":17,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116231,"byte_end":116234,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The following registers are NOT available on ARMv6-M devices","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116235,"byte_end":116299,"line_start":19,"line_end":19,"column_start":1,"column_end":65}},{"value":"/ (`thumbv6m-none-eabi`):","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116300,"byte_end":116327,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116328,"byte_end":116331,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ - BASEPRI","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116332,"byte_end":116345,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ - FAULTMASK","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116346,"byte_end":116361,"line_start":23,"line_end":23,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116362,"byte_end":116365,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The following registers are only available for devices with an FPU:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116366,"byte_end":116437,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116438,"byte_end":116441,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ - FPSCR","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116442,"byte_end":116453,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116454,"byte_end":116457,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # References","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116458,"byte_end":116474,"line_start":29,"line_end":29,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116475,"byte_end":116478,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ - Cortex-M* Devices Generic User Guide - Section 2.1.3 Core registers","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116479,"byte_end":116552,"line_start":31,"line_end":31,"column_start":1,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":822},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\basepri.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"basepri","qualname":"::register::basepri","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\basepri.rs","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":824}],"decl_id":null,"docs":" Base Priority Mask Register\n","sig":null,"attributes":[{"value":"cfg(all(not(armv6m), not(armv8m_base)))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116554,"byte_end":116596,"line_start":33,"line_end":33,"column_start":1,"column_end":43}},{"value":"/ Base Priority Mask Register","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\basepri.rs","byte_start":117163,"byte_end":117194,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":823},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\basepri.rs","byte_start":117240,"byte_end":117244,"line_start":5,"line_end":5,"column_start":8,"column_end":12},"name":"read","qualname":"::register::basepri::read","value":"pub fn read() -> u8","parent":null,"children":[],"decl_id":null,"docs":" Reads the CPU register\n","sig":null,"attributes":[{"value":"/ Reads the CPU register","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\basepri.rs","byte_start":117196,"byte_end":117222,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\basepri.rs","byte_start":117223,"byte_end":117232,"line_start":4,"line_end":4,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":824},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\basepri.rs","byte_start":117507,"byte_end":117512,"line_start":14,"line_end":14,"column_start":15,"column_end":20},"name":"write","qualname":"::register::basepri::write","value":"pub unsafe fn write(u8)","parent":null,"children":[],"decl_id":null,"docs":" Writes to the CPU register","sig":null,"attributes":[{"value":"/ Writes to the CPU register","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\basepri.rs","byte_start":117293,"byte_end":117323,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\basepri.rs","byte_start":117324,"byte_end":117327,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ **IMPORTANT** If you are using a Cortex-M7 device with revision r0p1 you MUST enable the","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\basepri.rs","byte_start":117328,"byte_end":117420,"line_start":11,"line_end":11,"column_start":1,"column_end":93}},{"value":"/ `cm7-r0p1` Cargo feature or this function WILL misbehave.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\basepri.rs","byte_start":117421,"byte_end":117482,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\basepri.rs","byte_start":117483,"byte_end":117492,"line_start":13,"line_end":13,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":825},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\basepri_max.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"basepri_max","qualname":"::register::basepri_max","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\basepri_max.rs","parent":null,"children":[{"krate":0,"index":826}],"decl_id":null,"docs":" Base Priority Mask Register (conditional write)\n","sig":null,"attributes":[{"value":"cfg(all(not(armv6m), not(armv8m_base)))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116615,"byte_end":116657,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/ Base Priority Mask Register (conditional write)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\basepri_max.rs","byte_start":117726,"byte_end":117777,"line_start":1,"line_end":1,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":826},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\basepri_max.rs","byte_start":118091,"byte_end":118096,"line_start":11,"line_end":11,"column_start":8,"column_end":13},"name":"write","qualname":"::register::basepri_max::write","value":"pub fn write(u8)","parent":null,"children":[],"decl_id":null,"docs":" Writes to BASEPRI *if*","sig":null,"attributes":[{"value":"/ Writes to BASEPRI *if*","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\basepri_max.rs","byte_start":117779,"byte_end":117805,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\basepri_max.rs","byte_start":117806,"byte_end":117809,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - `basepri != 0` AND `basepri::read() == 0`, OR","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\basepri_max.rs","byte_start":117810,"byte_end":117861,"line_start":5,"line_end":5,"column_start":1,"column_end":52}},{"value":"/ - `basepri != 0` AND `basepri < basepri::read()`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\basepri_max.rs","byte_start":117862,"byte_end":117914,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\basepri_max.rs","byte_start":117915,"byte_end":117918,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ **IMPORTANT** If you are using a Cortex-M7 device with revision r0p1 you MUST enable the","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\basepri_max.rs","byte_start":117919,"byte_end":118011,"line_start":8,"line_end":8,"column_start":1,"column_end":93}},{"value":"/ `cm7-r0p1` Cargo feature or this function WILL misbehave.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\basepri_max.rs","byte_start":118012,"byte_end":118073,"line_start":9,"line_end":9,"column_start":1,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\basepri_max.rs","byte_start":118074,"byte_end":118083,"line_start":10,"line_end":10,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":827},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"control","qualname":"::register::control","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","parent":null,"children":[{"krate":0,"index":1075},{"krate":0,"index":1077},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":828},{"krate":0,"index":1082},{"krate":0,"index":1087},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":837},{"krate":0,"index":1098},{"krate":0,"index":1103},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":840},{"krate":0,"index":1114},{"krate":0,"index":1119},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":843},{"krate":0,"index":846},{"krate":0,"index":847}],"decl_id":null,"docs":" Control register\n","sig":null,"attributes":[{"value":"/ Control register","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":118314,"byte_end":118334,"line_start":1,"line_end":1,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1075},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":118398,"byte_end":118405,"line_start":5,"line_end":5,"column_start":12,"column_end":19},"name":"Control","qualname":"::register::control::Control","value":"Control {  }","parent":null,"children":[{"krate":0,"index":1076}],"decl_id":null,"docs":" Control register\n","sig":null,"attributes":[{"value":"/ Control register","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":118336,"byte_end":118356,"line_start":3,"line_end":3,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":118515,"byte_end":118524,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"from_bits","qualname":"<Control>::from_bits","value":"pub fn from_bits(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Control` value from raw bits.\n","sig":null,"attributes":[{"value":"/ Creates a `Control` value from raw bits.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":118445,"byte_end":118489,"line_start":10,"line_end":10,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":118494,"byte_end":118503,"line_start":11,"line_end":11,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":118657,"byte_end":118661,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"bits","qualname":"<Control>::bits","value":"pub fn bits(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the contents of the register as raw bits\n","sig":null,"attributes":[{"value":"/ Returns the contents of the register as raw bits","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":118579,"byte_end":118631,"line_start":16,"line_end":16,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":118636,"byte_end":118645,"line_start":17,"line_end":17,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":118763,"byte_end":118768,"line_start":24,"line_end":24,"column_start":12,"column_end":17},"name":"npriv","qualname":"<Control>::npriv","value":"pub fn npriv(Self) -> Npriv","parent":null,"children":[],"decl_id":null,"docs":" Thread mode privilege level\n","sig":null,"attributes":[{"value":"/ Thread mode privilege level","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":118706,"byte_end":118737,"line_start":22,"line_end":22,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":118742,"byte_end":118751,"line_start":23,"line_end":23,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":119013,"byte_end":119022,"line_start":34,"line_end":34,"column_start":12,"column_end":21},"name":"set_npriv","qualname":"<Control>::set_npriv","value":"pub fn set_npriv(&mut Self, Npriv)","parent":null,"children":[],"decl_id":null,"docs":" Sets the thread mode privilege level value (nPRIV).\n","sig":null,"attributes":[{"value":"/ Sets the thread mode privilege level value (nPRIV).","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":118932,"byte_end":118987,"line_start":32,"line_end":32,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":118992,"byte_end":119001,"line_start":33,"line_end":33,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":119287,"byte_end":119292,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"spsel","qualname":"<Control>::spsel","value":"pub fn spsel(Self) -> Spsel","parent":null,"children":[],"decl_id":null,"docs":" Currently active stack pointer\n","sig":null,"attributes":[{"value":"/ Currently active stack pointer","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":119227,"byte_end":119261,"line_start":42,"line_end":42,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":119266,"byte_end":119275,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":119491,"byte_end":119500,"line_start":54,"line_end":54,"column_start":12,"column_end":21},"name":"set_spsel","qualname":"<Control>::set_spsel","value":"pub fn set_spsel(&mut Self, Spsel)","parent":null,"children":[],"decl_id":null,"docs":" Sets the SPSEL value.\n","sig":null,"attributes":[{"value":"/ Sets the SPSEL value.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":119440,"byte_end":119465,"line_start":52,"line_end":52,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":119470,"byte_end":119479,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":119769,"byte_end":119773,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"fpca","qualname":"<Control>::fpca","value":"pub fn fpca(Self) -> Fpca","parent":null,"children":[],"decl_id":null,"docs":" Whether context floating-point is currently active\n","sig":null,"attributes":[{"value":"/ Whether context floating-point is currently active","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":119689,"byte_end":119743,"line_start":62,"line_end":62,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":119748,"byte_end":119757,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":119977,"byte_end":119985,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"set_fpca","qualname":"<Control>::set_fpca","value":"pub fn set_fpca(&mut Self, Fpca)","parent":null,"children":[],"decl_id":null,"docs":" Sets the FPCA value.\n","sig":null,"attributes":[{"value":"/ Sets the FPCA value.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":119927,"byte_end":119951,"line_start":72,"line_end":72,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":119956,"byte_end":119965,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1083},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":120293,"byte_end":120303,"line_start":87,"line_end":87,"column_start":5,"column_end":15},"name":"Privileged","qualname":"::register::control::Npriv::Privileged","value":"Npriv::Privileged","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" Privileged\n","sig":null,"attributes":[{"value":"/ Privileged","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":120274,"byte_end":120288,"line_start":86,"line_end":86,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1085},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":120330,"byte_end":120342,"line_start":89,"line_end":89,"column_start":5,"column_end":17},"name":"Unprivileged","qualname":"::register::control::Npriv::Unprivileged","value":"Npriv::Unprivileged","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" Unprivileged\n","sig":null,"attributes":[{"value":"/ Unprivileged","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":120309,"byte_end":120325,"line_start":88,"line_end":88,"column_start":5,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":1082},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":120262,"byte_end":120267,"line_start":85,"line_end":85,"column_start":10,"column_end":15},"name":"Npriv","qualname":"::register::control::Npriv","value":"pub enum Npriv { Privileged, Unprivileged, }","parent":null,"children":[{"krate":0,"index":1083},{"krate":0,"index":1085}],"decl_id":null,"docs":" Thread mode privilege level\n","sig":null,"attributes":[{"value":"/ Thread mode privilege level","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":120176,"byte_end":120207,"line_start":83,"line_end":83,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":120423,"byte_end":120436,"line_start":95,"line_end":95,"column_start":12,"column_end":25},"name":"is_privileged","qualname":"<Npriv>::is_privileged","value":"pub fn is_privileged(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is in privileged thread mode?\n","sig":null,"attributes":[{"value":"/ Is in privileged thread mode?","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":120364,"byte_end":120397,"line_start":93,"line_end":93,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":120402,"byte_end":120411,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":120559,"byte_end":120574,"line_start":101,"line_end":101,"column_start":12,"column_end":27},"name":"is_unprivileged","qualname":"<Npriv>::is_unprivileged","value":"pub fn is_unprivileged(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is in unprivileged thread mode?\n","sig":null,"attributes":[{"value":"/ Is in unprivileged thread mode?","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":120498,"byte_end":120533,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":120538,"byte_end":120547,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1099},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":120778,"byte_end":120781,"line_start":110,"line_end":110,"column_start":5,"column_end":8},"name":"Msp","qualname":"::register::control::Spsel::Msp","value":"Spsel::Msp","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":" MSP is the current stack pointer\n","sig":null,"attributes":[{"value":"/ MSP is the current stack pointer","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":120737,"byte_end":120773,"line_start":109,"line_end":109,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1101},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":120828,"byte_end":120831,"line_start":112,"line_end":112,"column_start":5,"column_end":8},"name":"Psp","qualname":"::register::control::Spsel::Psp","value":"Spsel::Psp","parent":{"krate":0,"index":1098},"children":[],"decl_id":null,"docs":" PSP is the current stack pointer\n","sig":null,"attributes":[{"value":"/ PSP is the current stack pointer","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":120787,"byte_end":120823,"line_start":111,"line_end":111,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":1098},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":120725,"byte_end":120730,"line_start":108,"line_end":108,"column_start":10,"column_end":15},"name":"Spsel","qualname":"::register::control::Spsel","value":"pub enum Spsel { Msp, Psp, }","parent":null,"children":[{"krate":0,"index":1099},{"krate":0,"index":1101}],"decl_id":null,"docs":" Currently active stack pointer\n","sig":null,"attributes":[{"value":"/ Currently active stack pointer","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":120636,"byte_end":120670,"line_start":106,"line_end":106,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":120916,"byte_end":120922,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"is_msp","qualname":"<Spsel>::is_msp","value":"pub fn is_msp(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is MSP the current stack pointer?\n","sig":null,"attributes":[{"value":"/ Is MSP the current stack pointer?","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":120853,"byte_end":120890,"line_start":116,"line_end":116,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":120895,"byte_end":120904,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":121040,"byte_end":121046,"line_start":124,"line_end":124,"column_start":12,"column_end":18},"name":"is_psp","qualname":"<Spsel>::is_psp","value":"pub fn is_psp(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is PSP the current stack pointer?\n","sig":null,"attributes":[{"value":"/ Is PSP the current stack pointer?","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":120977,"byte_end":121014,"line_start":122,"line_end":122,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":121019,"byte_end":121028,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1115},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":121258,"byte_end":121264,"line_start":133,"line_end":133,"column_start":5,"column_end":11},"name":"Active","qualname":"::register::control::Fpca::Active","value":"Fpca::Active","parent":{"krate":0,"index":1114},"children":[],"decl_id":null,"docs":" Floating-point context active.\n","sig":null,"attributes":[{"value":"/ Floating-point context active.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":121219,"byte_end":121253,"line_start":132,"line_end":132,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1117},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":121311,"byte_end":121320,"line_start":135,"line_end":135,"column_start":5,"column_end":14},"name":"NotActive","qualname":"::register::control::Fpca::NotActive","value":"Fpca::NotActive","parent":{"krate":0,"index":1114},"children":[],"decl_id":null,"docs":" No floating-point context active\n","sig":null,"attributes":[{"value":"/ No floating-point context active","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":121270,"byte_end":121306,"line_start":134,"line_end":134,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":1114},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":121208,"byte_end":121212,"line_start":131,"line_end":131,"column_start":10,"column_end":14},"name":"Fpca","qualname":"::register::control::Fpca","value":"pub enum Fpca { Active, NotActive, }","parent":null,"children":[{"krate":0,"index":1115},{"krate":0,"index":1117}],"decl_id":null,"docs":" Whether context floating-point is currently active\n","sig":null,"attributes":[{"value":"/ Whether context floating-point is currently active","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":121099,"byte_end":121153,"line_start":129,"line_end":129,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":121406,"byte_end":121415,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"is_active","qualname":"<Fpca>::is_active","value":"pub fn is_active(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is a floating-point context active?\n","sig":null,"attributes":[{"value":"/ Is a floating-point context active?","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":121341,"byte_end":121380,"line_start":139,"line_end":139,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":121385,"byte_end":121394,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":121541,"byte_end":121554,"line_start":147,"line_end":147,"column_start":12,"column_end":25},"name":"is_not_active","qualname":"<Fpca>::is_not_active","value":"pub fn is_not_active(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is a floating-point context not active?\n","sig":null,"attributes":[{"value":"/ Is a floating-point context not active?","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":121472,"byte_end":121515,"line_start":145,"line_end":145,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":121520,"byte_end":121529,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":846},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":121656,"byte_end":121660,"line_start":154,"line_end":154,"column_start":8,"column_end":12},"name":"read","qualname":"::register::control::read","value":"pub fn read() -> Control","parent":null,"children":[],"decl_id":null,"docs":" Reads the CPU register\n","sig":null,"attributes":[{"value":"/ Reads the CPU register","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":121612,"byte_end":121638,"line_start":152,"line_end":152,"column_start":1,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":121639,"byte_end":121648,"line_start":153,"line_end":153,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":847},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":121809,"byte_end":121814,"line_start":161,"line_end":161,"column_start":15,"column_end":20},"name":"write","qualname":"::register::control::write","value":"pub unsafe fn write(Control)","parent":null,"children":[],"decl_id":null,"docs":" Writes to the CPU register.\n","sig":null,"attributes":[{"value":"/ Writes to the CPU register.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":121753,"byte_end":121784,"line_start":159,"line_end":159,"column_start":1,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":121785,"byte_end":121794,"line_start":160,"line_end":160,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":848},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\faultmask.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"faultmask","qualname":"::register::faultmask","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\faultmask.rs","parent":null,"children":[{"krate":0,"index":1134},{"krate":0,"index":1139},{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1144},{"krate":0,"index":1145},{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":849},{"krate":0,"index":852}],"decl_id":null,"docs":" Fault Mask Register\n","sig":null,"attributes":[{"value":"cfg(all(not(armv6m), not(armv8m_base)))","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116698,"byte_end":116740,"line_start":41,"line_end":41,"column_start":1,"column_end":43}},{"value":"/ Fault Mask Register","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\faultmask.rs","byte_start":121914,"byte_end":121937,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1135},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\faultmask.rs","byte_start":122051,"byte_end":122057,"line_start":7,"line_end":7,"column_start":5,"column_end":11},"name":"Active","qualname":"::register::faultmask::Faultmask::Active","value":"Faultmask::Active","parent":{"krate":0,"index":1134},"children":[],"decl_id":null,"docs":" Active\n","sig":null,"attributes":[{"value":"/ Active","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\faultmask.rs","byte_start":122036,"byte_end":122046,"line_start":6,"line_end":6,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1137},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\faultmask.rs","byte_start":122096,"byte_end":122104,"line_start":9,"line_end":9,"column_start":5,"column_end":13},"name":"Inactive","qualname":"::register::faultmask::Faultmask::Inactive","value":"Faultmask::Inactive","parent":{"krate":0,"index":1134},"children":[],"decl_id":null,"docs":" Inactive, expect for NMI\n","sig":null,"attributes":[{"value":"/ Inactive, expect for NMI","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\faultmask.rs","byte_start":122063,"byte_end":122091,"line_start":8,"line_end":8,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":1134},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\faultmask.rs","byte_start":122020,"byte_end":122029,"line_start":5,"line_end":5,"column_start":10,"column_end":19},"name":"Faultmask","qualname":"::register::faultmask::Faultmask","value":"pub enum Faultmask { Active, Inactive, }","parent":null,"children":[{"krate":0,"index":1135},{"krate":0,"index":1137}],"decl_id":null,"docs":" All exceptions are ...\n","sig":null,"attributes":[{"value":"/ All exceptions are ...","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\faultmask.rs","byte_start":121939,"byte_end":121965,"line_start":3,"line_end":3,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\faultmask.rs","byte_start":122185,"byte_end":122194,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"is_active","qualname":"<Faultmask>::is_active","value":"pub fn is_active(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" All exceptions are active\n","sig":null,"attributes":[{"value":"/ All exceptions are active","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\faultmask.rs","byte_start":122130,"byte_end":122159,"line_start":13,"line_end":13,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\faultmask.rs","byte_start":122164,"byte_end":122173,"line_start":14,"line_end":14,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\faultmask.rs","byte_start":122330,"byte_end":122341,"line_start":21,"line_end":21,"column_start":12,"column_end":23},"name":"is_inactive","qualname":"<Faultmask>::is_inactive","value":"pub fn is_inactive(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" All exceptions, except for NMI, are inactive\n","sig":null,"attributes":[{"value":"/ All exceptions, except for NMI, are inactive","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\faultmask.rs","byte_start":122256,"byte_end":122304,"line_start":19,"line_end":19,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\faultmask.rs","byte_start":122309,"byte_end":122318,"line_start":20,"line_end":20,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":852},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\faultmask.rs","byte_start":122447,"byte_end":122451,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"read","qualname":"::register::faultmask::read","value":"pub fn read() -> Faultmask","parent":null,"children":[],"decl_id":null,"docs":" Reads the CPU register\n","sig":null,"attributes":[{"value":"/ Reads the CPU register","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\faultmask.rs","byte_start":122403,"byte_end":122429,"line_start":26,"line_end":26,"column_start":1,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\faultmask.rs","byte_start":122430,"byte_end":122439,"line_start":27,"line_end":27,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":853},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fpscr","qualname":"::register::fpscr","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","parent":null,"children":[{"krate":0,"index":1152},{"krate":0,"index":1154},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":854},{"krate":0,"index":1159},{"krate":0,"index":1168},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":885},{"krate":0,"index":890},{"krate":0,"index":891}],"decl_id":null,"docs":" Floating-point Status Control Register\n","sig":null,"attributes":[{"value":"cfg(has_fpu)","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116761,"byte_end":116776,"line_start":44,"line_end":44,"column_start":1,"column_end":16}},{"value":"/ Floating-point Status Control Register","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":122631,"byte_end":122673,"line_start":1,"line_end":1,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1152},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":122759,"byte_end":122764,"line_start":5,"line_end":5,"column_start":12,"column_end":17},"name":"Fpscr","qualname":"::register::fpscr::Fpscr","value":"Fpscr {  }","parent":null,"children":[{"krate":0,"index":1153}],"decl_id":null,"docs":" Floating-point Status Control Register\n","sig":null,"attributes":[{"value":"/ Floating-point Status Control Register","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":122675,"byte_end":122717,"line_start":3,"line_end":3,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":122870,"byte_end":122879,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"from_bits","qualname":"<Fpscr>::from_bits","value":"pub fn from_bits(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Fspcr` value from raw bits.\n","sig":null,"attributes":[{"value":"/ Creates a `Fspcr` value from raw bits.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":122802,"byte_end":122844,"line_start":10,"line_end":10,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":122849,"byte_end":122858,"line_start":11,"line_end":11,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":123012,"byte_end":123016,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"bits","qualname":"<Fpscr>::bits","value":"pub fn bits(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the contents of the register as raw bits\n","sig":null,"attributes":[{"value":"/ Returns the contents of the register as raw bits","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":122934,"byte_end":122986,"line_start":16,"line_end":16,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":122991,"byte_end":123000,"line_start":17,"line_end":17,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":123128,"byte_end":123129,"line_start":24,"line_end":24,"column_start":12,"column_end":13},"name":"n","qualname":"<Fpscr>::n","value":"pub fn n(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Read the Negative condition code flag\n","sig":null,"attributes":[{"value":"/ Read the Negative condition code flag","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":123061,"byte_end":123102,"line_start":22,"line_end":22,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":123107,"byte_end":123116,"line_start":23,"line_end":23,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":123259,"byte_end":123264,"line_start":30,"line_end":30,"column_start":12,"column_end":17},"name":"set_n","qualname":"<Fpscr>::set_n","value":"pub fn set_n(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the Negative condition code flag\n","sig":null,"attributes":[{"value":"/ Sets the Negative condition code flag","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":123192,"byte_end":123233,"line_start":28,"line_end":28,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":123238,"byte_end":123247,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":123497,"byte_end":123498,"line_start":40,"line_end":40,"column_start":12,"column_end":13},"name":"z","qualname":"<Fpscr>::z","value":"pub fn z(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Read the Zero condition code flag\n","sig":null,"attributes":[{"value":"/ Read the Zero condition code flag","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":123434,"byte_end":123471,"line_start":38,"line_end":38,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":123476,"byte_end":123485,"line_start":39,"line_end":39,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":123624,"byte_end":123629,"line_start":46,"line_end":46,"column_start":12,"column_end":17},"name":"set_z","qualname":"<Fpscr>::set_z","value":"pub fn set_z(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the Zero condition code flag\n","sig":null,"attributes":[{"value":"/ Sets the Zero condition code flag","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":123561,"byte_end":123598,"line_start":44,"line_end":44,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":123603,"byte_end":123612,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":123863,"byte_end":123864,"line_start":56,"line_end":56,"column_start":12,"column_end":13},"name":"c","qualname":"<Fpscr>::c","value":"pub fn c(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Read the Carry condition code flag\n","sig":null,"attributes":[{"value":"/ Read the Carry condition code flag","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":123799,"byte_end":123837,"line_start":54,"line_end":54,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":123842,"byte_end":123851,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":123991,"byte_end":123996,"line_start":62,"line_end":62,"column_start":12,"column_end":17},"name":"set_c","qualname":"<Fpscr>::set_c","value":"pub fn set_c(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the Carry condition code flag\n","sig":null,"attributes":[{"value":"/ Sets the Carry condition code flag","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":123927,"byte_end":123965,"line_start":60,"line_end":60,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":123970,"byte_end":123979,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":124233,"byte_end":124234,"line_start":72,"line_end":72,"column_start":12,"column_end":13},"name":"v","qualname":"<Fpscr>::v","value":"pub fn v(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Read the Overflow condition code flag\n","sig":null,"attributes":[{"value":"/ Read the Overflow condition code flag","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":124166,"byte_end":124207,"line_start":70,"line_end":70,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":124212,"byte_end":124221,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":124360,"byte_end":124365,"line_start":78,"line_end":78,"column_start":12,"column_end":17},"name":"set_v","qualname":"<Fpscr>::set_v","value":"pub fn set_v(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the Zero condition code flag\n","sig":null,"attributes":[{"value":"/ Sets the Zero condition code flag","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":124297,"byte_end":124334,"line_start":76,"line_end":76,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":124339,"byte_end":124348,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":124604,"byte_end":124607,"line_start":88,"line_end":88,"column_start":12,"column_end":15},"name":"ahp","qualname":"<Fpscr>::ahp","value":"pub fn ahp(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Read the Alternative Half Precision bit\n","sig":null,"attributes":[{"value":"/ Read the Alternative Half Precision bit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":124535,"byte_end":124578,"line_start":86,"line_end":86,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":124583,"byte_end":124592,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":124739,"byte_end":124746,"line_start":94,"line_end":94,"column_start":12,"column_end":19},"name":"set_ahp","qualname":"<Fpscr>::set_ahp","value":"pub fn set_ahp(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the Alternative Half Precision bit\n","sig":null,"attributes":[{"value":"/ Sets the Alternative Half Precision bit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":124670,"byte_end":124713,"line_start":92,"line_end":92,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":124718,"byte_end":124727,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":124979,"byte_end":124981,"line_start":104,"line_end":104,"column_start":12,"column_end":14},"name":"dn","qualname":"<Fpscr>::dn","value":"pub fn dn(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Read the Default NaN mode bit\n","sig":null,"attributes":[{"value":"/ Read the Default NaN mode bit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":124920,"byte_end":124953,"line_start":102,"line_end":102,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":124958,"byte_end":124967,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":125103,"byte_end":125109,"line_start":110,"line_end":110,"column_start":12,"column_end":18},"name":"set_dn","qualname":"<Fpscr>::set_dn","value":"pub fn set_dn(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the Default NaN mode bit\n","sig":null,"attributes":[{"value":"/ Sets the Default NaN mode bit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":125044,"byte_end":125077,"line_start":108,"line_end":108,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":125082,"byte_end":125091,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":125342,"byte_end":125344,"line_start":120,"line_end":120,"column_start":12,"column_end":14},"name":"fz","qualname":"<Fpscr>::fz","value":"pub fn fz(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Read the Flush to Zero mode bit\n","sig":null,"attributes":[{"value":"/ Read the Flush to Zero mode bit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":125281,"byte_end":125316,"line_start":118,"line_end":118,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":125321,"byte_end":125330,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":125468,"byte_end":125474,"line_start":126,"line_end":126,"column_start":12,"column_end":18},"name":"set_fz","qualname":"<Fpscr>::set_fz","value":"pub fn set_fz(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the Flush to Zero mode bit\n","sig":null,"attributes":[{"value":"/ Sets the Flush to Zero mode bit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":125407,"byte_end":125442,"line_start":124,"line_end":124,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":125447,"byte_end":125456,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":125712,"byte_end":125717,"line_start":136,"line_end":136,"column_start":12,"column_end":17},"name":"rmode","qualname":"<Fpscr>::rmode","value":"pub fn rmode(Self) -> RMode","parent":null,"children":[],"decl_id":null,"docs":" Read the Rounding Mode control field\n","sig":null,"attributes":[{"value":"/ Read the Rounding Mode control field","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":125646,"byte_end":125686,"line_start":134,"line_end":134,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":125691,"byte_end":125700,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":126008,"byte_end":126017,"line_start":147,"line_end":147,"column_start":12,"column_end":21},"name":"set_rmode","qualname":"<Fpscr>::set_rmode","value":"pub fn set_rmode(&mut Self, RMode)","parent":null,"children":[],"decl_id":null,"docs":" Sets the Rounding Mode control field\n","sig":null,"attributes":[{"value":"/ Sets the Rounding Mode control field","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":125942,"byte_end":125982,"line_start":145,"line_end":145,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":125987,"byte_end":125996,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":126451,"byte_end":126454,"line_start":159,"line_end":159,"column_start":12,"column_end":15},"name":"idc","qualname":"<Fpscr>::idc","value":"pub fn idc(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Read the Input Denormal cumulative exception bit\n","sig":null,"attributes":[{"value":"/ Read the Input Denormal cumulative exception bit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":126373,"byte_end":126425,"line_start":157,"line_end":157,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":126430,"byte_end":126439,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":126594,"byte_end":126601,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"set_idc","qualname":"<Fpscr>::set_idc","value":"pub fn set_idc(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the Input Denormal cumulative exception bit\n","sig":null,"attributes":[{"value":"/ Sets the Input Denormal cumulative exception bit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":126516,"byte_end":126568,"line_start":163,"line_end":163,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":126573,"byte_end":126582,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":126845,"byte_end":126848,"line_start":175,"line_end":175,"column_start":12,"column_end":15},"name":"ixc","qualname":"<Fpscr>::ixc","value":"pub fn ixc(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Read the Inexact cumulative exception bit\n","sig":null,"attributes":[{"value":"/ Read the Inexact cumulative exception bit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":126774,"byte_end":126819,"line_start":173,"line_end":173,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":126824,"byte_end":126833,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":126981,"byte_end":126988,"line_start":181,"line_end":181,"column_start":12,"column_end":19},"name":"set_ixc","qualname":"<Fpscr>::set_ixc","value":"pub fn set_ixc(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the Inexact cumulative exception bit\n","sig":null,"attributes":[{"value":"/ Sets the Inexact cumulative exception bit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":126910,"byte_end":126955,"line_start":179,"line_end":179,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":126960,"byte_end":126969,"line_start":180,"line_end":180,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":127234,"byte_end":127237,"line_start":191,"line_end":191,"column_start":12,"column_end":15},"name":"ufc","qualname":"<Fpscr>::ufc","value":"pub fn ufc(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Read the Underflow cumulative exception bit\n","sig":null,"attributes":[{"value":"/ Read the Underflow cumulative exception bit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":127161,"byte_end":127208,"line_start":189,"line_end":189,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":127213,"byte_end":127222,"line_start":190,"line_end":190,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":127372,"byte_end":127379,"line_start":197,"line_end":197,"column_start":12,"column_end":19},"name":"set_ufc","qualname":"<Fpscr>::set_ufc","value":"pub fn set_ufc(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the Underflow cumulative exception bit\n","sig":null,"attributes":[{"value":"/ Sets the Underflow cumulative exception bit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":127299,"byte_end":127346,"line_start":195,"line_end":195,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":127351,"byte_end":127360,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":127624,"byte_end":127627,"line_start":207,"line_end":207,"column_start":12,"column_end":15},"name":"ofc","qualname":"<Fpscr>::ofc","value":"pub fn ofc(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Read the Overflow cumulative exception bit\n","sig":null,"attributes":[{"value":"/ Read the Overflow cumulative exception bit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":127552,"byte_end":127598,"line_start":205,"line_end":205,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":127603,"byte_end":127612,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":127761,"byte_end":127768,"line_start":213,"line_end":213,"column_start":12,"column_end":19},"name":"set_ofc","qualname":"<Fpscr>::set_ofc","value":"pub fn set_ofc(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the Overflow cumulative exception bit\n","sig":null,"attributes":[{"value":"/ Sets the Overflow cumulative exception bit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":127689,"byte_end":127735,"line_start":211,"line_end":211,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":127740,"byte_end":127749,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":128021,"byte_end":128024,"line_start":223,"line_end":223,"column_start":12,"column_end":15},"name":"dzc","qualname":"<Fpscr>::dzc","value":"pub fn dzc(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Read the Division by Zero cumulative exception bit\n","sig":null,"attributes":[{"value":"/ Read the Division by Zero cumulative exception bit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":127941,"byte_end":127995,"line_start":221,"line_end":221,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":128000,"byte_end":128009,"line_start":222,"line_end":222,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":128166,"byte_end":128173,"line_start":229,"line_end":229,"column_start":12,"column_end":19},"name":"set_dzc","qualname":"<Fpscr>::set_dzc","value":"pub fn set_dzc(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the Division by Zero cumulative exception bit\n","sig":null,"attributes":[{"value":"/ Sets the Division by Zero cumulative exception bit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":128086,"byte_end":128140,"line_start":227,"line_end":227,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":128145,"byte_end":128154,"line_start":228,"line_end":228,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":128427,"byte_end":128430,"line_start":239,"line_end":239,"column_start":12,"column_end":15},"name":"ioc","qualname":"<Fpscr>::ioc","value":"pub fn ioc(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Read the Invalid Operation cumulative exception bit\n","sig":null,"attributes":[{"value":"/ Read the Invalid Operation cumulative exception bit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":128346,"byte_end":128401,"line_start":237,"line_end":237,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":128406,"byte_end":128415,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":128573,"byte_end":128580,"line_start":245,"line_end":245,"column_start":12,"column_end":19},"name":"set_ioc","qualname":"<Fpscr>::set_ioc","value":"pub fn set_ioc(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the Invalid Operation cumulative exception bit\n","sig":null,"attributes":[{"value":"/ Sets the Invalid Operation cumulative exception bit","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":128492,"byte_end":128547,"line_start":243,"line_end":243,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":128552,"byte_end":128561,"line_start":244,"line_end":244,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1160},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":128896,"byte_end":128903,"line_start":258,"line_end":258,"column_start":5,"column_end":12},"name":"Nearest","qualname":"::register::fpscr::RMode::Nearest","value":"RMode::Nearest","parent":{"krate":0,"index":1159},"children":[],"decl_id":null,"docs":" Round to Nearest (RN) mode. This is the reset value.\n","sig":null,"attributes":[{"value":"/ Round to Nearest (RN) mode. This is the reset value.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":128835,"byte_end":128891,"line_start":257,"line_end":257,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1162},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":128956,"byte_end":128968,"line_start":260,"line_end":260,"column_start":5,"column_end":17},"name":"PlusInfinity","qualname":"::register::fpscr::RMode::PlusInfinity","value":"RMode::PlusInfinity","parent":{"krate":0,"index":1159},"children":[],"decl_id":null,"docs":" Round towards Plus Infinity (RP) mode.\n","sig":null,"attributes":[{"value":"/ Round towards Plus Infinity (RP) mode.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":128909,"byte_end":128951,"line_start":259,"line_end":259,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1164},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":129022,"byte_end":129035,"line_start":262,"line_end":262,"column_start":5,"column_end":18},"name":"MinusInfinity","qualname":"::register::fpscr::RMode::MinusInfinity","value":"RMode::MinusInfinity","parent":{"krate":0,"index":1159},"children":[],"decl_id":null,"docs":" Round towards Minus Infinity (RM) mode.\n","sig":null,"attributes":[{"value":"/ Round towards Minus Infinity (RM) mode.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":128974,"byte_end":129017,"line_start":261,"line_end":261,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1166},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":129079,"byte_end":129083,"line_start":264,"line_end":264,"column_start":5,"column_end":9},"name":"Zero","qualname":"::register::fpscr::RMode::Zero","value":"RMode::Zero","parent":{"krate":0,"index":1159},"children":[],"decl_id":null,"docs":" Round towards Zero (RZ) mode.\n","sig":null,"attributes":[{"value":"/ Round towards Zero (RZ) mode.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":129041,"byte_end":129074,"line_start":263,"line_end":263,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":1159},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":128823,"byte_end":128828,"line_start":256,"line_end":256,"column_start":10,"column_end":15},"name":"RMode","qualname":"::register::fpscr::RMode","value":"pub enum RMode { Nearest, PlusInfinity, MinusInfinity, Zero, }","parent":null,"children":[{"krate":0,"index":1160},{"krate":0,"index":1162},{"krate":0,"index":1164},{"krate":0,"index":1166}],"decl_id":null,"docs":" Rounding mode\n","sig":null,"attributes":[{"value":"/ Rounding mode","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":128751,"byte_end":128768,"line_start":254,"line_end":254,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":129172,"byte_end":129182,"line_start":270,"line_end":270,"column_start":12,"column_end":22},"name":"is_nearest","qualname":"<RMode>::is_nearest","value":"pub fn is_nearest(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is Nearest the current rounding mode?\n","sig":null,"attributes":[{"value":"/ Is Nearest the current rounding mode?","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":129105,"byte_end":129146,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":129151,"byte_end":129160,"line_start":269,"line_end":269,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":129314,"byte_end":129330,"line_start":276,"line_end":276,"column_start":12,"column_end":28},"name":"is_plus_infinity","qualname":"<RMode>::is_plus_infinity","value":"pub fn is_plus_infinity(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is Plus Infinity the current rounding mode?\n","sig":null,"attributes":[{"value":"/ Is Plus Infinity the current rounding mode?","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":129241,"byte_end":129288,"line_start":274,"line_end":274,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":129293,"byte_end":129302,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":129468,"byte_end":129485,"line_start":282,"line_end":282,"column_start":12,"column_end":29},"name":"is_minus_infinity","qualname":"<RMode>::is_minus_infinity","value":"pub fn is_minus_infinity(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is Minus Infinity the current rounding mode?\n","sig":null,"attributes":[{"value":"/ Is Minus Infinity the current rounding mode?","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":129394,"byte_end":129442,"line_start":280,"line_end":280,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":129447,"byte_end":129456,"line_start":281,"line_end":281,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":129614,"byte_end":129621,"line_start":288,"line_end":288,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<RMode>::is_zero","value":"pub fn is_zero(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is Zero the current rounding mode?\n","sig":null,"attributes":[{"value":"/ Is Zero the current rounding mode?","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":129550,"byte_end":129588,"line_start":286,"line_end":286,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":129593,"byte_end":129602,"line_start":287,"line_end":287,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":890},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":129720,"byte_end":129724,"line_start":295,"line_end":295,"column_start":8,"column_end":12},"name":"read","qualname":"::register::fpscr::read","value":"pub fn read() -> Fpscr","parent":null,"children":[],"decl_id":null,"docs":" Read the FPSCR register\n","sig":null,"attributes":[{"value":"/ Read the FPSCR register","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":129675,"byte_end":129702,"line_start":293,"line_end":293,"column_start":1,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":129703,"byte_end":129712,"line_start":294,"line_end":294,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":891},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":129877,"byte_end":129882,"line_start":302,"line_end":302,"column_start":15,"column_end":20},"name":"write","qualname":"::register::fpscr::write","value":"pub unsafe fn write(Fpscr)","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the FPSCR register\n","sig":null,"attributes":[{"value":"/ Set the value of the FPSCR register","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":129813,"byte_end":129852,"line_start":300,"line_end":300,"column_start":1,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":129853,"byte_end":129862,"line_start":301,"line_end":301,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":892},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\msp.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"msp","qualname":"::register::msp","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\msp.rs","parent":null,"children":[{"krate":0,"index":893},{"krate":0,"index":894}],"decl_id":null,"docs":" Main Stack Pointer\n","sig":null,"attributes":[{"value":"/ Main Stack Pointer","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\msp.rs","byte_start":129970,"byte_end":129992,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\msp.rs","byte_start":130038,"byte_end":130042,"line_start":5,"line_end":5,"column_start":8,"column_end":12},"name":"read","qualname":"::register::msp::read","value":"pub fn read() -> u32","parent":null,"children":[],"decl_id":null,"docs":" Reads the CPU register\n","sig":null,"attributes":[{"value":"/ Reads the CPU register","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\msp.rs","byte_start":129994,"byte_end":130020,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\msp.rs","byte_start":130021,"byte_end":130030,"line_start":4,"line_end":4,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":894},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\msp.rs","byte_start":130261,"byte_end":130266,"line_start":12,"line_end":12,"column_start":15,"column_end":20},"name":"write","qualname":"::register::msp::write","value":"pub unsafe fn write(u32)","parent":null,"children":[],"decl_id":null,"docs":" Writes `bits` to the CPU register\n","sig":null,"attributes":[{"value":"/ Writes `bits` to the CPU register","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\msp.rs","byte_start":130089,"byte_end":130126,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\msp.rs","byte_start":130127,"byte_end":130136,"line_start":10,"line_end":10,"column_start":1,"column_end":10}},{"value":"deprecated =\n\"calling this function invokes Undefined Behavior, consider asm::bootstrap as an alternative\"","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\msp.rs","byte_start":130137,"byte_end":130246,"line_start":11,"line_end":11,"column_start":1,"column_end":110}}]},{"kind":"Mod","id":{"krate":0,"index":895},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\primask.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"primask","qualname":"::register::primask","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\primask.rs","parent":null,"children":[{"krate":0,"index":1187},{"krate":0,"index":1192},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":896},{"krate":0,"index":899}],"decl_id":null,"docs":" Priority mask register\n","sig":null,"attributes":[{"value":"/ Priority mask register","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\primask.rs","byte_start":130775,"byte_end":130801,"line_start":1,"line_end":1,"column_start":1,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1188},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\primask.rs","byte_start":130940,"byte_end":130946,"line_start":7,"line_end":7,"column_start":5,"column_end":11},"name":"Active","qualname":"::register::primask::Primask::Active","value":"Primask::Active","parent":{"krate":0,"index":1187},"children":[],"decl_id":null,"docs":" Active\n","sig":null,"attributes":[{"value":"/ Active","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\primask.rs","byte_start":130925,"byte_end":130935,"line_start":6,"line_end":6,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1190},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\primask.rs","byte_start":130969,"byte_end":130977,"line_start":9,"line_end":9,"column_start":5,"column_end":13},"name":"Inactive","qualname":"::register::primask::Primask::Inactive","value":"Primask::Inactive","parent":{"krate":0,"index":1187},"children":[],"decl_id":null,"docs":" Inactive\n","sig":null,"attributes":[{"value":"/ Inactive","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\primask.rs","byte_start":130952,"byte_end":130964,"line_start":8,"line_end":8,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":1187},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\primask.rs","byte_start":130911,"byte_end":130918,"line_start":5,"line_end":5,"column_start":10,"column_end":17},"name":"Primask","qualname":"::register::primask::Primask","value":"pub enum Primask { Active, Inactive, }","parent":null,"children":[{"krate":0,"index":1188},{"krate":0,"index":1190}],"decl_id":null,"docs":" All exceptions with configurable priority are ...\n","sig":null,"attributes":[{"value":"/ All exceptions with configurable priority are ...","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\primask.rs","byte_start":130803,"byte_end":130856,"line_start":3,"line_end":3,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\primask.rs","byte_start":131083,"byte_end":131092,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"is_active","qualname":"<Primask>::is_active","value":"pub fn is_active(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" All exceptions with configurable priority are active\n","sig":null,"attributes":[{"value":"/ All exceptions with configurable priority are active","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\primask.rs","byte_start":131001,"byte_end":131057,"line_start":13,"line_end":13,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\primask.rs","byte_start":131062,"byte_end":131071,"line_start":14,"line_end":14,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\primask.rs","byte_start":131236,"byte_end":131247,"line_start":21,"line_end":21,"column_start":12,"column_end":23},"name":"is_inactive","qualname":"<Primask>::is_inactive","value":"pub fn is_inactive(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" All exceptions with configurable priority are inactive\n","sig":null,"attributes":[{"value":"/ All exceptions with configurable priority are inactive","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\primask.rs","byte_start":131152,"byte_end":131210,"line_start":19,"line_end":19,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\primask.rs","byte_start":131215,"byte_end":131224,"line_start":20,"line_end":20,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":899},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\primask.rs","byte_start":131351,"byte_end":131355,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"read","qualname":"::register::primask::read","value":"pub fn read() -> Primask","parent":null,"children":[],"decl_id":null,"docs":" Reads the CPU register\n","sig":null,"attributes":[{"value":"/ Reads the CPU register","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\primask.rs","byte_start":131307,"byte_end":131333,"line_start":26,"line_end":26,"column_start":1,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\primask.rs","byte_start":131334,"byte_end":131343,"line_start":27,"line_end":27,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":900},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\psp.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"psp","qualname":"::register::psp","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\psp.rs","parent":null,"children":[{"krate":0,"index":901},{"krate":0,"index":902}],"decl_id":null,"docs":" Process Stack Pointer\n","sig":null,"attributes":[{"value":"/ Process Stack Pointer","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\psp.rs","byte_start":131527,"byte_end":131552,"line_start":1,"line_end":1,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":901},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\psp.rs","byte_start":131598,"byte_end":131602,"line_start":5,"line_end":5,"column_start":8,"column_end":12},"name":"read","qualname":"::register::psp::read","value":"pub fn read() -> u32","parent":null,"children":[],"decl_id":null,"docs":" Reads the CPU register\n","sig":null,"attributes":[{"value":"/ Reads the CPU register","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\psp.rs","byte_start":131554,"byte_end":131580,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\psp.rs","byte_start":131581,"byte_end":131590,"line_start":4,"line_end":4,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":902},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\psp.rs","byte_start":131711,"byte_end":131716,"line_start":11,"line_end":11,"column_start":15,"column_end":20},"name":"write","qualname":"::register::psp::write","value":"pub unsafe fn write(u32)","parent":null,"children":[],"decl_id":null,"docs":" Writes `bits` to the CPU register\n","sig":null,"attributes":[{"value":"/ Writes `bits` to the CPU register","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\psp.rs","byte_start":131649,"byte_end":131686,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\psp.rs","byte_start":131687,"byte_end":131696,"line_start":10,"line_end":10,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":14383,"byte_end":14388,"line_start":12,"line_end":12,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":16410,"byte_end":16415,"line_start":78,"line_end":78,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":16624,"byte_end":16629,"line_start":86,"line_end":86,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":16791,"byte_end":16796,"line_start":94,"line_end":94,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":16935,"byte_end":16940,"line_start":101,"line_end":101,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":17079,"byte_end":17084,"line_start":108,"line_end":108,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":17293,"byte_end":17298,"line_start":116,"line_end":116,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":17460,"byte_end":17465,"line_start":124,"line_end":124,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":17603,"byte_end":17608,"line_start":131,"line_end":131,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":18820,"byte_end":18821,"line_start":28,"line_end":28,"column_start":47,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":21080,"byte_end":21084,"line_start":60,"line_end":60,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":40898,"byte_end":40901,"line_start":40,"line_end":40,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":45967,"byte_end":45972,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":200},{"krate":0,"index":205},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","byte_start":48922,"byte_end":48925,"line_start":23,"line_end":23,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":52019,"byte_end":52022,"line_start":73,"line_end":73,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":60740,"byte_end":60744,"line_start":36,"line_end":36,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":65551,"byte_end":65555,"line_start":77,"line_end":77,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":464},{"krate":0,"index":466},{"krate":0,"index":468},{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":74049,"byte_end":74052,"line_start":123,"line_end":123,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":75780,"byte_end":75783,"line_start":169,"line_end":169,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":77926,"byte_end":77935,"line_start":238,"line_end":238,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":79257,"byte_end":79267,"line_start":282,"line_end":282,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":80573,"byte_end":80576,"line_start":319,"line_end":319,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":533},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":554},{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":99437,"byte_end":99440,"line_start":802,"line_end":802,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":560},{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":99891,"byte_end":99894,"line_start":822,"line_end":822,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":100449,"byte_end":100452,"line_start":844,"line_end":844,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":101232,"byte_end":101235,"line_start":872,"line_end":872,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":103563,"byte_end":103566,"line_start":954,"line_end":954,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":593},{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":110273,"byte_end":110277,"line_start":39,"line_end":39,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":623},{"krate":0,"index":625},{"krate":0,"index":627},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":28449,"byte_end":28460,"line_start":164,"line_end":164,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":691},{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":30690,"byte_end":30693,"line_start":260,"line_end":260,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":30723,"byte_end":30726,"line_start":263,"line_end":263,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":31203,"byte_end":31206,"line_start":282,"line_end":282,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":31445,"byte_end":31450,"line_start":296,"line_end":296,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":31460,"byte_end":31465,"line_start":298,"line_end":298,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":708},{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":31792,"byte_end":31797,"line_start":309,"line_end":309,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":711},{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":32050,"byte_end":32053,"line_start":323,"line_end":323,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":32063,"byte_end":32066,"line_start":325,"line_end":325,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":717},{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":32377,"byte_end":32380,"line_start":336,"line_end":336,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":720},{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":32641,"byte_end":32644,"line_start":350,"line_end":350,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":32654,"byte_end":32657,"line_start":352,"line_end":352,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":726},{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":32968,"byte_end":32971,"line_start":363,"line_end":363,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":729},{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":33234,"byte_end":33237,"line_start":377,"line_end":377,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":33267,"byte_end":33270,"line_start":380,"line_end":380,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":735},{"krate":0,"index":736}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":33601,"byte_end":33604,"line_start":392,"line_end":392,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":738},{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":33855,"byte_end":33858,"line_start":406,"line_end":406,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":33897,"byte_end":33900,"line_start":409,"line_end":409,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":34240,"byte_end":34243,"line_start":421,"line_end":421,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":747},{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":34742,"byte_end":34745,"line_start":440,"line_end":440,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":34755,"byte_end":34758,"line_start":442,"line_end":442,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":753},{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":35063,"byte_end":35066,"line_start":453,"line_end":453,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":756},{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":35238,"byte_end":35241,"line_start":462,"line_end":462,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":35475,"byte_end":35478,"line_start":474,"line_end":474,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":35531,"byte_end":35534,"line_start":477,"line_end":477,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":764},{"krate":0,"index":765}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":35882,"byte_end":35885,"line_start":489,"line_end":489,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":36100,"byte_end":36103,"line_start":499,"line_end":499,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":36328,"byte_end":36331,"line_start":511,"line_end":511,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":36341,"byte_end":36344,"line_start":513,"line_end":513,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":775},{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":36655,"byte_end":36658,"line_start":524,"line_end":524,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":778},{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":36925,"byte_end":36929,"line_start":538,"line_end":538,"column_start":22,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":36939,"byte_end":36943,"line_start":540,"line_end":540,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":784},{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":37256,"byte_end":37260,"line_start":551,"line_end":551,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":787},{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":37518,"byte_end":37521,"line_start":565,"line_end":565,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":38130,"byte_end":38133,"line_start":594,"line_end":594,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":38143,"byte_end":38146,"line_start":596,"line_end":596,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":38457,"byte_end":38460,"line_start":607,"line_end":607,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":799},{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":38714,"byte_end":38718,"line_start":621,"line_end":621,"column_start":22,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":38728,"byte_end":38732,"line_start":623,"line_end":623,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":805},{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":39045,"byte_end":39049,"line_start":634,"line_end":634,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":808},{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":39308,"byte_end":39312,"line_start":648,"line_end":648,"column_start":22,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":39342,"byte_end":39346,"line_start":651,"line_end":651,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":814},{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":39679,"byte_end":39683,"line_start":663,"line_end":663,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":118431,"byte_end":118438,"line_start":9,"line_end":9,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":120352,"byte_end":120357,"line_start":92,"line_end":92,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":838},{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":120841,"byte_end":120846,"line_start":115,"line_end":115,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":841},{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":121330,"byte_end":121334,"line_start":138,"line_end":138,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\faultmask.rs","byte_start":122114,"byte_end":122123,"line_start":12,"line_end":12,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":850},{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":122790,"byte_end":122795,"line_start":9,"line_end":9,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":129093,"byte_end":129098,"line_start":267,"line_end":267,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\primask.rs","byte_start":130987,"byte_end":130994,"line_start":12,"line_end":12,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":897},{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":3642,"byte_end":3645,"line_start":90,"line_end":90,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":3684,"byte_end":3689,"line_start":93,"line_end":93,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":28}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":3699,"byte_end":3708,"line_start":94,"line_end":94,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":68}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":3761,"byte_end":3764,"line_start":96,"line_end":96,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":89}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":3774,"byte_end":3784,"line_start":97,"line_end":97,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":123}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":26232,"byte_end":26235,"line_start":68,"line_end":68,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":133}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":26245,"byte_end":26250,"line_start":69,"line_end":69,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":167}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":26260,"byte_end":26263,"line_start":70,"line_end":70,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":211}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":26273,"byte_end":26276,"line_start":71,"line_end":71,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":237}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":26306,"byte_end":26309,"line_start":73,"line_end":73,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":302}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":26394,"byte_end":26397,"line_start":76,"line_end":76,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":322}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":26407,"byte_end":26410,"line_start":77,"line_end":77,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":337}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":26463,"byte_end":26466,"line_start":79,"line_end":79,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":347}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":26476,"byte_end":26479,"line_start":80,"line_end":80,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":388}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":26489,"byte_end":26493,"line_start":81,"line_end":81,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":408}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":26531,"byte_end":26534,"line_start":84,"line_end":84,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":472}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":26544,"byte_end":26548,"line_start":85,"line_end":85,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":596}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":26578,"byte_end":26582,"line_start":87,"line_end":87,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":642}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":3794,"byte_end":3801,"line_start":98,"line_end":98,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":819}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\lib.rs","byte_start":3811,"byte_end":3819,"line_start":99,"line_end":99,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":821}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116605,"byte_end":116612,"line_start":34,"line_end":34,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":822}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116666,"byte_end":116677,"line_start":37,"line_end":37,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":825}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116688,"byte_end":116695,"line_start":39,"line_end":39,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":827}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116749,"byte_end":116758,"line_start":42,"line_end":42,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":848}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116785,"byte_end":116790,"line_start":45,"line_end":45,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":853}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116801,"byte_end":116804,"line_start":47,"line_end":47,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":892}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116815,"byte_end":116822,"line_start":49,"line_end":49,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":895}},{"kind":"Mod","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\mod.rs","byte_start":116833,"byte_end":116836,"line_start":51,"line_end":51,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":900}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":14383,"byte_end":14388,"line_start":12,"line_end":12,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":43},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":16410,"byte_end":16415,"line_start":78,"line_end":78,"column_start":23,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":43},"to":{"krate":7,"index":28}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":16624,"byte_end":16629,"line_start":86,"line_end":86,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":43},"to":{"krate":7,"index":28}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":16791,"byte_end":16796,"line_start":94,"line_end":94,"column_start":23,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":43},"to":{"krate":7,"index":28}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":16935,"byte_end":16940,"line_start":101,"line_end":101,"column_start":22,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":43},"to":{"krate":7,"index":28}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":17079,"byte_end":17084,"line_start":108,"line_end":108,"column_start":23,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":43},"to":{"krate":7,"index":31}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":17293,"byte_end":17298,"line_start":116,"line_end":116,"column_start":23,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":43},"to":{"krate":7,"index":31}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":17460,"byte_end":17465,"line_start":124,"line_end":124,"column_start":23,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":43},"to":{"krate":7,"index":31}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\delay.rs","byte_start":17603,"byte_end":17608,"line_start":131,"line_end":131,"column_start":22,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":43},"to":{"krate":7,"index":31}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":18444,"byte_end":18448,"line_start":19,"line_end":19,"column_start":35,"column_end":39},"kind":"SuperTrait","from":{"krate":1,"index":3033},"to":{"krate":0,"index":79}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\interrupt.rs","byte_start":18820,"byte_end":18821,"line_start":28,"line_end":28,"column_start":47,"column_end":48},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":82},"to":{"krate":0,"index":79}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\itm.rs","byte_start":21080,"byte_end":21084,"line_start":60,"line_end":60,"column_start":25,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":105},"to":{"krate":1,"index":9528}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cbp.rs","byte_start":40898,"byte_end":40901,"line_start":40,"line_end":40,"column_start":6,"column_end":9},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\cpuid.rs","byte_start":45967,"byte_end":45972,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":704},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dcb.rs","byte_start":48922,"byte_end":48925,"line_start":23,"line_end":23,"column_start":6,"column_end":9},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":713},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\dwt.rs","byte_start":52019,"byte_end":52022,"line_start":73,"line_end":73,"column_start":6,"column_end":9},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\itm.rs","byte_start":60740,"byte_end":60744,"line_start":36,"line_end":36,"column_start":6,"column_end":10},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":381},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\nvic.rs","byte_start":65551,"byte_end":65555,"line_start":77,"line_end":77,"column_start":6,"column_end":10},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":780},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":74049,"byte_end":74052,"line_start":123,"line_end":123,"column_start":6,"column_end":9},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":75780,"byte_end":75783,"line_start":169,"line_end":169,"column_start":6,"column_end":9},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":77926,"byte_end":77935,"line_start":238,"line_end":238,"column_start":6,"column_end":15},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":970},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":79257,"byte_end":79267,"line_start":282,"line_end":282,"column_start":6,"column_end":16},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1000},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":80573,"byte_end":80576,"line_start":319,"line_end":319,"column_start":6,"column_end":9},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":99437,"byte_end":99440,"line_start":802,"line_end":802,"column_start":6,"column_end":9},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":99891,"byte_end":99894,"line_start":822,"line_end":822,"column_start":6,"column_end":9},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":100449,"byte_end":100452,"line_start":844,"line_end":844,"column_start":6,"column_end":9},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":101232,"byte_end":101235,"line_start":872,"line_end":872,"column_start":6,"column_end":9},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\scb.rs","byte_start":103563,"byte_end":103566,"line_start":954,"line_end":954,"column_start":6,"column_end":9},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\syst.rs","byte_start":110273,"byte_end":110277,"line_start":39,"line_end":39,"column_start":6,"column_end":10},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":801},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":28449,"byte_end":28460,"line_start":164,"line_end":164,"column_start":6,"column_end":17},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":672},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":30690,"byte_end":30693,"line_start":260,"line_end":260,"column_start":22,"column_end":25},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":694},"to":{"krate":1,"index":3023}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":30723,"byte_end":30726,"line_start":263,"line_end":263,"column_start":6,"column_end":9},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":31203,"byte_end":31206,"line_start":282,"line_end":282,"column_start":21,"column_end":24},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":694},"to":{"krate":1,"index":3241}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":31445,"byte_end":31450,"line_start":296,"line_end":296,"column_start":22,"column_end":27},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":704},"to":{"krate":1,"index":3023}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":31460,"byte_end":31465,"line_start":298,"line_end":298,"column_start":6,"column_end":11},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":704},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":31792,"byte_end":31797,"line_start":309,"line_end":309,"column_start":21,"column_end":26},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":704},"to":{"krate":1,"index":3241}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":32050,"byte_end":32053,"line_start":323,"line_end":323,"column_start":22,"column_end":25},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":713},"to":{"krate":1,"index":3023}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":32063,"byte_end":32066,"line_start":325,"line_end":325,"column_start":6,"column_end":9},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":713},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":32377,"byte_end":32380,"line_start":336,"line_end":336,"column_start":21,"column_end":24},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":713},"to":{"krate":1,"index":3241}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":32641,"byte_end":32644,"line_start":350,"line_end":350,"column_start":22,"column_end":25},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":722},"to":{"krate":1,"index":3023}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":32654,"byte_end":32657,"line_start":352,"line_end":352,"column_start":6,"column_end":9},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":32968,"byte_end":32971,"line_start":363,"line_end":363,"column_start":21,"column_end":24},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":722},"to":{"krate":1,"index":3241}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":33234,"byte_end":33237,"line_start":377,"line_end":377,"column_start":22,"column_end":25},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":731},"to":{"krate":1,"index":3023}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":33267,"byte_end":33270,"line_start":380,"line_end":380,"column_start":6,"column_end":9},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":33601,"byte_end":33604,"line_start":392,"line_end":392,"column_start":21,"column_end":24},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":731},"to":{"krate":1,"index":3241}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":33855,"byte_end":33858,"line_start":406,"line_end":406,"column_start":22,"column_end":25},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":740},"to":{"krate":1,"index":3023}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":33897,"byte_end":33900,"line_start":409,"line_end":409,"column_start":6,"column_end":9},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":34240,"byte_end":34243,"line_start":421,"line_end":421,"column_start":21,"column_end":24},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":740},"to":{"krate":1,"index":3241}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":34742,"byte_end":34745,"line_start":440,"line_end":440,"column_start":22,"column_end":25},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":749},"to":{"krate":1,"index":3023}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":34755,"byte_end":34758,"line_start":442,"line_end":442,"column_start":6,"column_end":9},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":749},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":35063,"byte_end":35066,"line_start":453,"line_end":453,"column_start":21,"column_end":24},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":749},"to":{"krate":1,"index":3241}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":35238,"byte_end":35241,"line_start":462,"line_end":462,"column_start":24,"column_end":27},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":749},"to":{"krate":1,"index":3254}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":35475,"byte_end":35478,"line_start":474,"line_end":474,"column_start":22,"column_end":25},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":760},"to":{"krate":1,"index":3023}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":35531,"byte_end":35534,"line_start":477,"line_end":477,"column_start":6,"column_end":9},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":35882,"byte_end":35885,"line_start":489,"line_end":489,"column_start":21,"column_end":24},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":760},"to":{"krate":1,"index":3241}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":36100,"byte_end":36103,"line_start":499,"line_end":499,"column_start":24,"column_end":27},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":760},"to":{"krate":1,"index":3254}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":36328,"byte_end":36331,"line_start":511,"line_end":511,"column_start":22,"column_end":25},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":3023}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":36341,"byte_end":36344,"line_start":513,"line_end":513,"column_start":6,"column_end":9},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":771},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":36655,"byte_end":36658,"line_start":524,"line_end":524,"column_start":21,"column_end":24},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":771},"to":{"krate":1,"index":3241}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":36925,"byte_end":36929,"line_start":538,"line_end":538,"column_start":22,"column_end":26},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":780},"to":{"krate":1,"index":3023}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":36939,"byte_end":36943,"line_start":540,"line_end":540,"column_start":6,"column_end":10},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":780},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":37256,"byte_end":37260,"line_start":551,"line_end":551,"column_start":21,"column_end":25},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":780},"to":{"krate":1,"index":3241}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":37518,"byte_end":37521,"line_start":565,"line_end":565,"column_start":22,"column_end":25},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":789},"to":{"krate":1,"index":3023}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":38130,"byte_end":38133,"line_start":594,"line_end":594,"column_start":22,"column_end":25},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":792},"to":{"krate":1,"index":3023}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":38143,"byte_end":38146,"line_start":596,"line_end":596,"column_start":6,"column_end":9},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":38457,"byte_end":38460,"line_start":607,"line_end":607,"column_start":21,"column_end":24},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":792},"to":{"krate":1,"index":3241}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":38714,"byte_end":38718,"line_start":621,"line_end":621,"column_start":22,"column_end":26},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":801},"to":{"krate":1,"index":3023}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":38728,"byte_end":38732,"line_start":623,"line_end":623,"column_start":6,"column_end":10},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":801},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":39045,"byte_end":39049,"line_start":634,"line_end":634,"column_start":21,"column_end":25},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":801},"to":{"krate":1,"index":3241}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":39308,"byte_end":39312,"line_start":648,"line_end":648,"column_start":22,"column_end":26},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":810},"to":{"krate":1,"index":3023}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":39342,"byte_end":39346,"line_start":651,"line_end":651,"column_start":6,"column_end":10},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\peripheral\\mod.rs","byte_start":39679,"byte_end":39683,"line_start":663,"line_end":663,"column_start":21,"column_end":25},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":810},"to":{"krate":1,"index":3241}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":118431,"byte_end":118438,"line_start":9,"line_end":9,"column_start":6,"column_end":13},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":120352,"byte_end":120357,"line_start":92,"line_end":92,"column_start":6,"column_end":11},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1082},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":120841,"byte_end":120846,"line_start":115,"line_end":115,"column_start":6,"column_end":11},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1098},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\control.rs","byte_start":121330,"byte_end":121334,"line_start":138,"line_end":138,"column_start":6,"column_end":10},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\faultmask.rs","byte_start":122114,"byte_end":122123,"line_start":12,"line_end":12,"column_start":6,"column_end":15},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":122790,"byte_end":122795,"line_start":9,"line_end":9,"column_start":6,"column_end":11},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\fpscr.rs","byte_start":129093,"byte_end":129098,"line_start":267,"line_end":267,"column_start":6,"column_end":11},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-0.7.4\\src\\register\\primask.rs","byte_start":130987,"byte_end":130994,"line_start":12,"line_end":12,"column_start":6,"column_end":13},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1187},"to":{"krate":4294967295,"index":4294967295}}]}