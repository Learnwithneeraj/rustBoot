{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2","program":"C:\\Users\\HP\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","embedded_dma","--edition=2018","C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","codegen-units=1","-C","debuginfo=2","-C","metadata=343c69d5b0414f84","-C","extra-filename=-343c69d5b0414f84","--out-dir","c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\updt_fw_blinky_red\\target\\rls\\thumbv7em-none-eabihf\\debug\\deps","--target","thumbv7em-none-eabihf","-L","dependency=c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\updt_fw_blinky_red\\target\\rls\\thumbv7em-none-eabihf\\debug\\deps","-L","dependency=c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\updt_fw_blinky_red\\target\\rls\\debug\\deps","--extern","stable_deref_trait=c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\updt_fw_blinky_red\\target\\rls\\thumbv7em-none-eabihf\\debug\\deps\\libstable_deref_trait-9f8506206a31e4d8.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\HP\\.rustup/toolchains/nightly-x86_64-pc-windows-msvc"],"output":"c:\\Users\\HP\\Downloads\\rustBoot\\rustBoot\\boards\\firmware\\stm32f411\\updt_fw_blinky_red\\target\\rls\\thumbv7em-none-eabihf\\debug\\deps\\libembedded_dma-343c69d5b0414f84.rmeta"},"prelude":{"crate_id":{"name":"embedded_dma","disambiguator":[9775104514929442219,0]},"crate_root":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src","external_crates":[{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[17152468072794654791,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[17051862311917027046,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7467457181772381774,0]}},{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","num":4,"id":{"name":"stable_deref_trait","disambiguator":[8414296240448430208,0]}}],"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":0,"byte_end":13070,"line_start":1,"line_end":390,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":0,"byte_end":13070,"line_start":1,"line_end":390,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":33},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":83},{"krate":0,"index":87},{"krate":0,"index":91},{"krate":0,"index":95},{"krate":0,"index":99},{"krate":0,"index":103},{"krate":0,"index":107},{"krate":0,"index":111},{"krate":0,"index":115},{"krate":0,"index":119},{"krate":0,"index":123},{"krate":0,"index":127},{"krate":0,"index":131},{"krate":0,"index":135},{"krate":0,"index":139},{"krate":0,"index":143},{"krate":0,"index":147},{"krate":0,"index":151},{"krate":0,"index":155},{"krate":0,"index":159},{"krate":0,"index":163},{"krate":0,"index":167},{"krate":0,"index":171},{"krate":0,"index":175},{"krate":0,"index":179},{"krate":0,"index":183},{"krate":0,"index":187},{"krate":0,"index":191},{"krate":0,"index":195},{"krate":0,"index":199},{"krate":0,"index":203},{"krate":0,"index":207},{"krate":0,"index":211},{"krate":0,"index":215},{"krate":0,"index":219},{"krate":0,"index":223},{"krate":0,"index":227},{"krate":0,"index":231},{"krate":0,"index":235},{"krate":0,"index":239},{"krate":0,"index":243},{"krate":0,"index":247},{"krate":0,"index":251},{"krate":0,"index":255},{"krate":0,"index":259},{"krate":0,"index":263},{"krate":0,"index":267},{"krate":0,"index":271},{"krate":0,"index":275},{"krate":0,"index":279},{"krate":0,"index":283},{"krate":0,"index":287},{"krate":0,"index":291},{"krate":0,"index":295},{"krate":0,"index":299},{"krate":0,"index":303},{"krate":0,"index":307},{"krate":0,"index":311},{"krate":0,"index":315},{"krate":0,"index":319},{"krate":0,"index":323},{"krate":0,"index":327},{"krate":0,"index":331},{"krate":0,"index":335},{"krate":0,"index":339},{"krate":0,"index":343},{"krate":0,"index":347},{"krate":0,"index":351},{"krate":0,"index":355},{"krate":0,"index":359},{"krate":0,"index":363},{"krate":0,"index":367},{"krate":0,"index":371},{"krate":0,"index":375},{"krate":0,"index":379},{"krate":0,"index":383},{"krate":0,"index":387},{"krate":0,"index":391},{"krate":0,"index":395},{"krate":0,"index":399},{"krate":0,"index":403},{"krate":0,"index":407},{"krate":0,"index":411},{"krate":0,"index":415},{"krate":0,"index":419},{"krate":0,"index":423},{"krate":0,"index":427},{"krate":0,"index":431},{"krate":0,"index":435},{"krate":0,"index":439},{"krate":0,"index":443},{"krate":0,"index":447},{"krate":0,"index":451},{"krate":0,"index":455},{"krate":0,"index":459},{"krate":0,"index":463},{"krate":0,"index":467},{"krate":0,"index":471},{"krate":0,"index":475},{"krate":0,"index":479},{"krate":0,"index":483},{"krate":0,"index":487},{"krate":0,"index":491},{"krate":0,"index":495},{"krate":0,"index":499},{"krate":0,"index":503},{"krate":0,"index":507},{"krate":0,"index":511},{"krate":0,"index":515},{"krate":0,"index":519},{"krate":0,"index":523},{"krate":0,"index":527},{"krate":0,"index":531},{"krate":0,"index":535},{"krate":0,"index":539},{"krate":0,"index":543},{"krate":0,"index":547},{"krate":0,"index":551},{"krate":0,"index":555},{"krate":0,"index":559},{"krate":0,"index":563},{"krate":0,"index":567},{"krate":0,"index":571},{"krate":0,"index":575},{"krate":0,"index":579},{"krate":0,"index":583},{"krate":0,"index":587},{"krate":0,"index":591},{"krate":0,"index":595},{"krate":0,"index":599},{"krate":0,"index":603},{"krate":0,"index":607},{"krate":0,"index":611},{"krate":0,"index":615},{"krate":0,"index":619},{"krate":0,"index":623},{"krate":0,"index":627},{"krate":0,"index":631},{"krate":0,"index":635},{"krate":0,"index":639},{"krate":0,"index":643},{"krate":0,"index":647},{"krate":0,"index":651},{"krate":0,"index":655},{"krate":0,"index":659},{"krate":0,"index":663},{"krate":0,"index":667},{"krate":0,"index":671},{"krate":0,"index":675},{"krate":0,"index":679},{"krate":0,"index":683},{"krate":0,"index":687},{"krate":0,"index":691},{"krate":0,"index":695},{"krate":0,"index":699},{"krate":0,"index":703},{"krate":0,"index":707},{"krate":0,"index":711},{"krate":0,"index":715},{"krate":0,"index":719},{"krate":0,"index":723},{"krate":0,"index":727},{"krate":0,"index":731},{"krate":0,"index":735},{"krate":0,"index":739},{"krate":0,"index":743},{"krate":0,"index":747},{"krate":0,"index":751},{"krate":0,"index":755},{"krate":0,"index":759},{"krate":0,"index":763},{"krate":0,"index":767},{"krate":0,"index":771},{"krate":0,"index":775},{"krate":0,"index":779},{"krate":0,"index":783},{"krate":0,"index":787},{"krate":0,"index":791},{"krate":0,"index":795},{"krate":0,"index":799},{"krate":0,"index":803},{"krate":0,"index":807},{"krate":0,"index":811},{"krate":0,"index":815},{"krate":0,"index":819},{"krate":0,"index":823},{"krate":0,"index":827},{"krate":0,"index":831},{"krate":0,"index":835},{"krate":0,"index":839},{"krate":0,"index":843},{"krate":0,"index":847},{"krate":0,"index":851},{"krate":0,"index":855},{"krate":0,"index":859},{"krate":0,"index":863},{"krate":0,"index":867},{"krate":0,"index":871},{"krate":0,"index":875},{"krate":0,"index":879},{"krate":0,"index":883},{"krate":0,"index":887},{"krate":0,"index":891},{"krate":0,"index":895},{"krate":0,"index":899},{"krate":0,"index":903},{"krate":0,"index":907},{"krate":0,"index":911},{"krate":0,"index":915},{"krate":0,"index":919},{"krate":0,"index":923},{"krate":0,"index":927},{"krate":0,"index":931},{"krate":0,"index":935},{"krate":0,"index":939},{"krate":0,"index":943},{"krate":0,"index":947},{"krate":0,"index":951},{"krate":0,"index":955},{"krate":0,"index":959},{"krate":0,"index":963},{"krate":0,"index":967},{"krate":0,"index":971},{"krate":0,"index":975},{"krate":0,"index":979},{"krate":0,"index":983},{"krate":0,"index":987},{"krate":0,"index":991},{"krate":0,"index":995},{"krate":0,"index":999},{"krate":0,"index":1003},{"krate":0,"index":1007},{"krate":0,"index":1011},{"krate":0,"index":1015},{"krate":0,"index":1019},{"krate":0,"index":1023},{"krate":0,"index":1027},{"krate":0,"index":1031},{"krate":0,"index":1035},{"krate":0,"index":1039},{"krate":0,"index":1043},{"krate":0,"index":1047},{"krate":0,"index":1051},{"krate":0,"index":1055},{"krate":0,"index":1059},{"krate":0,"index":1063},{"krate":0,"index":1067},{"krate":0,"index":1071},{"krate":0,"index":1075},{"krate":0,"index":1079},{"krate":0,"index":1083},{"krate":0,"index":1087},{"krate":0,"index":1091},{"krate":0,"index":1095},{"krate":0,"index":1099},{"krate":0,"index":1103},{"krate":0,"index":1107},{"krate":0,"index":1111},{"krate":0,"index":1115},{"krate":0,"index":1119},{"krate":0,"index":1123},{"krate":0,"index":1127},{"krate":0,"index":1131},{"krate":0,"index":1135},{"krate":0,"index":1139},{"krate":0,"index":1143},{"krate":0,"index":1147},{"krate":0,"index":1151},{"krate":0,"index":1155},{"krate":0,"index":1159},{"krate":0,"index":1163},{"krate":0,"index":1167},{"krate":0,"index":1171},{"krate":0,"index":1175},{"krate":0,"index":1179},{"krate":0,"index":1183},{"krate":0,"index":1187},{"krate":0,"index":1191},{"krate":0,"index":1195},{"krate":0,"index":1199},{"krate":0,"index":1203},{"krate":0,"index":1207},{"krate":0,"index":1211},{"krate":0,"index":1215},{"krate":0,"index":1219},{"krate":0,"index":1223},{"krate":0,"index":1227},{"krate":0,"index":1231},{"krate":0,"index":1235},{"krate":0,"index":1239},{"krate":0,"index":1243},{"krate":0,"index":1247},{"krate":0,"index":1251},{"krate":0,"index":1255},{"krate":0,"index":1259},{"krate":0,"index":1263},{"krate":0,"index":1267},{"krate":0,"index":1271},{"krate":0,"index":1275},{"krate":0,"index":1279},{"krate":0,"index":1283},{"krate":0,"index":1287},{"krate":0,"index":1291},{"krate":0,"index":1295},{"krate":0,"index":1299},{"krate":0,"index":1303},{"krate":0,"index":1307},{"krate":0,"index":1311},{"krate":0,"index":1315},{"krate":0,"index":1319},{"krate":0,"index":1323},{"krate":0,"index":1327},{"krate":0,"index":1331},{"krate":0,"index":1335},{"krate":0,"index":1339},{"krate":0,"index":1343},{"krate":0,"index":1347},{"krate":0,"index":1351},{"krate":0,"index":1355},{"krate":0,"index":1359},{"krate":0,"index":1363},{"krate":0,"index":1367},{"krate":0,"index":1371},{"krate":0,"index":1375},{"krate":0,"index":1379},{"krate":0,"index":1383},{"krate":0,"index":1387},{"krate":0,"index":1391},{"krate":0,"index":1395},{"krate":0,"index":1399},{"krate":0,"index":1403},{"krate":0,"index":1407},{"krate":0,"index":1411},{"krate":0,"index":1415},{"krate":0,"index":1419},{"krate":0,"index":1423},{"krate":0,"index":1427},{"krate":0,"index":1431},{"krate":0,"index":1435},{"krate":0,"index":1439},{"krate":0,"index":1443},{"krate":0,"index":1447},{"krate":0,"index":1451},{"krate":0,"index":1455},{"krate":0,"index":1459},{"krate":0,"index":1463},{"krate":0,"index":1467},{"krate":0,"index":1471},{"krate":0,"index":1475},{"krate":0,"index":1479},{"krate":0,"index":1483},{"krate":0,"index":1487},{"krate":0,"index":1491},{"krate":0,"index":1495},{"krate":0,"index":1499},{"krate":0,"index":1503},{"krate":0,"index":1507},{"krate":0,"index":1511},{"krate":0,"index":1515},{"krate":0,"index":1519},{"krate":0,"index":1523},{"krate":0,"index":1527},{"krate":0,"index":1531},{"krate":0,"index":1535},{"krate":0,"index":1539},{"krate":0,"index":1543},{"krate":0,"index":1547},{"krate":0,"index":1551},{"krate":0,"index":1555},{"krate":0,"index":1559},{"krate":0,"index":1563},{"krate":0,"index":1567},{"krate":0,"index":1571},{"krate":0,"index":1575},{"krate":0,"index":1579},{"krate":0,"index":1583},{"krate":0,"index":1587},{"krate":0,"index":1591},{"krate":0,"index":1595},{"krate":0,"index":1599},{"krate":0,"index":1603},{"krate":0,"index":1607},{"krate":0,"index":1611},{"krate":0,"index":1615},{"krate":0,"index":1619},{"krate":0,"index":1623},{"krate":0,"index":1627},{"krate":0,"index":1631},{"krate":0,"index":1635},{"krate":0,"index":1639},{"krate":0,"index":1643},{"krate":0,"index":1647},{"krate":0,"index":1651},{"krate":0,"index":1655},{"krate":0,"index":1659},{"krate":0,"index":1663},{"krate":0,"index":1667},{"krate":0,"index":1671},{"krate":0,"index":1675},{"krate":0,"index":1679},{"krate":0,"index":1683},{"krate":0,"index":1687},{"krate":0,"index":1691},{"krate":0,"index":1695},{"krate":0,"index":1699},{"krate":0,"index":1703},{"krate":0,"index":1707},{"krate":0,"index":1711},{"krate":0,"index":1715},{"krate":0,"index":1719},{"krate":0,"index":1723},{"krate":0,"index":1727},{"krate":0,"index":1731},{"krate":0,"index":1735},{"krate":0,"index":1739},{"krate":0,"index":1743},{"krate":0,"index":1747},{"krate":0,"index":1751},{"krate":0,"index":1755},{"krate":0,"index":1759},{"krate":0,"index":1763},{"krate":0,"index":1767},{"krate":0,"index":1771},{"krate":0,"index":1775},{"krate":0,"index":1779},{"krate":0,"index":1783},{"krate":0,"index":1787},{"krate":0,"index":1791},{"krate":0,"index":1795},{"krate":0,"index":1799},{"krate":0,"index":1803},{"krate":0,"index":1807},{"krate":0,"index":1811},{"krate":0,"index":1815},{"krate":0,"index":1819},{"krate":0,"index":1823},{"krate":0,"index":1827},{"krate":0,"index":1831},{"krate":0,"index":1835},{"krate":0,"index":1839},{"krate":0,"index":1843},{"krate":0,"index":1847},{"krate":0,"index":1851},{"krate":0,"index":1855},{"krate":0,"index":1859},{"krate":0,"index":1863},{"krate":0,"index":1867},{"krate":0,"index":1871},{"krate":0,"index":1875},{"krate":0,"index":1879},{"krate":0,"index":1883},{"krate":0,"index":1887},{"krate":0,"index":1891},{"krate":0,"index":1895},{"krate":0,"index":1899},{"krate":0,"index":1903},{"krate":0,"index":1907},{"krate":0,"index":1911},{"krate":0,"index":1915},{"krate":0,"index":1919},{"krate":0,"index":1923},{"krate":0,"index":1927},{"krate":0,"index":1931},{"krate":0,"index":1935},{"krate":0,"index":1939},{"krate":0,"index":1943},{"krate":0,"index":1947},{"krate":0,"index":1951},{"krate":0,"index":1955},{"krate":0,"index":1959},{"krate":0,"index":1963},{"krate":0,"index":1967},{"krate":0,"index":1971},{"krate":0,"index":1975},{"krate":0,"index":1979},{"krate":0,"index":1983},{"krate":0,"index":1987},{"krate":0,"index":1991},{"krate":0,"index":1995},{"krate":0,"index":1999},{"krate":0,"index":2003},{"krate":0,"index":2007},{"krate":0,"index":2011},{"krate":0,"index":2015},{"krate":0,"index":2019},{"krate":0,"index":2023},{"krate":0,"index":2027},{"krate":0,"index":2031},{"krate":0,"index":2035},{"krate":0,"index":2039},{"krate":0,"index":2043},{"krate":0,"index":2047},{"krate":0,"index":2051},{"krate":0,"index":2055},{"krate":0,"index":2059},{"krate":0,"index":2063},{"krate":0,"index":2067},{"krate":0,"index":2071},{"krate":0,"index":2075},{"krate":0,"index":2079},{"krate":0,"index":2083},{"krate":0,"index":2087},{"krate":0,"index":2091},{"krate":0,"index":2095},{"krate":0,"index":2099},{"krate":0,"index":2103},{"krate":0,"index":2107},{"krate":0,"index":2111},{"krate":0,"index":2115},{"krate":0,"index":2119},{"krate":0,"index":2123},{"krate":0,"index":2127},{"krate":0,"index":2131},{"krate":0,"index":2135},{"krate":0,"index":2139},{"krate":0,"index":2143},{"krate":0,"index":2147},{"krate":0,"index":2151},{"krate":0,"index":2155},{"krate":0,"index":2159},{"krate":0,"index":2163},{"krate":0,"index":2167},{"krate":0,"index":2171},{"krate":0,"index":2175},{"krate":0,"index":2179},{"krate":0,"index":2183},{"krate":0,"index":2187},{"krate":0,"index":2191},{"krate":0,"index":2195},{"krate":0,"index":2199},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":79}],"decl_id":null,"docs":" Traits to aid the correct use of buffers in DMA abstractions.","sig":null,"attributes":[{"value":"/ Traits to aid the correct use of buffers in DMA abstractions.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":0,"byte_end":65,"line_start":1,"line_end":1,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":66,"byte_end":69,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This library provides the `ReadBuffer` and `WriteBuffer` unsafe traits to be used as bounds to","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":70,"byte_end":168,"line_start":3,"line_end":3,"column_start":1,"column_end":99}},{"value":"/ buffers types used in DMA operations.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":169,"byte_end":210,"line_start":4,"line_end":4,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":211,"byte_end":214,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ There are some subtleties to the extent of the guarantees provided by these traits, all of these","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":215,"byte_end":315,"line_start":6,"line_end":6,"column_start":1,"column_end":101}},{"value":"/ subtleties are properly documented in the safety requirements in this crate. However, as a","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":316,"byte_end":410,"line_start":7,"line_end":7,"column_start":1,"column_end":95}},{"value":"/ measure of redundancy, some are listed below:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":411,"byte_end":460,"line_start":8,"line_end":8,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":461,"byte_end":464,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * The traits only guarantee a stable location while no `&mut self` methods are called upon","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":465,"byte_end":559,"line_start":10,"line_end":10,"column_start":1,"column_end":95}},{"value":"/ `Self` (with the exception of [`write_buffer`](trait.WriteBuffer.html#tymethod.write_buffer) in","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":560,"byte_end":659,"line_start":11,"line_end":11,"column_start":1,"column_end":100}},{"value":"/ our case). This is to allow types like `Vec`, this restriction doesn't apply to `Self::Target`.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":660,"byte_end":759,"line_start":12,"line_end":12,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":760,"byte_end":763,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * The location is only guaranteed to be stable for the duration of `Self`, that means that","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":764,"byte_end":858,"line_start":14,"line_end":14,"column_start":1,"column_end":95}},{"value":"/ `Self` doesn't need to be `'static`, i.e. `&'a [u8]` is valid. This can be a bit subtle for","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":859,"byte_end":954,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ most DMA abstractions, because they almost always require `'static`, given the intrinsics of","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":955,"byte_end":1051,"line_start":16,"line_end":16,"column_start":1,"column_end":97}},{"value":"/ `mem::forget` and the Rust language itself. Those APIs must also bound to `'static` and not only","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":1052,"byte_end":1152,"line_start":17,"line_end":17,"column_start":1,"column_end":101}},{"value":"/ `WriteBuffer`/`ReadBuffer`. The reason we don't require `'static` in the traits themselves is","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":1153,"byte_end":1250,"line_start":18,"line_end":18,"column_start":1,"column_end":98}},{"value":"/ because it would block implementations that can deal with stack allocated buffers, like APIs","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":1251,"byte_end":1347,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ that use closures to prevent memory corruption.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":1348,"byte_end":1399,"line_start":20,"line_end":20,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":1400,"byte_end":1403,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ If your API also needs a `'static` bound, prefer the use of [StaticReadBuffer] and","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":1404,"byte_end":1490,"line_start":22,"line_end":22,"column_start":1,"column_end":87}},{"value":"/ [StaticWriteBuffer]. They are a stricter version that requires a `'static` lifetime invariant,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":1491,"byte_end":1589,"line_start":23,"line_end":23,"column_start":1,"column_end":99}},{"value":"/ while also allowing end users to __unsafely__ bypass it.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":1590,"byte_end":1650,"line_start":24,"line_end":24,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":1651,"byte_end":1654,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ If you are not sure which version of the traits you should be bounding to in your DMA","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":1655,"byte_end":1744,"line_start":26,"line_end":26,"column_start":1,"column_end":90}},{"value":"/ implementations, prefer the \"Static\" versions, they are sound for a bigger number of techniques","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":1745,"byte_end":1844,"line_start":27,"line_end":27,"column_start":1,"column_end":100}},{"value":"/ that deal with DMA.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":1845,"byte_end":1868,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":1869,"byte_end":1872,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ The above list is not exhaustive, for a complete set of requirements and guarantees, the","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":1873,"byte_end":1965,"line_start":30,"line_end":30,"column_start":1,"column_end":93}},{"value":"/ documentation of each trait and method should be analyzed.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":1966,"byte_end":2028,"line_start":31,"line_end":31,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":2029,"byte_end":2032,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [StaticReadBuffer]: trait.StaticReadBuffer.html","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":2033,"byte_end":2084,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/ [StaticWriteBuffer]: trait.StaticWriteBuffer.html","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":2085,"byte_end":2138,"line_start":34,"line_end":34,"column_start":1,"column_end":54}},{"value":"no_std","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":2139,"byte_end":2149,"line_start":35,"line_end":35,"column_start":1,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":2806,"byte_end":2816,"line_start":55,"line_end":55,"column_start":18,"column_end":28},"name":"ReadBuffer","qualname":"::ReadBuffer","value":"ReadBuffer","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24}],"decl_id":null,"docs":" Trait for buffers that can be given to DMA for reading.","sig":null,"attributes":[{"value":"/ Trait for buffers that can be given to DMA for reading.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":2262,"byte_end":2321,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":2322,"byte_end":2325,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":2326,"byte_end":2338,"line_start":45,"line_end":45,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":2339,"byte_end":2342,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ The implementing type must be safe to use for DMA reads. This means:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":2343,"byte_end":2415,"line_start":47,"line_end":47,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":2416,"byte_end":2419,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ - It must be a pointer that references the actual buffer.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":2420,"byte_end":2481,"line_start":49,"line_end":49,"column_start":1,"column_end":62}},{"value":"/ - As long as no `&mut self` method is called on the implementing object:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":2482,"byte_end":2558,"line_start":50,"line_end":50,"column_start":1,"column_end":77}},{"value":"/   - `read_buffer` must always return the same value, if called multiple","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":2559,"byte_end":2634,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/     times.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":2635,"byte_end":2649,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/   - The memory specified by the pointer and size returned by `read_buffer`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":2650,"byte_end":2728,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/     must not be freed as long as `self` is not dropped.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":2729,"byte_end":2788,"line_start":54,"line_end":54,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":2828,"byte_end":2832,"line_start":56,"line_end":56,"column_start":10,"column_end":14},"name":"Word","qualname":"::ReadBuffer::Word","value":"type Word;","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":3210,"byte_end":3221,"line_start":69,"line_end":69,"column_start":15,"column_end":26},"name":"read_buffer","qualname":"::ReadBuffer::read_buffer","value":"pub unsafe fn read_buffer(&Self) -> (*const Self::Word, usize)","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Provide a buffer usable for DMA reads.","sig":null,"attributes":[{"value":"/ Provide a buffer usable for DMA reads.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":2839,"byte_end":2881,"line_start":58,"line_end":58,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":2886,"byte_end":2889,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ The return value is:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":2894,"byte_end":2918,"line_start":60,"line_end":60,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":2923,"byte_end":2926,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ - pointer to the start of the buffer","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":2931,"byte_end":2971,"line_start":62,"line_end":62,"column_start":5,"column_end":45}},{"value":"/ - buffer size in words","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":2976,"byte_end":3002,"line_start":63,"line_end":63,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":3007,"byte_end":3010,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":3015,"byte_end":3027,"line_start":65,"line_end":65,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":3032,"byte_end":3035,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Once this method has been called, it is unsafe to call any `&mut self`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":3040,"byte_end":3114,"line_start":67,"line_end":67,"column_start":5,"column_end":79}},{"value":"/ methods on this object as long as the returned value is in use (by DMA).","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":3119,"byte_end":3195,"line_start":68,"line_end":68,"column_start":5,"column_end":81}}]},{"kind":"Trait","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":3919,"byte_end":3930,"line_start":86,"line_end":86,"column_start":18,"column_end":29},"name":"WriteBuffer","qualname":"::WriteBuffer","value":"WriteBuffer","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27}],"decl_id":null,"docs":" Trait for buffers that can be given to DMA for writing.","sig":null,"attributes":[{"value":"/ Trait for buffers that can be given to DMA for writing.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":3263,"byte_end":3322,"line_start":72,"line_end":72,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":3323,"byte_end":3326,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":3327,"byte_end":3339,"line_start":74,"line_end":74,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":3340,"byte_end":3343,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ The implementing type must be safe to use for DMA writes. This means:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":3344,"byte_end":3417,"line_start":76,"line_end":76,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":3418,"byte_end":3421,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ - It must be a pointer that references the actual buffer.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":3422,"byte_end":3483,"line_start":78,"line_end":78,"column_start":1,"column_end":62}},{"value":"/ - `Target` must be a type that is valid for any possible byte pattern.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":3484,"byte_end":3558,"line_start":79,"line_end":79,"column_start":1,"column_end":75}},{"value":"/ - As long as no `&mut self` method, except for `write_buffer`, is called on","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":3559,"byte_end":3638,"line_start":80,"line_end":80,"column_start":1,"column_end":80}},{"value":"/   the implementing object:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":3639,"byte_end":3669,"line_start":81,"line_end":81,"column_start":1,"column_end":31}},{"value":"/   - `write_buffer` must always return the same value, if called multiple","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":3670,"byte_end":3746,"line_start":82,"line_end":82,"column_start":1,"column_end":77}},{"value":"/     times.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":3747,"byte_end":3761,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/   - The memory specified by the pointer and size returned by `write_buffer`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":3762,"byte_end":3841,"line_start":84,"line_end":84,"column_start":1,"column_end":80}},{"value":"/     must not be freed as long as `self` is not dropped.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":3842,"byte_end":3901,"line_start":85,"line_end":85,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":3942,"byte_end":3946,"line_start":87,"line_end":87,"column_start":10,"column_end":14},"name":"Word","qualname":"::WriteBuffer::Word","value":"type Word;","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":4361,"byte_end":4373,"line_start":101,"line_end":101,"column_start":15,"column_end":27},"name":"write_buffer","qualname":"::WriteBuffer::write_buffer","value":"pub unsafe fn write_buffer(&mut Self) -> (*mut Self::Word, usize)","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Provide a buffer usable for DMA writes.","sig":null,"attributes":[{"value":"/ Provide a buffer usable for DMA writes.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":3953,"byte_end":3996,"line_start":89,"line_end":89,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":4001,"byte_end":4004,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ The return value is:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":4009,"byte_end":4033,"line_start":91,"line_end":91,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":4038,"byte_end":4041,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ - pointer to the start of the buffer","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":4046,"byte_end":4086,"line_start":93,"line_end":93,"column_start":5,"column_end":45}},{"value":"/ - buffer size in words","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":4091,"byte_end":4117,"line_start":94,"line_end":94,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":4122,"byte_end":4125,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":4130,"byte_end":4142,"line_start":96,"line_end":96,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":4147,"byte_end":4150,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ Once this method has been called, it is unsafe to call any `&mut self`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":4155,"byte_end":4229,"line_start":98,"line_end":98,"column_start":5,"column_end":79}},{"value":"/ methods, except for `write_buffer`, on this object as long as the","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":4234,"byte_end":4303,"line_start":99,"line_end":99,"column_start":5,"column_end":74}},{"value":"/ returned value is in use (by DMA).","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":4308,"byte_end":4346,"line_start":100,"line_end":100,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":5261,"byte_end":5265,"line_start":137,"line_end":137,"column_start":18,"column_end":22},"name":"Word","qualname":"::Word","value":"Word","parent":null,"children":[],"decl_id":null,"docs":" Trait for DMA word types used by the blanket DMA buffer impls.","sig":null,"attributes":[{"value":"/ Trait for DMA word types used by the blanket DMA buffer impls.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":4965,"byte_end":5031,"line_start":130,"line_end":130,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":5032,"byte_end":5035,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":5036,"byte_end":5048,"line_start":132,"line_end":132,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":5049,"byte_end":5052,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ Types that implement this trait must be valid for every possible byte","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":5053,"byte_end":5126,"line_start":134,"line_end":134,"column_start":1,"column_end":74}},{"value":"/ pattern. This is to ensure that, whatever DMA writes into the buffer,","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":5127,"byte_end":5200,"line_start":135,"line_end":135,"column_start":1,"column_end":74}},{"value":"/ we won't get UB due to invalid values.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":5201,"byte_end":5243,"line_start":136,"line_end":136,"column_start":1,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":5820,"byte_end":5830,"line_start":157,"line_end":157,"column_start":18,"column_end":28},"name":"ReadTarget","qualname":"::ReadTarget","value":"ReadTarget","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49}],"decl_id":null,"docs":" Trait for `Deref` targets used by the blanket `DmaReadBuffer` impl.","sig":null,"attributes":[{"value":"/ Trait for `Deref` targets used by the blanket `DmaReadBuffer` impl.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":5493,"byte_end":5564,"line_start":148,"line_end":148,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":5565,"byte_end":5568,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ This trait exists solely to work around","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":5569,"byte_end":5612,"line_start":150,"line_end":150,"column_start":1,"column_end":44}},{"value":"/ https://github.com/rust-lang/rust/issues/20400.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":5613,"byte_end":5664,"line_start":151,"line_end":151,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":5665,"byte_end":5668,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":5669,"byte_end":5681,"line_start":153,"line_end":153,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":5682,"byte_end":5685,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ - `as_read_buffer` must adhere to the safety requirements","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":5686,"byte_end":5747,"line_start":155,"line_end":155,"column_start":1,"column_end":62}},{"value":"/   documented for `DmaReadBuffer::dma_read_buffer`.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":5748,"byte_end":5802,"line_start":156,"line_end":156,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":5842,"byte_end":5846,"line_start":158,"line_end":158,"column_start":10,"column_end":14},"name":"Word","qualname":"::ReadTarget::Word","value":"type Word: Word;","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":5862,"byte_end":5876,"line_start":160,"line_end":160,"column_start":8,"column_end":22},"name":"as_read_buffer","qualname":"::ReadTarget::as_read_buffer","value":"pub fn as_read_buffer(&Self) -> (*const Self::Word, usize)","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":6408,"byte_end":6419,"line_start":176,"line_end":176,"column_start":18,"column_end":29},"name":"WriteTarget","qualname":"::WriteTarget","value":"WriteTarget","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52}],"decl_id":null,"docs":" Trait for `DerefMut` targets used by the blanket `DmaWriteBuffer` impl.","sig":null,"attributes":[{"value":"/ Trait for `DerefMut` targets used by the blanket `DmaWriteBuffer` impl.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":6074,"byte_end":6149,"line_start":167,"line_end":167,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":6150,"byte_end":6153,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ This trait exists solely to work around","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":6154,"byte_end":6197,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/ https://github.com/rust-lang/rust/issues/20400.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":6198,"byte_end":6249,"line_start":170,"line_end":170,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":6250,"byte_end":6253,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":6254,"byte_end":6266,"line_start":172,"line_end":172,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":6267,"byte_end":6270,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ - `as_write_buffer` must adhere to the safety requirements","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":6271,"byte_end":6333,"line_start":174,"line_end":174,"column_start":1,"column_end":63}},{"value":"/   documented for `DmaWriteBuffer::dma_write_buffer`.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":6334,"byte_end":6390,"line_start":175,"line_end":175,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":6431,"byte_end":6435,"line_start":177,"line_end":177,"column_start":10,"column_end":14},"name":"Word","qualname":"::WriteTarget::Word","value":"type Word: Word;","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":6451,"byte_end":6466,"line_start":179,"line_end":179,"column_start":8,"column_end":23},"name":"as_write_buffer","qualname":"::WriteTarget::as_write_buffer","value":"pub fn as_write_buffer(&mut Self) -> (*mut Self::Word, usize)","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":9364,"byte_end":9380,"line_start":268,"line_end":268,"column_start":18,"column_end":34},"name":"StaticReadBuffer","qualname":"::StaticReadBuffer","value":"StaticReadBuffer: ReadBuffer","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71}],"decl_id":null,"docs":" Trait for buffers that can be given to DMA for reading. This is a more strict version of\n [ReadBuffer](trait.ReadBuffer.html), if you are not sure about which one to use on your safe\n API, prefer this one. This trait also allows end users to __unsafely__ bypass the `'static`\n invariant.","sig":null,"attributes":[{"value":"/ Trait for buffers that can be given to DMA for reading. This is a more strict version of","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":8867,"byte_end":8959,"line_start":259,"line_end":259,"column_start":1,"column_end":93}},{"value":"/ [ReadBuffer](trait.ReadBuffer.html), if you are not sure about which one to use on your safe","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":8960,"byte_end":9056,"line_start":260,"line_end":260,"column_start":1,"column_end":97}},{"value":"/ API, prefer this one. This trait also allows end users to __unsafely__ bypass the `'static`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":9057,"byte_end":9152,"line_start":261,"line_end":261,"column_start":1,"column_end":96}},{"value":"/ invariant.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":9153,"byte_end":9167,"line_start":262,"line_end":262,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":9168,"byte_end":9171,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":9172,"byte_end":9184,"line_start":264,"line_end":264,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":9185,"byte_end":9188,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ This has the same invariants as [ReadBuffer](trait.ReadBuffer.html) with the additional","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":9189,"byte_end":9280,"line_start":266,"line_end":266,"column_start":1,"column_end":92}},{"value":"/ requirement that the buffer should have a `'static` lifetime.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":9281,"byte_end":9346,"line_start":267,"line_end":267,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":9404,"byte_end":9408,"line_start":269,"line_end":269,"column_start":10,"column_end":14},"name":"Word","qualname":"::StaticReadBuffer::Word","value":"type Word;","parent":{"krate":0,"index":69},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":9786,"byte_end":9804,"line_start":282,"line_end":282,"column_start":15,"column_end":33},"name":"static_read_buffer","qualname":"::StaticReadBuffer::static_read_buffer","value":"pub unsafe fn static_read_buffer(&Self)\n-> (*const <Self as StaticReadBuffer>::Word, usize)","parent":{"krate":0,"index":69},"children":[],"decl_id":null,"docs":" Provide a buffer usable for DMA reads.","sig":null,"attributes":[{"value":"/ Provide a buffer usable for DMA reads.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":9415,"byte_end":9457,"line_start":271,"line_end":271,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":9462,"byte_end":9465,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ The return value is:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":9470,"byte_end":9494,"line_start":273,"line_end":273,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":9499,"byte_end":9502,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ - pointer to the start of the buffer","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":9507,"byte_end":9547,"line_start":275,"line_end":275,"column_start":5,"column_end":45}},{"value":"/ - buffer size in words","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":9552,"byte_end":9578,"line_start":276,"line_end":276,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":9583,"byte_end":9586,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":9591,"byte_end":9603,"line_start":278,"line_end":278,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":9608,"byte_end":9611,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ Once this method has been called, it is unsafe to call any `&mut self`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":9616,"byte_end":9690,"line_start":280,"line_end":280,"column_start":5,"column_end":79}},{"value":"/ methods on this object as long as the returned value is in use (by DMA).","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":9695,"byte_end":9771,"line_start":281,"line_end":281,"column_start":5,"column_end":81}}]},{"kind":"Trait","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":10369,"byte_end":10386,"line_start":294,"line_end":294,"column_start":18,"column_end":35},"name":"StaticWriteBuffer","qualname":"::StaticWriteBuffer","value":"StaticWriteBuffer: WriteBuffer","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74}],"decl_id":null,"docs":" Trait for buffers that can be given to DMA for writing. This is a more strict version of\n [WriteBuffer](trait.WriteBuffer.html), if you are not sure about which one to use on your safe\n API, prefer this one. This trait also allows end users to __unsafely__ bypass the `'static`\n invariant.","sig":null,"attributes":[{"value":"/ Trait for buffers that can be given to DMA for writing. This is a more strict version of","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":9868,"byte_end":9960,"line_start":285,"line_end":285,"column_start":1,"column_end":93}},{"value":"/ [WriteBuffer](trait.WriteBuffer.html), if you are not sure about which one to use on your safe","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":9961,"byte_end":10059,"line_start":286,"line_end":286,"column_start":1,"column_end":99}},{"value":"/ API, prefer this one. This trait also allows end users to __unsafely__ bypass the `'static`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":10060,"byte_end":10155,"line_start":287,"line_end":287,"column_start":1,"column_end":96}},{"value":"/ invariant.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":10156,"byte_end":10170,"line_start":288,"line_end":288,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":10171,"byte_end":10174,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":10175,"byte_end":10187,"line_start":290,"line_end":290,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":10188,"byte_end":10191,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ This has the same invariants as [WriteBuffer](trait.WriteBuffer.html) with the additional","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":10192,"byte_end":10285,"line_start":292,"line_end":292,"column_start":1,"column_end":94}},{"value":"/ requirement that the buffer should have a `'static` lifetime.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":10286,"byte_end":10351,"line_start":293,"line_end":293,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":10411,"byte_end":10415,"line_start":295,"line_end":295,"column_start":10,"column_end":14},"name":"Word","qualname":"::StaticWriteBuffer::Word","value":"type Word;","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":10830,"byte_end":10849,"line_start":309,"line_end":309,"column_start":15,"column_end":34},"name":"static_write_buffer","qualname":"::StaticWriteBuffer::static_write_buffer","value":"pub unsafe fn static_write_buffer(&mut Self)\n-> (*mut <Self as StaticWriteBuffer>::Word, usize)","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Provide a buffer usable for DMA writes.","sig":null,"attributes":[{"value":"/ Provide a buffer usable for DMA writes.","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":10422,"byte_end":10465,"line_start":297,"line_end":297,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":10470,"byte_end":10473,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The return value is:","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":10478,"byte_end":10502,"line_start":299,"line_end":299,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":10507,"byte_end":10510,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ - pointer to the start of the buffer","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":10515,"byte_end":10555,"line_start":301,"line_end":301,"column_start":5,"column_end":45}},{"value":"/ - buffer size in words","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":10560,"byte_end":10586,"line_start":302,"line_end":302,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":10591,"byte_end":10594,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":10599,"byte_end":10611,"line_start":304,"line_end":304,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":10616,"byte_end":10619,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ Once this method has been called, it is unsafe to call any `&mut self`","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":10624,"byte_end":10698,"line_start":306,"line_end":306,"column_start":5,"column_end":79}},{"value":"/ methods, except for `write_buffer`, on this object as long as the","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":10703,"byte_end":10772,"line_start":307,"line_end":307,"column_start":5,"column_end":74}},{"value":"/ returned value is in use (by DMA).","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":10777,"byte_end":10815,"line_start":308,"line_end":308,"column_start":5,"column_end":43}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":4507,"byte_end":4508,"line_start":106,"line_end":106,"column_start":34,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":4749,"byte_end":4750,"line_start":118,"line_end":118,"column_start":35,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":6698,"byte_end":6699,"line_start":186,"line_end":186,"column_start":37,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":6761,"byte_end":6762,"line_start":190,"line_end":190,"column_start":38,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":8822,"byte_end":8833,"line_start":255,"line_end":255,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":10974,"byte_end":10975,"line_start":312,"line_end":312,"column_start":59,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":11213,"byte_end":11214,"line_start":320,"line_end":320,"column_start":61,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":4507,"byte_end":4508,"line_start":106,"line_end":106,"column_start":34,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":29},"to":{"krate":0,"index":22}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":4749,"byte_end":4750,"line_start":118,"line_end":118,"column_start":35,"column_end":36},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":34},"to":{"krate":0,"index":25}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":6698,"byte_end":6699,"line_start":186,"line_end":186,"column_start":37,"column_end":38},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":54},"to":{"krate":0,"index":47}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":6761,"byte_end":6762,"line_start":190,"line_end":190,"column_start":38,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":57},"to":{"krate":0,"index":50}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":8822,"byte_end":8833,"line_start":255,"line_end":255,"column_start":45,"column_end":56},"kind":{"Impl":{"id":12}},"from":{"krate":1,"index":24463},"to":{"krate":0,"index":50}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":9382,"byte_end":9392,"line_start":268,"line_end":268,"column_start":36,"column_end":46},"kind":"SuperTrait","from":{"krate":0,"index":22},"to":{"krate":0,"index":69}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":10388,"byte_end":10399,"line_start":294,"line_end":294,"column_start":37,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":25},"to":{"krate":0,"index":72}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":10974,"byte_end":10975,"line_start":312,"line_end":312,"column_start":59,"column_end":60},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":76},"to":{"krate":0,"index":69}},{"span":{"file_name":"C:\\Users\\HP\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\embedded-dma-0.1.2\\src\\lib.rs","byte_start":11213,"byte_end":11214,"line_start":320,"line_end":320,"column_start":61,"column_end":62},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":80},"to":{"krate":0,"index":72}}]}